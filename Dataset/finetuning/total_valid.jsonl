{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query shows critical event result\n Topic: PaloAltoCDL"}, {"role": "assistant", "content": "PaloAltoCDLEvent\n| where TimeGenerated > ago(24h)\n| where EventSeverity has 'critical'  or tostring(ThreatSeverity) has_any ('high', 'critical')\n| extend UrlCustomEntity = Url, AccountCustomEntity = DstUsername\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This rule detects anomalous pattern in port usage. The rule utilize [ASIM](https://aka.ms/AboutASIM) normalization, and is applied to any source which supports the ASIM Network Session schema. To tune the rule to your environment configure it using the NetworkSession_Monitor_Configuration watchlist. Note that to enhance performance, the rule uses summarized data generated from the summarization logic App.\n Topic: Network Session Essentials"}, {"role": "assistant", "content": "let lookback = 14d;\nlet mapping = _GetWatchlist('NetworkSession_Monitor_Configuration')\n| where Type == \"Detection\" and ThresholdType == \"Anomaly\" and Severity != \"Disabled\"  \n| extend Ports = split(Ports,\",\"),\n        App = split(App,\",\"),\n        Protocol = split(Protocol,\",\"),\n        Direction = split(Direction,\",\"),\n        Action = split(Action,\",\")\n| project Ports, App, Protocol, Direction, Action, Type, ThresholdType, Threshold, Severity, Tactic, Name, Description\n| mv-expand Ports\n| mv-expand App\n| mv-expand Protocol\n| mv-expand Direction\n| mv-expand Action\n| extend Ports = tostring(Ports), App = tostring(App), Protocol = tostring(Protocol), Direction = tostring(Direction), Action = tostring(Action), Threshold = toint(Threshold)\n;\nlet AnomalyThreshold = 2.5;\nlet eps = materialize (_Im_NetworkSession | project TimeGenerated | where TimeGenerated > ago(5m) | count | extend Count = Count/300);\nlet maxSummarizedTime = toscalar (\n    union isfuzzy=true \n        (\n            NetworkCustomAnalytics_protocol_CL\n                | where EventTime_t > ago(lookback)\n                | summarize max_TimeGenerated=max(EventTime_t)\n                | extend max_TimeGenerated = datetime_add('minute',10,max_TimeGenerated)\n        ),\n        (\n            print(ago(lookback))\n            | project max_TimeGenerated = print_0\n        )\n      | summarize maxTimeGenerated = max(max_TimeGenerated) \n    );\nlet nosummary = materialize(\n              union isfuzzy=true \n                (\n                    NetworkCustomAnalytics_protocol_CL\n                    | where EventTime_t > ago(1d) \n                    | project v = int(2)\n                ),\n                (\n                    print int(1) \n                    | project v = print_0\n                )\n                | summarize maxv = max(v)\n                | extend nosum = (maxv > 1)\n              );\nlet allData = union isfuzzy=true \n    (\n        (datatable(exists:int, nosum:bool)[1,false] | where toscalar(eps) > 1000 | join (nosummary) on nosum) | join (\n        _Im_NetworkSession(starttime=todatetime(ago(2d)), endtime=now())\n        | where TimeGenerated > maxSummarizedTime\n        | summarize Count=count() by NetworkProtocol, DstPortNumber, DstAppName, NetworkDirection, DvcAction, bin(TimeGenerated,10m)\n        | extend EventTime = TimeGenerated, Count = toint(Count), DstPortNumber = toint(DstPortNumber), exists=int(1)\n        ) on exists\n        | project-away exists, maxv, nosum*\n    ),\n    (\n        (datatable(exists:int, nosum:bool)[1,false] | where toscalar(eps) between (501 .. 1000) | join (nosummary) on nosum) | join (\n        _Im_NetworkSession(starttime=todatetime(ago(3d)), endtime=now())\n        | where TimeGenerated > maxSummarizedTime\n        | summarize Count=count() by NetworkProtocol, DstPortNumber, DstAppName, NetworkDirection, DvcAction, bin(TimeGenerated,10m)\n        | extend EventTime = TimeGenerated, Count = toint(Count), DstPortNumber = toint(DstPortNumber), exists=int(1)\n        ) on exists\n        | project-away exists, maxv, nosum*\n    ),\n    (\n        (datatable(exists:int, nosum:bool)[1,false] | where toscalar(eps) <= 500 | join (nosummary) on nosum) | join (\n        _Im_NetworkSession(starttime=todatetime(ago(4d)), endtime=now())\n        | where TimeGenerated > maxSummarizedTime\n        | summarize Count=count() by NetworkProtocol, DstPortNumber, DstAppName, NetworkDirection, DvcAction, bin(TimeGenerated,10m)\n        | extend EventTime = TimeGenerated, Count = toint(Count), DstPortNumber = toint(DstPortNumber), exists=int(1)\n        ) on exists\n        | project-away exists, maxv, nosum*\n    ),\n    (\n        NetworkCustomAnalytics_protocol_CL\n        | where EventTime_t > ago(lookback)\n        | project-rename NetworkProtocol=NetworkProtocol_s, DstPortNumber=DstPortNumber_d, DstAppName=DstAppName_s, NetworkDirection=NetworkDirection_s, DvcAction=DvcAction_s, Count=count__d, EventTime=EventTime_t\n        | extend Count = toint(Count),DstPortNumber = toint(DstPortNumber) \n    )\n;\nallData\n| where isnotempty(DstPortNumber)\n| make-series Total=sum(Count) on EventTime from ago(lookback) to now() step 1d by DstPortNumber, NetworkProtocol, NetworkDirection, DvcAction\n| extend (anomalies, score, baseline) = series_decompose_anomalies(Total, AnomalyThreshold, -1, 'linefit')\n| mv-expand anomalies, score, baseline, EventTime, Total\n| extend anomalies = toint(anomalies), score = toint(score), baseline = toint(baseline), EventTime = todatetime(EventTime), Total = tolong(Total)\n| where EventTime >= ago(1d)\n| extend DstPortNumber = trim_end(\".0\",tostring(DstPortNumber))\n| where score > 2*AnomalyThreshold\n| join kind=inner ['mapping'] where Ports == DstPortNumber\n| where (Protocol == \"*\" or Protocol has NetworkProtocol)\n                and (Direction == \"*\" or Direction has NetworkDirection)\n                and (Action == \"*\" or Action has DvcAction)  \n| project Name, Description, NetworkProtocol, DstPortNumber, NetworkDirection, DvcAction, Severity, Tactic\n| summarize NetworkProtocols=make_set_if(NetworkProtocol,isnotempty(NetworkProtocol),20), \n                    NetworkDirections=make_set_if(NetworkDirection,isnotempty(NetworkDirection),5), \n                    DvcActions=make_set_if(DvcAction,isnotempty(DvcAction),10) by Name, Severity, Tactic, DstPortNumber, Description\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects when errors occur during deployment new changes/policies.\n Topic: McAfee ePolicy Orchestrator"}, {"role": "assistant", "content": "McAfeeEPOEvent\n| where EventId == '2412'\n| extend IPCustomEntity = DvcIpAddr, HostCustomEntity = DvcHostname\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies a match across various data feeds for named pipe IOCs related to the Solorigate incident.\n For the sysmon events required for this detection, logging for Named Pipe Events needs to be configured in Sysmon config (Event ID 17 and Event ID 18)\n Reference: https://techcommunity.microsoft.com/t5/azure-sentinel/solarwinds-post-compromise-hunting-with-azure-sentinel/ba-p/1995095\n Topic: Detections"}, {"role": "assistant", "content": "(union isfuzzy=true\n(Event\n| where Source == \"Microsoft-Windows-Sysmon\"\n| where EventID in (17,18)\n| where EventData has '583da945-62af-10e8-4902-a8f205c72b2e'\n| extend EventData = parse_xml(EventData).DataItem.EventData.Data\n| mv-expand bagexpansion=array EventData\n| evaluate bag_unpack(EventData)\n| extend Key = tostring(column_ifexists('@Name', \"\")), Value = column_ifexists('#text', \"\")\n| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, MG, ManagementGroupName, _ResourceId)\n| extend PipeName = column_ifexists(\"PipeName\", \"\")\n| extend Account = User\n| extend AccountName = tostring(split(User, @\"\\\")[1]), AccountNTDomain = tostring(split(User, @\"\\\")[0])\n),\n(\nSecurityEvent\n| where EventID == '5145'\n// %%4418 looks for presence of CreatePipeInstance value\n| where AccessList has '%%4418'\n| where RelativeTargetName has '583da945-62af-10e8-4902-a8f205c72b2e'\n| extend AccountName = SubjectUserName, AccountNTDomain = SubjectDomainName\n),\n(\nWindowsEvent\n| where EventID == '5145' and EventData has '%%4418'  and EventData has '583da945-62af-10e8-4902-a8f205c72b2e'\n// %%4418 looks for presence of CreatePipeInstance value\n| extend AccessList= tostring(EventData.AccessList)\n| where AccessList has '%%4418'\n| extend RelativeTargetName= tostring(EventData.RelativeTargetName)\n| where RelativeTargetName has '583da945-62af-10e8-4902-a8f205c72b2e'\n| extend Account =  strcat(tostring(EventData.SubjectDomainName),\"\\\\\", tostring(EventData.SubjectUserName))\n| extend AccountName = tostring(EventData.SubjectUserName), AccountNTDomain = tostring(EventData.SubjectDomainName)\n)\n)\n| extend HostName = tostring(split(Computer, \".\")[0]), DomainIndex = toint(indexof(Computer, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(Computer, DomainIndex + 1), Computer)\n| project-away DomainIndex\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query identifies phishing emails sent that were successfully delivered, by top IP addressess. cutoff default value is 5, adjust the value as needed. \n Topic: Microsoft Defender XDR"}, {"role": "assistant", "content": "// Adjust the cutoff as needed \nlet cutoff = 5;\nEmailEvents\n| where ThreatTypes has \"Malware\" or ThreatTypes has \"Phish\" \n| summarize count() by SenderIPv4 \n| where count_ > cutoff\n| join kind=inner EmailEvents on SenderIPv4  \n| where DeliveryAction =~ \"Delivered\"\n| extend Name = tostring(split(SenderFromAddress, '@', 0)[0]), UPNSuffix = tostring(split(SenderFromAddress, '@', 1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = SenderIPv4\n| extend MailBox_0_MailboxPrimaryAddress = RecipientEmailAddress\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query searches for having 1 Global Administrator reduces the surface area of attack for your Azure tenant, but sets up a single point of failure for the whole tenant. Global Administrators have access to all aspects of Azure\n Topic: SenservaPro"}, {"role": "assistant", "content": "SenservaPro_CL\n| where ControlName_s == 'AzureSecureScoreOneAdmin'\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query looks for sign ins by the Microsoft Entra ID Connect Sync account to Azure where properties about the logon are anomalous.\nThis query uses Microsoft Sentinels UEBA features to detect these suspicious properties.\nA threat actor may attempt to steal the Sync account credentials and use them to access Azure resources. This alert should be \nreviewed to ensure that the log in came was from a legitimate source.\n Topic: Detections"}, {"role": "assistant", "content": "BehaviorAnalytics\n// User modification is expected from this account so focus on logons\n| where ActivityType =~ \"LogOn\"\n| where UserName startswith \"Sync_\" and UsersInsights.AccountDisplayName =~ \"On-Premises Directory Synchronization Service Account\"\n// Filter out this expected activity\n| where ActivityInsights.App !~ \"Microsoft Azure Active Directory Connect\"\n| where InvestigationPriority > 0\n| extend Name = split(UserPrincipalName, \"@\")[0], UPNSuffix = split(UserPrincipalName, \"@\")[1]\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This hunting query detect anomalous pattern in port usage with ASIM normalization. To tune the query to your environment configure it using the NetworkSession_Monitor_Configuration watchlist.\n Topic: Network Session Essentials"}, {"role": "assistant", "content": "let lookback = 14d;\nlet mapping = _GetWatchlist('NetworkSession_Monitor_Configuration')\n| where Type == \"Hunting\" and ThresholdType == \"Anomaly\" and Severity != \"Disabled\"  \n| extend Ports = split(Ports,\",\"),\n        App = split(App,\",\"),\n        Protocol = split(Protocol,\",\"),\n        Direction = split(Direction,\",\"),\n        Action = split(Action,\",\")\n| project Ports, App, Protocol, Direction, Action, Type, ThresholdType, Threshold, Severity, Tactic, Name, Description\n| mv-expand Ports\n| mv-expand App\n| mv-expand Protocol\n| mv-expand Direction\n| mv-expand Action\n| extend Ports = tostring(Ports), App = tostring(App), Protocol = tostring(Protocol), Direction = tostring(Direction), Action = tostring(Action), Threshold = toint(Threshold)\n;\nlet AnomalyThreshold = 2.5;\nlet eps = materialize (_Im_NetworkSession | project TimeGenerated | where TimeGenerated > ago(5m) | count | extend Count = Count/300);\nlet maxSummarizedTime = toscalar (\n    union isfuzzy=true \n        (\n            NetworkCustomAnalytics_protocol_CL\n                | where EventTime_t > ago(lookback)\n                | summarize max_TimeGenerated=max(EventTime_t)\n                | extend max_TimeGenerated = datetime_add('minute',10,max_TimeGenerated)\n        ),\n        (\n            print(ago(lookback))\n            | project max_TimeGenerated = print_0\n        )\n      | summarize maxTimeGenerated = max(max_TimeGenerated) \n    );\nlet nosummary = materialize(\n              union isfuzzy=true \n                (\n                    NetworkCustomAnalytics_protocol_CL\n                    | where EventTime_t > ago(1d) \n                    | project v = int(2)\n                ),\n                (\n                    print int(1) \n                    | project v = print_0\n                )\n                | summarize maxv = max(v)\n                | extend nosum = (maxv > 1)\n              );\nlet allData = union isfuzzy=true \n    (\n        (datatable(exists:int, nosum:bool)[1,false] | where toscalar(eps) > 1000 | join (nosummary) on nosum) | join (\n        _Im_NetworkSession(starttime=todatetime(ago(2d)), endtime=now())\n        | where TimeGenerated > maxSummarizedTime\n        | summarize Count=count() by NetworkProtocol, DstPortNumber, DstAppName, NetworkDirection, DvcAction, bin(TimeGenerated,10m)\n        | extend EventTime = TimeGenerated, Count = toint(Count), DstPortNumber = toint(DstPortNumber), exists=int(1)\n        ) on exists\n        | project-away exists, maxv, nosum*\n    ),\n    (\n        (datatable(exists:int, nosum:bool)[1,false] | where toscalar(eps) between (501 .. 1000) | join (nosummary) on nosum) | join (\n        _Im_NetworkSession(starttime=todatetime(ago(3d)), endtime=now())\n        | where TimeGenerated > maxSummarizedTime\n        | summarize Count=count() by NetworkProtocol, DstPortNumber, DstAppName, NetworkDirection, DvcAction, bin(TimeGenerated,10m)\n        | extend EventTime = TimeGenerated, Count = toint(Count), DstPortNumber = toint(DstPortNumber), exists=int(1)\n        ) on exists\n        | project-away exists, maxv, nosum*\n    ),\n    (\n        (datatable(exists:int, nosum:bool)[1,false] | where toscalar(eps) <= 500 | join (nosummary) on nosum) | join (\n        _Im_NetworkSession(starttime=todatetime(ago(4d)), endtime=now())\n        | where TimeGenerated > maxSummarizedTime\n        | summarize Count=count() by NetworkProtocol, DstPortNumber, DstAppName, NetworkDirection, DvcAction, bin(TimeGenerated,10m)\n        | extend EventTime = TimeGenerated, Count = toint(Count), DstPortNumber = toint(DstPortNumber), exists=int(1)\n        ) on exists\n        | project-away exists, maxv, nosum*\n    ),\n    (\n        NetworkCustomAnalytics_protocol_CL\n        | where EventTime_t > ago(lookback)\n        | project-rename NetworkProtocol=NetworkProtocol_s, DstPortNumber=DstPortNumber_d, DstAppName=DstAppName_s, NetworkDirection=NetworkDirection_s, DvcAction=DvcAction_s, Count=count__d, EventTime=EventTime_t\n        | extend Count = toint(Count),DstPortNumber = toint(DstPortNumber) \n    )\n;\nallData\n| where isnotempty(DstPortNumber)\n| make-series Total=count() on EventTime from ago(lookback) to now() step 1d by DstPortNumber, NetworkProtocol, NetworkDirection, DvcAction\n| extend (anomalies, score, baseline) = series_decompose_anomalies(Total, AnomalyThreshold, -1, 'linefit')\n| mv-expand anomalies, score, baseline, EventTime, Total\n| extend anomalies = toint(anomalies), score = toint(score), baseline = toint(baseline), EventTime = todatetime(EventTime), Total = tolong(Total)\n| where EventTime >= ago(1d)\n| extend DstPortNumber = trim_end(\".0\",tostring(DstPortNumber))\n| where score > 2*AnomalyThreshold\n| join kind=inner ['mapping'] where Ports == DstPortNumber\n| where (Protocol == \"*\" or Protocol has NetworkProtocol)\n                and (Direction == \"*\" or Direction has NetworkDirection)\n                and (Action == \"*\" or Action has DvcAction)  \n| project Name, Description, NetworkProtocol, DstPortNumber, NetworkDirection, DvcAction, Severity, Tactic\n| summarize NetworkProtocols=make_set_if(NetworkProtocol,isnotempty(NetworkProtocol),20), \n                    NetworkDirections=make_set_if(NetworkDirection,isnotempty(NetworkDirection),5), \n                    DvcActions=make_set_if(DvcAction,isnotempty(DvcAction),10) by Name, Severity, Tactic, DstPortNumber, Description"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Alerts from Tanium Threat Response (THR) that can be acted upon by Microsoft Sentinel Playbook Topic: Tanium"}, {"role": "assistant", "content": "let cap = (s:string) { strcat(toupper(substring(s,0,1)), substring(s,1))  };\nTaniumThreatResponse_CL\n| extend TaniumUrl = pack(\"computer_name\", Computer_Name_s, \"alert_guid\", Alert_Id_g, \"ip_address\", Computer_IP_s, \"platform\", Match_Details_finding_system_info_platform_s)\n| extend TaniumTHRLabel = strcat(cap(Intel_Type_s),\" - \", cap(Intel_Name_s), \" - \", cap(Match_Details_match_type_s))\n| where Computer_IP_s !contains \"N/A\"\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This alert leverages Defender for IoT to detect multiple scans on the network indicating new devices, functionality, application misconfiguration, or malicious reconnaissance activity on the network.\n Topic: IoTOTThreatMonitoringwithDefenderforIoT"}, {"role": "assistant", "content": "SecurityAlert\n| where ProviderName == \"IoTSecurity\"\n| where AlertName has \"Scan\"\n| extend ExtendedProperties = parse_json(ExtendedProperties)\n| where tostring(ExtendedProperties.isNew) == \"True\"\n| extend DeviceId = tostring(ExtendedProperties.DeviceId), \n         SourceDeviceAddress = tostring(ExtendedProperties.SourceDeviceAddress), \n         DestDeviceAddress = tostring(ExtendedProperties.DestinationDeviceAddress), \n         RemediationSteps = tostring(parse_json(RemediationSteps)[0]), \n         Protocol = tostring(ExtendedProperties.Protocol), \n         AlertManagementUri = tostring(ExtendedProperties.AlertManagementUri)\n| project\n  TimeGenerated,\n  DeviceId,\n  ProductName,\n  ProductComponentName,\n  AlertSeverity,\n  AlertName,\n  Description,\n  Protocol,\n  SourceDeviceAddress,\n  DestDeviceAddress,\n  RemediationSteps,\n  Tactics,\n  Entities,\n  VendorOriginalId,\n  AlertLink,\n  AlertManagementUri,\n  Techniques\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies when a rare Resource and ResourceGroup deployment occurs by a previously unseen caller.\n Topic: Azure Activity"}, {"role": "assistant", "content": "// Add or remove operation names below as per your requirements. For operations lists, please refer to https://learn.microsoft.com/en-us/Azure/role-based-access-control/resource-provider-operations#all\nlet szOperationNames = dynamic([\"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Resources/deployments/write\", \"Microsoft.Resources/subscriptions/resourceGroups/write\"]);\nlet starttime = 14d;\nlet endtime = 1d;\nlet RareCaller = AzureActivity\n| where TimeGenerated between (ago(starttime) .. ago(endtime))\n| where OperationNameValue in~ (szOperationNames)\n| summarize count() by CallerIpAddress, Caller, OperationNameValue, bin(TimeGenerated,1d)\n// Returns all the records from the right side that don't have matches from the left.\n| join kind=rightantisemi (\nAzureActivity\n| where TimeGenerated > ago(endtime)\n| where OperationNameValue in~ (szOperationNames)\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), ActivityTimeStamp = make_set(TimeGenerated,100), ActivityStatusValue = make_set(ActivityStatusValue,100), CorrelationIds = make_set(CorrelationId,100), ResourceGroups = make_set(ResourceGroup,100), ResourceIds = make_set(_ResourceId,100), ActivityCountByCallerIPAddress = count()\nby CallerIpAddress, Caller, OperationNameValue) on CallerIpAddress, Caller, OperationNameValue;\nRareCaller\n| extend Name = iif(Caller has '@',tostring(split(Caller,'@',0)[0]),\"\")\n| extend UPNSuffix = iif(Caller has '@',tostring(split(Caller,'@',1)[0]),\"\")\n| extend AadUserId = iif(Caller !has '@',Caller,\"\")\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects possible malware outbreak.\n Topic: Cisco Secure Endpoint"}, {"role": "assistant", "content": "let threshold = 2;\nCiscoSecureEndpoint\n| where isnotempty(ThreatName)\n| summarize infected = makeset(DstHostname) by ThreatName, bin(TimeGenerated, 10m)\n| where array_length(infected) >= threshold\n| extend MalwareCustomEntity = ThreatName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "The query detects Windows binaries, that can be executed from a non-default directory (e.g. C:\\Windows\\, C:\\Windows\\System32 etc.). \nRef: https://lolbas-project.github.io/\n Topic: Endpoint Threat Protection Essentials"}, {"role": "assistant", "content": "let procList = externaldata(Process:string) [@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Microsoft_Lolbas_Execution_Binaries.csv\"] with (format=\"csv\", ignoreFirstRecord=True);\nSecurityEvent\n| where EventID == 4688 and Process has_any (procList) and not (NewProcessName has (\"C:\\\\Windows\\\\\"))\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventID, Computer, SubjectUserName, NewProcessName, Process, CommandLine\n| extend Name=tostring(split(SubjectUserName, \"@\")[0]), UPNSuffix=tostring(split(SubjectUserName, \"@\")[1])\n| extend HostName = iif(Computer has '.',substring(Computer,0,indexof(Computer,'.')),Computer) , DnsDomain = iif(Computer has '.',substring(Computer,indexof(Computer,'.')+1),'')\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Generates an incident when an unauthorized link between the network and the Internet is detected by Radiflows iSID. Topic: Radiflow"}, {"role": "assistant", "content": "RadiflowEvent\n| where DeviceProduct =~ 'iSID'\n| where EventClassID in (55, 147, 193, 194)\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This hunting query identifies Accounts in GitHub that have granted access to another account which then grants access to yet another account that may be a sign of compromise.\n Topic: GitHub"}, {"role": "assistant", "content": "\nGitHubAuditData\n| where ImpactedUser != \"\"\n| where Action == \"org.invite_member\" or Action == \"org.add_member\" or Action == \"team.add_member\" or Action == \"repo.add_member\"\n| distinct ImpactedUser, TimeGenerated, Actor\n| project-rename firstUserAdded = ImpactedUser, firstEventTime = TimeGenerated, firstAdderUser = Actor\n| join kind= innerunique (\n  GitHubAuditData\n  | where ImpactedUser != \"\"\n  | where Action == \"org.invite_member\" or Action == \"org.add_member\" or Action == \"team.add_member\" or Action == \"repo.add_member\"\n  | distinct ImpactedUser, TimeGenerated, Actor\n  | project-rename secondUserAdded = ImpactedUser, secondEventTime = TimeGenerated, secondAdderUser = Actor\n) on $left.secondUserAdded == $right.firstUserAdded\n| where secondEventTime between (firstEventTime .. (firstEventTime + 1h))\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detect controller failure and take appropriate response action. Topic: Pure Storage"}, {"role": "assistant", "content": "Syslog\n| where SyslogMessage has \"purity.alert\"\n| extend Message = replace_regex(SyslogMessage, \"#012\", \"\\n\")\n| extend ParsedLog = extract_all(@\"((?P<process>.*?)\\[(?P<processid>.*?)\\]:\\s(?P<object>.*)\\[(?P<responsecode>\\w+)\\][\\s\\S]*Severity:\\s*(?P<severity>\\S+)\\s*(Tag:\\s*(?P<reason>\\S+))?\\s*UTC([\\s\\S]*)Array Name:\\s*(?P<objectname>\\S+)\\s*Domain:\\s*(?P<domainorigin>\\S+)\\s*(?P<part2log>[\\s\\S]*))\", dynamic(['process','processid','object','objectname','responsecode','severity','reason','domainorigin','part2log']), Message)\n| mv-expand ParsedLog\n| extend ResidueLog = tostring(ParsedLog[8])\n| extend Rlog = extract_all(@\"(((Suggested Action:\\s*(?P<action>[\\s\\S]*)\\s*Knowledge Base Article:\\s*(?P<url>.*))|(Knowledge Base Article:\\s*(?P<url>.*)\\s*Suggested Action:\\s*(?P<action>.*)\\s*)|(Suggested Action:\\s*(?P<action>[\\s\\S]*)))(([\\s\\S]*)Purity Version:\\s*(?P<pversion>.*))?\\s*([\\s\\S]*)Variables: \\(below\\)\\s*(?P<subject>[\\s\\S]*))\", dynamic(['action','url','pversion','subject']),ResidueLog)\n| mv-expand Rlog\n| extend PureLogType = ParsedLog[0], PureProcessID = ParsedLog[1], PureObject = ParsedLog[2], PureCode = ParsedLog[4], PureSeverity = ParsedLog[5], PureReason = ParsedLog[6], PureObjectName = ParsedLog[3], PureDomainOrigin = ParsedLog[7], PureAction = Rlog[0], PureUrl = Rlog[1], PureVersion = Rlog[2], PureMessage = Rlog[3]\n| project-away ResidueLog, Rlog, ParsedLog\n| where PureObject matches regex @\"(Controllers ct[0-9] have failed)\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies patterns in the time deltas of contacts between internal and external IPs in Fortinet network data that are consistent with beaconing.\n Accounts for randomness (jitter) and seasonality such as working hours that may have been introduced into the beacon pattern.\n The lookback is set to 1d, the minimum granularity in time deltas is set to 60 seconds and the minimum number of beacons required to emit a  detection is set to 4.\n Increase the lookback period to capture beacons with larger periodicities.\n The jitter tolerance is set to 0.2 - This means we account for an overall 20% deviation from the infered beacon periodicity. Seasonality is dealt with  automatically using series_outliers.\n Note: In large environments it may be necessary to reduce the lookback period to get fast query times.\n Topic: Detections"}, {"role": "assistant", "content": "let starttime = 1d;\nlet TimeDeltaThresholdInSeconds = 60; // we ignore beacons diffs that fall below this threshold\nlet TotalBeaconsThreshold = 4; // minimum number of beacons required in a session to surface a row\nlet JitterTolerance = 0.2; // tolerance to jitter, e.g. - 0.2 = 20% jitter is tolerated either side of the periodicity\nCommonSecurityLog\n| where DeviceVendor == \"Fortinet\"\n| where TimeGenerated > ago(starttime)\n// eliminate bad data\n| where isnotempty(SourceIP) and isnotempty(DestinationIP) and SourceIP != \"0.0.0.0\"\n// filter out deny, close, rst and SNMP to reduce data volume\n| where DeviceAction !in (\"close\", \"client-rst\", \"server-rst\", \"deny\") and DestinationPort != 161\n// map input fields\n| project TimeGenerated , SourceIP, DestinationIP, DestinationPort, ReceivedBytes, SentBytes, DeviceAction\n// where destination IPs are public\n| where ipv4_is_private(DestinationIP) == false\n// sort into source->destination 'sessions'\n| sort by SourceIP asc, DestinationIP asc, DestinationPort asc, TimeGenerated asc\n| serialize\n// time diff the contact times between source and destination to get a list of deltas\n| extend nextTimeGenerated = next(TimeGenerated, 1), nextSourceIP = next(SourceIP, 1), nextDestIP = next(DestinationIP, 1), nextDestPort = next(DestinationPort, 1)\n| extend TimeDeltainSeconds = datetime_diff(\"second\",nextTimeGenerated,TimeGenerated)\n| where SourceIP == nextSourceIP and DestinationIP == nextDestIP and DestinationPort == nextDestPort\n// remove small time deltas below the set threshold\n| where TimeDeltainSeconds > TimeDeltaThresholdInSeconds\n// summarize the deltas by source->destination\n| summarize count(), StartTime=min(TimeGenerated), EndTime=max(TimeGenerated), sum(ReceivedBytes), sum(SentBytes), makelist(TimeDeltainSeconds), makeset(DeviceAction) by SourceIP, DestinationIP, DestinationPort\n// get some statistical properties of the delta distribution and smooth any outliers (e.g. laptop shut overnight, working hours)\n| extend series_stats(list_TimeDeltainSeconds), outliers=series_outliers(list_TimeDeltainSeconds)\n// expand the deltas and the outliers\n| mvexpand list_TimeDeltainSeconds to typeof(double), outliers to typeof(double)\n// replace outliers with the average of the distribution\n| extend list_TimeDeltainSeconds_normalized=iff(outliers > 1.5 or outliers < -1.5, series_stats_list_TimeDeltainSeconds_avg , list_TimeDeltainSeconds)\n// summarize with the smoothed distribution\n| summarize BeaconCount=count(), makelist(list_TimeDeltainSeconds), list_TimeDeltainSeconds_normalized=makelist(list_TimeDeltainSeconds_normalized), makeset(set_DeviceAction) by StartTime, EndTime, SourceIP, DestinationIP, DestinationPort, sum_ReceivedBytes, sum_SentBytes\n// get stats on the smoothed distribution\n| extend series_stats(list_TimeDeltainSeconds_normalized)\n// match jitter tolerance on smoothed distrib\n| extend MaxJitter = (series_stats_list_TimeDeltainSeconds_normalized_avg*JitterTolerance)\n| where series_stats_list_TimeDeltainSeconds_normalized_stdev < MaxJitter\n// where the minimum beacon threshold is satisfied and there was some data transfer\n| where BeaconCount > TotalBeaconsThreshold and (sum_SentBytes > 0 or sum_ReceivedBytes > 0)\n// final projection\n| project StartTime, EndTime, SourceIP, DestinationIP, DestinationPort, BeaconCount, TimeDeltasInSeconds=list_list_TimeDeltainSeconds, Periodicity=series_stats_list_TimeDeltainSeconds_normalized_avg, ReceivedBytes=sum_ReceivedBytes, SentBytes=sum_SentBytes, Actions=set_set_DeviceAction\n// where periodicity is order of magnitude larger than time delta threshold (eliminates FPs whose periodicity is close to the values we ignored)\n| where Periodicity >= (10*TimeDeltaThresholdInSeconds)\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies API level access grants, either via the delegated permissions of a Microsoft Entra application or direct assignment within Dataverse as an application user. Topic: Microsoft Business Applications"}, {"role": "assistant", "content": "let dataverse_app_id = \"00000007-0000-0000-c000-000000000000\";\nlet query_frequency = 1h;\nlet azure_ad_changes = AuditLogs\n    | where TimeGenerated >= ago(query_frequency)\n    | where OperationName =~ 'Update application'\n    | where TargetResources has dataverse_app_id\n    | extend TargetAppName = tostring(TargetResources[0].displayName)\n    | extend TargetAppId = tostring(TargetResources[0].id)\n    | extend UserId = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\n    | extend ClientIp = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\n    | extend NewData = tostring(parse_json(tostring(parse_json(TargetResources)[0].modifiedProperties))[0].newValue)\n    | where NewData has dataverse_app_id;\nlet dataverse_changes = DataverseActivity\n    | where TimeGenerated >= ago(query_frequency)\n    | where (Message == \"Create\" and EntityName == \"systemuser\" and parse_json(Fields)[0].Name == \"applicationid\")\n    | extend TargetAppId = tostring(Fields[0].Value);\nunion azure_ad_changes, dataverse_changes\n| extend\n    CloudAppId = int(32780),\n    AccountName = tostring(split(UserId, '@')[0]),\n    UPNSuffix = tostring(split(UserId, '@')[1])\n| project\n    TimeGenerated,\n    UserId,\n    ClientIp,\n    TargetAppName,\n    TargetAppId,\n    InstanceUrl,\n    CloudAppId,\n    AccountName,\n    UPNSuffix\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects when user queries many tables in short period of time.\n Topic: OracleDatabaseAudit"}, {"role": "assistant", "content": "let tbl_threshold = 10;\nOracleDatabaseAuditEvent\n| where isnotempty(DstUserName)\n| where DbAction =~ 'SELECT'\n| extend TableName = replace(@'[,\\(\\)]', '', extract(@'(?i)SELECT(.*?)FROM\\s(.*?)\\s', 2, Action))\n| where isnotempty(TableName)\n| where TableName !~ 'SELECT'\n| summarize tbl_count = dcount(TableName) by DstUserName, bucket = bin(TimeGenerated, 5m)\n| where tbl_count > tbl_threshold\n| extend AccountCustomEntity = DstUserName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Triggers when API Access has been granted to a new client.\n Topic: GoogleWorkspaceReports"}, {"role": "assistant", "content": "GWorkspaceActivityReports\n| where EventMessage has \"AUTHORIZE_API_CLIENT_ACCESS\"\n| extend AccountCustomEntity = ActorEmail\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This rule detects suspicious sync events that occurred to applications using SCIM for user provisioning. Topic: Authomize"}, {"role": "assistant", "content": "Authomize_v2_CL\n| where ingestion_time() >= ago(30m)\n| extend EventID = id_s, Policy = policy_name_s, Severity = severity_s,Description = description_s,Recommendation = recommendation_s,URL = url_s,Tactics = tactics_s\n| where Policy has \"Password Exfiltration over SCIM application\"\n| project  EventID, Policy, Severity, Description, Recommendation, URL, Category, Tactics"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects requests to unusual URL\n Topic: OracleWebLogicServer"}, {"role": "assistant", "content": "OracleWebLogicServerEvent\n| where isnotempty(UrlOriginal)\n| where UrlOriginal matches regex @'(10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})|(172\\.1[6-9]\\.\\d{1,3}\\.\\d{1,3})|(172\\.2[0-9]\\.\\d{1,3}\\.\\d{1,3})|(172\\.3[0-1]\\.\\d{1,3}\\.\\d{1,3})|(192\\.168\\.\\d{1,3}\\.\\d{1,3})'\n| extend IPCustomEntity = SrcIpAddr, UrlCustomEntity = UrlOriginal\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for service accounts deleted for the last 24 hours.\n Topic: GoogleCloudPlatformIAM"}, {"role": "assistant", "content": "GCP_IAM\n| where TimeGenerated > ago(24h)\n| where PayloadMethodname =~ 'google.iam.admin.v1.DeleteServiceAccount'\n| extend result = parse_json(todynamic(PayloadAuthorizationinfo))[0]['granted']\n| where result =~ 'true'\n| project-away result\n| extend timestamp = TimeGenerated, AccountCustomEntity = PayloadRequestAccountId, IPCustomEntity = SrcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Creates Incidents for Probed events sourced from the Contrast Protect agent.\n Topic: Contrast Protect"}, {"role": "assistant", "content": "let extract_data=(a:string, k:string) {\n  parse_urlquery(replace(@';', @'&', a))[\"Query Parameters\"][k]\n};\n\nCommonSecurityLog \n| where DeviceVendor == \"Contrast Security\"\n| where AdditionalExtensions contains \"PROBED\" or AdditionalExtensions contains \"INEFFECTIVE\"\n| extend DeviceProduct\n| extend SourceIP\n| extend DeviceVersion\n| extend Activity\n| extend ApplicationProtocol\n| extend RequestURL\n| extend RequestMethod\n| extend Rule = extract_data(AdditionalExtensions, 'pri')\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies Office operations that are typically rare and can provide capabilities useful to attackers.\n Topic: Microsoft 365"}, {"role": "assistant", "content": "OfficeActivity\n| where Operation in~ ( \"Add-MailboxPermission\", \"Add-MailboxFolderPermission\", \"Set-Mailbox\", \"New-ManagementRoleAssignment\", \"New-InboxRule\", \"Set-InboxRule\", \"Set-TransportRule\")\nand not(UserId has_any ('NT AUTHORITY\\\\SYSTEM (Microsoft.Exchange.ServiceHost)', 'NT AUTHORITY\\\\SYSTEM (Microsoft.Exchange.AdminApi.NetCore)', 'NT AUTHORITY\\\\SYSTEM (w3wp)', 'devilfish-applicationaccount') and Operation in~ ( \"Add-MailboxPermission\", \"Set-Mailbox\"))\n| extend ClientIPOnly = tostring(extract_all(@'\\[?(::ffff:)?(?P<IPAddress>(\\d+\\.\\d+\\.\\d+\\.\\d+)|[^\\]]+)\\]?', dynamic([\"IPAddress\"]), ClientIP)[0])\n| extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for critical severity events.\n Topic: Claroty"}, {"role": "assistant", "content": "ClarotyEvent\n| where TimeGenerated > ago(24h)\n| where EventSeverity == '5'\n| extend IPCustomEntity = DstIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects several users with the same MAC address.\n Topic: PaloAltoCDL"}, {"role": "assistant", "content": "let threshold = 2;\nPaloAltoCDLEvent\n| where EventResourceId =~ 'TRAFFIC'\n| where isnotempty(DestinationMACAddress) and isnotempty(DstUsername)\n| summarize UserSet = make_set(DstUsername) by DestinationMACAddress\n| extend Users = array_length(UserSet)\n| where Users >= threshold\n| extend AccountCustomEntity = UserSet, IPCustomEntity = DestinationMACAddress\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects possible phishing mail.\n Topic: Trend Micro Cloud App Security"}, {"role": "assistant", "content": "let threshold = 5;\nTrendMicroCAS\n| where EventCategoryType in~ ('exchange', 'gmail', 'exchangeserver')\n| where isnotempty(SrcFileName)\n| where isnotempty(SecurityRiskName)\n| summarize r_users = makeset(DstUserName) by SrcFileName, bin(TimeGenerated, 30m)\n| where array_length(r_users) > threshold\n| extend AccountCustomEntity = r_users\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects multiple login failures by user.\n Topic: Snowflake"}, {"role": "assistant", "content": "let threshold = 10;\nSnowflake\n| where EventType =~ 'LOGIN'\n| where IS_SUCCESS_s =~ 'No'\n| summarize count() by TargetUsername, bin(TimeGenerated, 5m)\n| where count_ > threshold\n| extend AccountCustomEntity = TargetUsername\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Find users who gained access to the largest number of target assets in the selected time range\n Topic: ZeroNetworks"}, {"role": "assistant", "content": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nZNSegmentAudit\n| where TimeGenerated > ago(endtime-starttime)\n| where AuditTypeId in (9,12,20,22,23,24)\n| where DestinationEntityId !startswith \"b:\"\n| summarize AffectedEntities=make_set(DestinationEntityName) by PerformedByName\n| extend numOfTargetEntities=array_length(AffectedEntities)\n| order by numOfTargetEntities desc\n| extend Account_0_FullName = PerformedByName\n| extend Host_0_NetBiosName = AffectedEntities\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies a match in Syslog from Recorded Future C2 DNS Name Domains Risklist.\n Topic: Recorded Future"}, {"role": "assistant", "content": "// Identifies a match in Syslog from the Recorded Future DOMAIN Malware C2 DNS Name \nlet dt_lookBack = 1h;\nlet ioc_lookBack = 1d;\n//Create a list of TLDs in our threat feed for later validation\nlet list_tlds = ThreatIntelligenceIndicator\n| where TimeGenerated > ago(ioc_lookBack)\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == 'Recorded Future - Domains - Command and Control Activity'\n| where isnotempty(DomainName)\n| extend parts = split(DomainName, '.')\n| extend tld = parts[(array_length(parts)-1)]\n| summarize count() by tostring(tld)\n| summarize make_list(tld);\nThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == 'Recorded Future - Domains - Command and Control Activity'\n// Picking up only IOC's that contain the entities we want\n| where isnotempty(DomainName)\n| join (\n  Syslog\n  | where TimeGenerated > ago(dt_lookBack)\n  //Extract domain patterns from syslog message\n  | extend domain = extract(\"(([a-z0-9]+(-[a-z0-9]+)*\\\\.)+[a-z]{2,})\",1, tolower(SyslogMessage))\n  | where isnotempty(domain)\n  | extend parts = split(domain, '.')\n  //Split out the TLD\n  | extend tld = parts[(array_length(parts)-1)]\n  //Validate parsed domain by checking if the TLD is in the list of TLDs in our threat feed\n  | where tld in~ (list_tlds)\n  | extend Syslog_TimeGenerated = TimeGenerated\n  ) \non $left.DomainName==$right.domain\n| where Syslog_TimeGenerated >= TimeGenerated and Syslog_TimeGenerated < ExpirationDateTime\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, Description, ActivityGroupNames, IndicatorId, ThreatType, ExpirationDateTime, ConfidenceScore, Syslog_TimeGenerated, SyslogMessage, Computer, ProcessName, domain, HostIP, Url\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Dynatrace has detected an ongoing attack in your environment.\n Topic: Dynatrace"}, {"role": "assistant", "content": "DynatraceAttacks\n| where State != 'ALLOWLISTED'\n| summarize  arg_max(TimeStamp, *) by AttackId\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Rule helps to detect a new alerts generated in BitSight.\n Topic: BitSight"}, {"role": "assistant", "content": "let timeframe = 24h;\nBitSightAlerts\n| where ingestion_time() > ago(timeframe)\n| extend Severity = case( Severity contains \"INCREASE\", \"Low\",\n                          Severity contains \"WARN\" or Severity contains \"DECREASE\", \"Medium\",\n                          Severity contains \"CRITICAL\", \"High\",\n                          \"Informational\")\n| extend CompanyURL = strcat(\"https://service.bitsighttech.com/app/spm\",CompanyURL)\n| project CompanyName, Severity, Trigger, CompanyURL, AlertDate, GUID\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query looks for errors that may indicate that an attacker is attempting to exploit a vulnerability in the service. \nReference: https://www.microsoft.com/security/blog/2021/03/02/hafnium-targeting-exchange-servers/\n Topic: Detections"}, {"role": "assistant", "content": "Event\n| where EventLog =~ \"Application\"\n| where Source startswith \"MSExchange\"\n| where EventLevelName =~ \"error\"\n| where (RenderedDescription startswith \"Watson report\" and RenderedDescription contains \"umworkerprocess\" and RenderedDescription contains \"TextFormattingRunProperties\") or RenderedDescription startswith \"An unhandled exception occurred in a UM worker process\" or RenderedDescription startswith \"The Microsoft Exchange Unified Messaging service\" or RenderedDescription contains \"MSExchange Unified Messaging\"\n| where RenderedDescription !contains \"System.OutOfMemoryException\"\n| extend HostName = tostring(split(Computer, \".\")[0]), DomainIndex = toint(indexof(Computer, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(Computer, DomainIndex + 1), Computer)\n| project-away DomainIndex\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Checks if Sonrai tickets have had an escalation executed. \nIt uses the action type to check if a ticket has had an escalation executed\n Topic: SonraiSecurity"}, {"role": "assistant", "content": "Sonrai_Tickets_CL\n| where action_d == 8\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies a match in Azure Key Vault logs from any IP IOC from TI\n Topic: Threat Intelligence"}, {"role": "assistant", "content": "let dt_lookBack = 1h; // Look back 1 hour for AzureDiagnostics logs\nlet ioc_lookBack = 14d; // Look back 14 days for threat intelligence indicators\n// Fetch threat intelligence indicators related to IP addresses\nlet IP_Indicators = ThreatIntelligenceIndicator\n  | where isnotempty(NetworkIP) or isnotempty(EmailSourceIpAddress) or isnotempty(NetworkDestinationIP) or isnotempty(NetworkSourceIP)\n  | where TimeGenerated >= ago(ioc_lookBack)\n  | extend TI_ipEntity = iff(isnotempty(NetworkIP), NetworkIP, NetworkDestinationIP)\n  | extend TI_ipEntity = iff(isempty(TI_ipEntity) and isnotempty(NetworkSourceIP), NetworkSourceIP, TI_ipEntity)\n  | extend TI_ipEntity = iff(isempty(TI_ipEntity) and isnotempty(EmailSourceIpAddress), EmailSourceIpAddress, TI_ipEntity)\n  | where ipv4_is_private(TI_ipEntity) == false and  TI_ipEntity !startswith \"fe80\" and TI_ipEntity !startswith \"::\" and TI_ipEntity !startswith \"127.\"\n  | summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n  | where Active == true and ExpirationDateTime > now();\n// Perform a join between IP indicators and AzureDiagnostics logs for Key Vault events\nIP_Indicators\n  // Use innerunique to keep performance fast and result set low, as we only need one match to indicate potential malicious activity that needs investigation\n  | join kind=innerunique (\n      AzureDiagnostics\n      | where ResourceType =~ \"VAULTS\"\n      | where TimeGenerated >= ago(dt_lookBack)\n      | extend KeyVaultEvents_TimeGenerated = TimeGenerated, ClientIP = CallerIPAddress\n  )\n  on $left.TI_ipEntity == $right.ClientIP\n  // Filter out logs that occurred after the expiration of the corresponding indicator\n  | where KeyVaultEvents_TimeGenerated < ExpirationDateTime\n  // Group the results by IndicatorId and ClientIP, and keep the log entry with the latest timestamp\n  | summarize KeyVaultEvents_TimeGenerated = arg_max(KeyVaultEvents_TimeGenerated, *) by IndicatorId, ClientIP\n  // Select the desired output fields\n  | project KeyVaultEvents_TimeGenerated, Description, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore,\n    TI_ipEntity, ClientIP, ResourceId, SubscriptionId, OperationName, ResultType, CorrelationId, id_s, clientInfo_s, httpStatusCode_d,\n    identity_claim_appid_g, identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g, Type\n  // Rename the timestamp field\n  | extend timestamp = KeyVaultEvents_TimeGenerated\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query looks for suspicious updates to an Microsoft Entra ID joined device where the device name is changed and the device falls out of compliance.\nThis could occur when a threat actor updates the details of an Autopilot provisioned device using a stolen device ticket, in order to access certificates and keys.\nRef: https://dirkjanm.io/assets/raw/Insomnihack%20Breaking%20and%20fixing%20Azure%20AD%20device%20identity%20security.pdf\n Topic: Microsoft Entra ID"}, {"role": "assistant", "content": "AuditLogs\n| where OperationName =~ \"Update device\"\n| mv-apply TargetResource=TargetResources on (\n    where TargetResource.type =~ \"Device\"\n    | extend ModifiedProperties = TargetResource.modifiedProperties\n    | extend DeviceId = TargetResource.id)\n| mv-apply Prop=ModifiedProperties on ( \n    where Prop.displayName =~ \"CloudDisplayName\"\n    | extend OldName = Prop.oldValue \n    | extend NewName = Prop.newValue)\n| mv-apply Prop=ModifiedProperties on ( \n    where Prop.displayName =~ \"IsCompliant\"\n    | extend OldComplianceState = Prop.oldValue  \n    | extend NewComplianceState = Prop.newValue)\n| mv-apply Prop=ModifiedProperties on ( \n    where Prop.displayName =~ \"TargetId.DeviceTrustType\"\n    | extend OldTrustType = Prop.oldValue  \n    | extend NewTrustType = Prop.newValue)\n| mv-apply Prop=ModifiedProperties on ( \n    where Prop.displayName =~ \"Included Updated Properties\" \n    | extend UpdatedProperties = Prop.newValue)\n| extend OldDeviceName = tostring(parse_json(tostring(OldName))[0])\n| extend NewDeviceName = tostring(parse_json(tostring(NewName))[0])\n| extend OldComplianceState = tostring(parse_json(tostring(OldComplianceState))[0])\n| extend NewComplianceState = tostring(parse_json(tostring(NewComplianceState))[0])\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend UpdatedPropertiesCount = array_length(split(UpdatedProperties, ','))\n| where OldDeviceName != NewDeviceName\n| where OldComplianceState =~ 'true' and NewComplianceState =~ 'false'\n// Most common is transferring from AAD Registered to AAD Joined - we just want AAD Joined devices\n| where NewTrustType == '\"AzureAd\"' and OldTrustType != '\"Workplace\"'\n// We can modify this value to tune FPs - more properties changed about the device beyond its name the more suspicious it could be\n| where UpdatedPropertiesCount > 1\n| project-reorder TimeGenerated, DeviceId, NewDeviceName, OldDeviceName, NewComplianceState, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingIpAddress, AADOperationType, OldTrustType, NewTrustType, UpdatedProperties, UpdatedPropertiesCount\n| extend InitiatedByName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), InitiatedByUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query looks for accounts being created that do not have attributes populated that are commonly populated in the tenant.\n  Attackers may attempt to add accounts as a means of establishing persistant access to an environment, looking for anomalies in created accounts may help identify illegitimately created accounts.\n  Created accounts should be investigated to ensure they were legitimated created.\n  Ref: https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-user-accounts#accounts-not-following-naming-policies\n Topic: Detections"}, {"role": "assistant", "content": "let threshold = 10;\nlet default_ad_attributes = dynamic([\"LastDirSyncTime\", \"StsRefreshTokensValidFrom\", \"Included Updated Properties\", \"AccountEnabled\", \"Action Client Name\", \"SourceAnchor\"]);\nlet addUsers = AuditLogs\n| where OperationName =~ \"Add user\"\n| where Result =~ \"success\"\n| extend AccountProperties = TargetResources[0].modifiedProperties\n| mv-expand AccountProperties\n;\naddUsers\n| evaluate bag_unpack(AccountProperties) : (displayName:string, oldValue: string, newValue: string , TenantId : string, SourceSystem : string, TimeGenerated : datetime, ResourceId : string, OperationName : string, OperationVersion : string, Category : string, ResultType : string, ResultSignature : string, ResultDescription : string, DurationMs : long, CorrelationId : string, Resource : string, ResourceGroup : string, ResourceProvider : string, Identity : string, Level : string, Location : string, AdditionalDetails : dynamic, Id : string, InitiatedBy : dynamic, LoggedByService : string, Result : string, ResultReason : string, TargetResources : dynamic, AADTenantId : string, ActivityDisplayName : string, ActivityDateTime : datetime, AADOperationType : string, Type : string)\n| extend displayName = column_ifexists(\"displayName\", \"Unknown Value\")\n| summarize count() by displayName, TenantId\n| where displayName !in (default_ad_attributes)\n| top threshold by count_ desc\n| summarize make_set(displayName) by TenantId\n| join kind=inner (\naddUsers\n| extend CreatingUserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\n| extend CreatingAadUserId = tostring(InitiatedBy.user.id)\n| extend CreatingUserIPAddress = tostring(InitiatedBy.user.ipAddress)\n| extend CreatedUserPrincipalName = tostring(TargetResources[0].userPrincipalName)\n| extend PropName = tostring(AccountProperties.displayName)) \non TenantId\n| summarize makeset(PropName) by TimeGenerated, CorrelationId, CreatedUserPrincipalName, CreatingUserPrincipalName, CreatingAadUserId, CreatingUserIPAddress, tostring(set_displayName)\n| extend missing_props = set_difference(todynamic(set_displayName), set_PropName)\n| where array_length(missing_props) > 0\n| join kind=innerunique (\nAuditLogs\n| where Result =~ \"success\"\n| where OperationName =~ \"Add user\"\n| extend CreatedUserPrincipalName = tostring(TargetResources[0].userPrincipalName)) \non CorrelationId, CreatedUserPrincipalName\n| extend ExpectedProperties = set_displayName\n| project-away set_displayName, set_PropName\n| extend InitiatingAccountName = tostring(split(CreatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(CreatingUserPrincipalName, \"@\")[1])\n| extend TargetAccountName = tostring(split(CreatedUserPrincipalName, \"@\")[0]), TargetAccountUPNSuffix = tostring(split(CreatedUserPrincipalName, \"@\")[1])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for server related errors.\n Topic: Cloudflare"}, {"role": "assistant", "content": "Cloudflare\n| where TimeGenerated > ago(24h)\n| where HttpStatusCode between(500..599)\n| extend IPCustomEntity = SrcIpAddr\n| extend UrlCustomEntity = ClientRequestURI\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Search for emails with high score of spam filter classifier value.\n Topic: Proofpoint On demand(POD) Email Security"}, {"role": "assistant", "content": "let scoreThreshold = 80;\nProofpointPOD\n| where EventType == 'message'\n| where NetworkDirection == 'inbound'\n| where todynamic(FilterModulesSpamScoresClassifiers).spam > scoreThreshold"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This rule identifies DNS requests for which response IP address is a known IoC. This analytic rule uses [ASIM](https://aka.ms/AboutASIM) and supports any built-in or custom source that supports the ASIM DNS schema.\n Topic: Threat Intelligence"}, {"role": "assistant", "content": "let dt_lookBack = 1h;\nlet ioc_lookBack = 14d;\nlet IP_TI = \nThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack)\n| extend IoC = coalesce(NetworkIP, NetworkDestinationIP, NetworkSourceIP,EmailSourceIpAddress,\"NO_IP\")\n| where IoC != \"NO_IP\"\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| where Active == true and ExpirationDateTime > now();\nIP_TI\n| join kind=innerunique // using innerunique to keep perf fast and result set low, we only need one match to indicate potential malicious activity that needs to be investigated\n(\n_Im_Dns(starttime=ago(dt_lookBack))\n| where isnotempty(DnsResponseName)\n| summarize imDns_mintime=min(TimeGenerated), imDns_maxtime=max(TimeGenerated) by SrcIpAddr, DnsQuery, DnsResponseName, Dvc, EventProduct, EventVendor\n| extend addresses = extract_all (@'(\\d+\\.\\d+\\.\\d+\\.\\d+)', DnsResponseName)\n| mv-expand IoC = addresses to typeof(string)\n)\non IoC\n| where imDns_mintime < ExpirationDateTime\n| project imDns_mintime, imDns_maxtime, Description, ActivityGroupNames, IndicatorId, ThreatType, LatestIndicatorTime, ExpirationDateTime, ConfidenceScore, SrcIpAddr, IoC, Dvc, EventVendor, EventProduct, DnsQuery, DnsResponseName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This will help you determine if Cisco ASA devices are under heavier attack than normal over the last hour versus the previous 6 hours based on DeviceEventClassID 733100\nReferences: https://www.cisco.com/c/en/us/td/docs/security/asa/syslog/b_syslog/syslogs9.html\nDetails on how to further troubleshoot/investigate: https://www.cisco.com/c/en/us/support/docs/security/asa-5500-x-series-next-generation-firewalls/113685-asa-threat-detection.html\n Topic: CiscoASA"}, {"role": "assistant", "content": "let timeframe = 1h;\nlet last1h = CommonSecurityLog\n| where TimeGenerated >= ago(timeframe)\n| where isempty(CommunicationDirection)\n| where DeviceEventClassID == \"733100\"\n| extend SourceOfDropRateCount = tostring(split(tostring(split(Message, \"]\")[0]),\"[ \")[1])\n| extend splitMessage = split(Message, \".\")\n| extend DropRate = tostring(split(tostring(splitMessage[0]),\"] \")[1])\n| extend CurrentBurstRate = split(tostring(split(tostring(splitMessage[1]),\"  \")[0]),\"is \")\n| extend CurrentBurstRatePerSec = toint(split(tostring(CurrentBurstRate[1]),\" \")[0])\n| extend MaxConfiguredBurstRate = toint(CurrentBurstRate[2])\n| extend CurrentAvgRate = split(tostring(split(tostring(splitMessage[1]),\"  \")[1]),\"is \")\n| extend CurrentAvgRatePerSec = toint(split(tostring(CurrentAvgRate[1]),\" \")[0])\n| extend MaxConfiguredAvgRate = toint(CurrentAvgRate[2])\n| extend CumulativeTotal = toint(split(tostring(split(tostring(splitMessage[1]),\"  \")[2]),\"is \")[1])\n| summarize last1hCumTotal = sum(CumulativeTotal), last1hAvgRatePerSec = avg(CurrentAvgRatePerSec), last1hAvgBurstRatePerSec = avg(CurrentBurstRatePerSec) by DeviceName, DeviceEventClassID, SourceIP, SourceOfDropRateCount, DropRate;\nlet prev6h = CommonSecurityLog\n| where TimeGenerated between (ago(6h) .. ago(1h))\n| where isempty(CommunicationDirection)\n| where DeviceEventClassID == \"733100\"\n| extend SourceOfDropRateCount = tostring(split(tostring(split(Message, \"]\")[0]),\"[ \")[1])\n| extend splitMessage = split(Message, \".\")\n| extend DropRate = tostring(split(tostring(splitMessage[0]),\"] \")[1])\n| extend CurrentBurstRate = split(tostring(split(tostring(splitMessage[1]),\"  \")[0]),\"is \")\n| extend prevCurrentBurstRatePerSec = toint(split(tostring(CurrentBurstRate[1]),\" \")[0])\n| extend prevMaxConfiguredBurstRate = toint(CurrentBurstRate[2])\n| extend CurrentAvgRate = split(tostring(split(tostring(splitMessage[1]),\"  \")[1]),\"is \")\n| extend prevCurrentAvgRatePerSec = toint(split(tostring(CurrentAvgRate[1]),\" \")[0])\n| extend prevMaxConfiguredAvgRate = toint(CurrentAvgRate[2])\n| extend prevCumulativeTotal = toint(split(tostring(split(tostring(splitMessage[1]),\"  \")[2]),\"is \")[1])\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), prev6hCumTotal = sum(prevCumulativeTotal), prev6hAvgRatePerSec = avg(prevCurrentAvgRatePerSec), prev6hAvgBurstRatePerSec = avg(prevCurrentBurstRatePerSec)\nby DeviceName, DeviceEventClassID, SourceIP, SourceOfDropRateCount, DropRate;\nlast1h | join (\n  prev6h\n) on DeviceName, DeviceEventClassID, SourceIP, SourceOfDropRateCount, DropRate\n| project StartTimeUtc, EndTimeUtc, DeviceName, DeviceEventClassID, SourceIP, SourceOfDropRateCount, DropRate, last1hCumTotal, prev6hCumTotal, prev6hAvgCumTotal = prev6hCumTotal/6, last1hAvgRatePerSec, prev6hAvgRatePerSec, last1hAvgBurstRatePerSec, prev6hAvgBurstRatePerSec\n// Select only events that indicate a doubling of the expected rate in the last hour over the previous 6 hours\n| where last1hCumTotal > 2*prev6hAvgCumTotal or last1hAvgRatePerSec > 2*prev6hAvgRatePerSec or last1hAvgBurstRatePerSec > 2*prev6hAvgBurstRatePerSec\n| extend HostName = tostring(split(DeviceName, \".\")[0]), DomainIndex = toint(indexof(DeviceName, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(DeviceName, DomainIndex + 1), DeviceName)\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query looks for Microsoft Defender AV detections for malware observed in relation to the war in Ukraine.\n  Ref: https://msrc-blog.microsoft.com/2022/02/28/analysis-resources-cyber-threat-activity-ukraine/ \n Topic: Microsoft Defender XDR"}, {"role": "assistant", "content": "let UA_threats = dynamic([\"FoxBlade\", \"WhisperGate\", \"Lasainraw\", \"SonicVote\", \"CaddyWiper\", \"AprilAxe\", \"FiberLake\", \"Industroyer\", \"DesertBlade\"]);\nSecurityAlert\n| where ProviderName =~ \"MDATP\"\n| extend ThreatFamilyName = tostring(parse_json(ExtendedProperties).ThreatFamilyName)\n| where ThreatFamilyName in~ (UA_threats)\n| extend HostName = tostring(split(CompromisedEntity, \".\")[0]), DomainIndex = toint(indexof(CompromisedEntity, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(CompromisedEntity, DomainIndex + 1), CompromisedEntity)\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query shows rare URLs requested.\n Topic: OracleWebLogicServer"}, {"role": "assistant", "content": "OracleWebLogicServerEvent\n| where TimeGenerated > ago(24h)\n| summarize count() by tostring(UrlOriginal)\n| top 20 by count_ asc\n| extend UrlCustomEntity = UrlOriginal\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This alert leverages Defender for IoT to detect that a sensor can no longer detect the network traffic, which indicates that the system is potentially insecure.\n Topic: IoTOTThreatMonitoringwithDefenderforIoT"}, {"role": "assistant", "content": "SecurityAlert\n| where ProviderName == \"IoTSecurity\"\n| where AlertName == \"No Traffic Detected on Sensor Interface\" \n| extend ExtendedProperties = parse_json(ExtendedProperties)\n| where tostring(ExtendedProperties.isNew) == \"True\"\n| extend DeviceId = tostring(ExtendedProperties.DeviceId), \n         SourceDeviceAddress = tostring(ExtendedProperties.SourceDeviceAddress), \n         DestDeviceAddress = tostring(ExtendedProperties.DestinationDeviceAddress), \n         RemediationSteps = tostring(parse_json(RemediationSteps)[0]), \n         Protocol = tostring(ExtendedProperties.Protocol), \n         AlertManagementUri = tostring(ExtendedProperties.AlertManagementUri)\n| project\n  TimeGenerated,\n  DeviceId,\n  ProductName,\n  ProductComponentName,\n  AlertSeverity,\n  AlertName,\n  Description,\n  Protocol,\n  SourceDeviceAddress,\n  DestDeviceAddress,\n  RemediationSteps,\n  Tactics,\n  Entities,\n  VendorOriginalId,\n  AlertLink,\n  AlertManagementUri,\n  Techniques\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This rule identifies clients with a high NXDomain count, which could be indicative of a DGA (cycling through possible C2 domains where most C2s are not live). An alert is generated when a new IP address is seen (based on not being seen associated with NXDomain records in prior 10-day baseline period). It utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema.\n Topic: DNS Essentials"}, {"role": "assistant", "content": "let threshold = 100;\nlet lookback = 10d;\nlet referenceendtime = 1d;\nlet nxDomainDnsEvents = (stime: datetime, etime: datetime) {\n  _Im_Dns(responsecodename='NXDOMAIN', starttime=stime, endtime=etime)\n  | where DnsQueryTypeName in (\"A\", \"AAAA\")\n  | where ipv4_is_match(\"127.0.0.1\", SrcIpAddr) == False\n  | where DnsQuery !contains \"/\" and DnsQuery contains \".\"\n};\nnxDomainDnsEvents (stime=ago(referenceendtime), etime=now())\n| summarize\n  StartTimeUtc = min(TimeGenerated),\n  EndTimeUtc = max(TimeGenerated),\n  DNSQueryCount=dcount(DnsQuery)\n  by SrcIpAddr\n| where DNSQueryCount > threshold\n// Filter out previously seen IPs\n| join kind=leftanti (nxDomainDnsEvents (stime=ago(lookback), etime=ago(referenceendtime))\n  | summarize DNSQueryCount=dcount(DnsQuery) by SrcIpAddr, bin(TimeGenerated,1d)\n  | where DNSQueryCount > threshold)\n  on SrcIpAddr\n// Pull out sample NXDomain responses for those remaining potentially infected IPs\n| join kind = inner (nxDomainDnsEvents (stime=ago(lookback), etime=now())\n  | summarize by DnsQuery, SrcIpAddr)\n  on SrcIpAddr\n| summarize\n  StartTimeUtc = min(StartTimeUtc),\n  EndTimeUtc = max(EndTimeUtc),\n  DNSQueries=make_list(DnsQuery, 100)\n  by SrcIpAddr, DNSQueryCount\n| extend DNSQueryThreshold=threshold\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "The policy detects shadow admin users in AWS or Azure. Topic: Authomize"}, {"role": "assistant", "content": "Authomize_v2_CL\n| where ingestion_time() >= ago(30m)\n| extend EventID = id_s, Policy = policy_name_s, Severity = severity_s,Description = description_s,Recommendation = recommendation_s,URL = url_s,Tactics = tactics_s\n| where Policy has \"IaaS shadow admin detected\"\n| project  EventID, Policy, Severity, Description, Recommendation, URL, Category, Tactics"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects when multiple files shared with external entity.\n Topic: Bitglass"}, {"role": "assistant", "content": "let threshold = 5;\nBitglass\n| where EventType =~ 'cloudaudit'\n| where Action =~ 'Action  DLPScan'\n| where EventMessage has_all ('External', 'Shared', 'DLP')\n| summarize f_cnt = makeset(SrcFileName) by User, bin(TimeGenerated, 10m)\n| where array_length(f_cnt) >= threshold\n| extend AccountCustomEntity = User\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects client requests to unusual client request.\n Topic: Cloudflare"}, {"role": "assistant", "content": "Cloudflare\n| where HttpRequestMethod =~ 'GET'\n| where DstBytes != 0 or SrcBytes != 0\n| where ClientRequestURI has_any ('/admin', '/admin.php', 'wp-admin', '.htaccess', '/etc/shadow', '/etc/passwd', '/etc/hosts', '/etc/ssh/') \n| extend IPCustomEntity = SrcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects possible service account keys enumeration.\n Topic: GoogleCloudPlatformIAM"}, {"role": "assistant", "content": "let threshold = 5;\nGCP_IAM\n| where PayloadMethodname =~ 'google.iam.admin.v1.ListServiceAccountsKeys'\n| summarize count() by PayloadAuthenticationinfoPrincipalemail, bin(TimeGenerated, 1h)\n| where count_ > threshold\n| extend AccountCustomEntity = PayloadAuthenticationinfoPrincipalemail\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects sources sending multiple compressed files greater than 10MBs sent over HTTP in a short amount of time.\n Topic: Corelight"}, {"role": "assistant", "content": "let threshold = 25;\nlet fl_size_threshold = 10000000;\ncorelight_http\n| where method in~ ('POST', 'PUT')\n| where isempty(referrer)\n| where tolong(request_body_len) > fl_size_threshold\n| summarize count() by uri, id_orig_h, bin(TimeGenerated, 15m)\n| where count_ > threshold\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query shows Users by source location countries.\n Topic: Zscaler Private Access (ZPA)"}, {"role": "assistant", "content": "ZPAEvent\n| where isnotempty(SrcGeoCountry)\n| summarize Users = make_set(DstUserName) by SrcGeoCountry\n| extend AccountCustomEntity = Users\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This analytic rule detects and alerts when access denied operations generated by the CTERA Edge Filer goes over a predefined threshold Topic: CTERA"}, {"role": "assistant", "content": "Syslog\n  | where ProcessName == 'gw-audit'\n  | extend\n      TenantName = extract(\"\\\"vportal\\\":\\\"([^\\\"]*)\\\"\", 1, SyslogMessage),\n      UserName = extract(\"user=([^|]*)\", 1, SyslogMessage),\n      Operation = extract(\"op=([^|]*)\", 1, SyslogMessage),\n      EdgeFiler = extract(\"\\\"client\\\":\\\"([^\\\"]*)\\\"\", 1, SyslogMessage),\n      RootPath = extract(\"rootPath=([^|]*)\", 1, SyslogMessage),\n      Share = extract(\"share=([^|]*)\", 1, SyslogMessage),\n      LocalPath = extract(\"path=([^|]*)\", 1, SyslogMessage),\n      Timestamp = todatetime(extract(\"\\\"@timestamp\\\":\\\"([^\\\"]*)\\\"\", 1, SyslogMessage))\n  | where Operation in ('ACLAdded', 'ACLDeleted', 'ACLProtectionAdded','chown', 'setsd', 'ACLProtectionDeleted', 'ACEChanged', 'setdacl')\n  | summarize Count = count() by UserName, bin(Timestamp, 5m)\n  | where Count > 5000\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects when an action was made by new user.\n Topic: OracleDatabaseAudit"}, {"role": "assistant", "content": "let lbtime_d = 14d;\nlet lbtime_24h = 24h;\nlet known_users = OracleDatabaseAuditEvent\n| where TimeGenerated between (ago(lbtime_d) .. ago(lbtime_24h))\n| where isnotempty(DstUserName)\n| where isnotempty(Action)\n| summarize makeset(DstUserName);\nOracleDatabaseAuditEvent\n| where isnotempty(DstUserName)\n| where isnotempty(Action)\n| where DstUserName !in (known_users)\n| project DstUserName\n| extend AccountCustomEntity = DstUserName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies a set of Microsoft Sentinel Data Connectors for administrative and operational detection queries for hunting activities.\n Topic: Azure Activity"}, {"role": "assistant", "content": "let opValues = dynamic([\"Microsoft.SecurityInsights/dataConnectors/write\", \"Microsoft.SecurityInsights/dataConnectors/delete\"]);\n// Microsoft Sentinel Data Connectors Update / Delete\nAzureActivity\n| where OperationNameValue in~ (opValues)\n| where ActivitySubstatusValue in~ (\"Created\", \"OK\")\n| sort by TimeGenerated desc\n| extend Name = tostring(split(Caller,'@',0)[0]), UPNSuffix = tostring(split(Caller,'@',1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = CallerIpAddress\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This rule detects web requests made to URLs containing file types such as .ps1, .bat, .vbs,.scr etc. which have the potential to be harmful if downloaded. This rule uses the [Advanced Security Information Model (ASIM)](https://aka.ms/AboutASIM) and supports any web session source that complies with ASIM.\n Topic: Web Session Essentials"}, {"role": "assistant", "content": "let lookback = 5m;\nlet RiskyFileExtensions = materialize(externaldata(Extensions: string)\n    [@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/RiskyFileExtensionsInUrl.csv\"]\n    with(format=\"csv\", ignoreFirstRecord=True));\nlet CustomRiskyFileExtensions = (_ASIM_GetWatchlistRaw(\"Web_RiskyFileExtensions\") // Create new Watchlist and add your custom indicators(Optional)\n    | extend\n        Extensions = tostring(WatchlistItem[\"Extensions\"])\n    | project Extensions\n    | where isnotempty(Extensions));\nlet CombinedRiskyFileExtensions = union RiskyFileExtensions, CustomRiskyFileExtensions;\nlet knownRiskyFileExtensions=toscalar(CombinedRiskyFileExtensions\n    | where isnotempty(Extensions)\n    | summarize make_set(Extensions, 1000));\nlet Whitelisted_Domains = materialize(externaldata(WhiteListedDomains: string)\n    [@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/WhiteListedDomainsForWebSessionUseCases.csv\"]\n    with(format=\"csv\", ignoreFirstRecord=True));\nlet CustomWhiteListedDomains = (_ASIM_GetWatchlistRaw(\"Web_WhiteListedDomains\") // Create new Watchlist and add your white listed domains(Optional)\n    | extend\n        WhiteListedDomains = tostring(WatchlistItem[\"WhiteListedDomains\"])\n    | project WhiteListedDomains\n    | where isnotempty(WhiteListedDomains));\nlet CombinedWhitelisted_Domains = union Whitelisted_Domains, CustomWhiteListedDomains;\nlet knownWhitelisted_Domains=toscalar(CombinedWhitelisted_Domains\n    | where isnotempty(WhiteListedDomains)\n    | summarize make_set(WhiteListedDomains, 1000));\n_Im_WebSession (starttime=ago(lookback), url_has_any=knownRiskyFileExtensions, eventresult='Success')\n| project\n    Url,\n    SrcIpAddr,\n    TimeGenerated,\n    SrcUsername,\n    SrcHostname,\n    DstIpAddr,\n    DstPortNumber\n| extend requestedFileName=tostring(split(tostring(parse_url(Url)[\"Path\"]), '/')[-1])\n| extend requestedFileExt=extract(@'(\\.\\w+)$', 1, requestedFileName, typeof(string))\n| where requestedFileExt in~ (knownRiskyFileExtensions)\n| summarize\n    EventCount=count(),\n    EventStartTime=min(TimeGenerated),\n    EventEndTime=max(TimeGenerated)\n    by\n    SrcUsername,\n    SrcIpAddr,\n    SrcHostname,\n    DstIpAddr,\n    DstPortNumber,\n    Url,\n    requestedFileName\n| extend FQDN = split(parse_url(Url)[\"Host\"], '.')\n| extend Domain = iif(array_length(FQDN) > 1, strcat(FQDN[-2], '.', FQDN[-1]), FQDN)\n| where Domain !in~ (knownWhitelisted_Domains)\n| project-away FQDN\n| extend Name = iif(SrcUsername contains \"@\", tostring(split(SrcUsername,'@',0)[0]),SrcUsername), UPNSuffix = iif(SrcUsername contains \"@\",tostring(split(SrcUsername,'@',1)[0]),\"\")\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Header: HTTP Strict Transport Security Missing\n Topic: CTM360"}, {"role": "assistant", "content": "HackerViewLog_Azure_1_CL | where severity_s == \"medium\" | where progress_status_s == \"New\" | where status_s != \"inactive\"  | where issue_name_s == \"Header: HTTP Strict Transport Security Missing\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies a match in AzureFirewall (NetworkRule & ApplicationRule Logs) from any IP IOC from TI\n Topic: Threat Intelligence"}, {"role": "assistant", "content": "let dt_lookBack = 1h; // Look back 1 hour for AzureDiagnostics logs\nlet ioc_lookBack = 14d; // Look back 14 days for threat intelligence indicators\n// Fetch threat intelligence indicators related to IP addresses\nlet IP_Indicators = ThreatIntelligenceIndicator\n  // Filter out indicators without relevant IP address fields\n  | where isnotempty(NetworkIP) or isnotempty(EmailSourceIpAddress) or isnotempty(NetworkDestinationIP) or isnotempty(NetworkSourceIP)\n  | where TimeGenerated >= ago(ioc_lookBack)\n  // Select the IP entity based on availability of different IP fields\n  | extend TI_ipEntity = iff(isnotempty(NetworkIP), NetworkIP, NetworkDestinationIP)\n  | extend TI_ipEntity = iff(isempty(TI_ipEntity) and isnotempty(NetworkSourceIP), NetworkSourceIP, TI_ipEntity)\n  | extend TI_ipEntity = iff(isempty(TI_ipEntity) and isnotempty(EmailSourceIpAddress), EmailSourceIpAddress, TI_ipEntity)\n  // Exclude local addresses using the ipv4_is_private operator and filtering out specific address prefixes\n  | where ipv4_is_private(TI_ipEntity) == false and  TI_ipEntity !startswith \"fe80\" and TI_ipEntity !startswith \"::\" and TI_ipEntity !startswith \"127.\"\n  | summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n  | where Active == true and ExpirationDateTime > now();\n// Perform a join between IP indicators and AzureDiagnostics logs to identify potential malicious activity\nIP_Indicators\n  // Use innerunique to keep performance fast and result set low, as we only need one match to indicate potential malicious activity that needs investigation\n  | join kind=innerunique (\n      AzureDiagnostics\n      | where TimeGenerated >= ago(dt_lookBack)\n      | where OperationName in (\"AzureFirewallApplicationRuleLog\", \"AzureFirewallNetworkRuleLog\")\n      | parse kind=regex flags=U msg_s with Protocol 'request from ' SourceHost 'to ' DestinationHost @'\\.? Action: ' Firewall_Action @'\\.' Rest_msg\n      | extend SourceAddress = extract(@'([\\.0-9]+)(:[\\.0-9]+)?', 1, SourceHost)\n      | extend DestinationAddress = extract(@'([\\.0-9]+)(:[\\.0-9]+)?', 1, DestinationHost)\n      | extend RemoteIP = case(not(ipv4_is_private(DestinationAddress)), DestinationAddress, not(ipv4_is_private(SourceAddress)), SourceAddress, \"\")\n      | where isnotempty(RemoteIP) // Filter out traffic involving public addresses only\n      | project-rename AzureFirewall_TimeGenerated = TimeGenerated\n  )\n  on $left.TI_ipEntity == $right.RemoteIP\n  // Filter out logs that occurred after the expiration of the corresponding indicator\n  | where AzureFirewall_TimeGenerated < ExpirationDateTime\n  // Group the results by IndicatorId and RemoteIP, and keep the log entry with the latest timestamp\n  | summarize AzureFirewall_TimeGenerated = arg_max(AzureFirewall_TimeGenerated, *) by IndicatorId, RemoteIP\n  // Select the desired output fields\n  | project LatestIndicatorTime, Description, ActivityGroupNames, IndicatorId, ThreatType, Url, DomainName, ExpirationDateTime, ConfidenceScore,\n    AzureFirewall_TimeGenerated, TI_ipEntity, Resource, Category, msg_s, SourceAddress, DestinationAddress, Firewall_Action, Protocol,\n    NetworkIP, NetworkDestinationIP, NetworkSourceIP, EmailSourceIpAddress, Type\n  // Rename the timestamp field\n  | extend timestamp = AzureFirewall_TimeGenerated\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for infected files which were detected.\n Topic: McAfee ePolicy Orchestrator"}, {"role": "assistant", "content": "let lbtime = 24h;\nMcAfeeEPOEvent\n| where TimeGenerated > ago(lbtime)\n| where EventId in ('1024', '1053', '2000', '3004')\n| summarize ['Infected Files List'] = makeset(DstFileName) by DvcIpAddr\n| project DvcIpAddr, ['Infected Files List']\n| extend IPCustomEntity = DvcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies when an RDP connection is new or rare related to any logon type by a given account today compared with the previous 14 days.\nRDP connections are indicated by the EventID 4624 with LogonType = 10\n Topic: Detections"}, {"role": "assistant", "content": "let starttime = 14d;\nlet endtime = 1d;\n(union isfuzzy=true\n(SecurityEvent\n| where TimeGenerated >= ago(endtime)\n| where EventID == 4624 and LogonType == 10\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), ConnectionCount = count()\nby Account = tolower(Account), Computer = toupper(Computer), IpAddress, AccountType, Activity, LogonTypeName, ProcessName\n// use left anti to exclude anything from the previous 14 days that is not rare\n),\n(WindowsEvent\n| where TimeGenerated >= ago(endtime)\n| where EventID == 4624 and EventData has (\"10\")\n| extend LogonType = tostring(EventData.LogonType)\n| where  LogonType == 10\n| extend Account = strcat(tostring(EventData.TargetDomainName),\"\\\\\", tostring(EventData.TargetUserName))\n| extend ProcessName = tostring(EventData.ProcessName)\n| extend IpAddress = tostring(EventData.IpAddress)\n| extend TargetUserSid = tostring(EventData.TargetUserSid)\n| extend AccountType=case(Account endswith \"$\" or TargetUserSid in (\"S-1-5-18\", \"S-1-5-19\", \"S-1-5-20\"), \"Machine\", isempty(TargetUserSid), \"\", \"User\")\n| extend Activity=\"4624 - An account was successfully logged on.\"\n| extend LogonTypeName=\"10 - RemoteInteractive\"\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), ConnectionCount = count()\nby Account = tolower(Account), Computer = toupper(Computer), IpAddress, AccountType, Activity, LogonTypeName, ProcessName\n))\n| join kind=leftanti (\n(union isfuzzy=true\n(SecurityEvent\n| where TimeGenerated between (ago(starttime) .. ago(endtime))\n| where EventID == 4624\n| summarize by Computer = toupper(Computer), IpAddress, Account = tolower(Account)\n),\n( WindowsEvent\n| where TimeGenerated between (ago(starttime) .. ago(endtime))\n| where EventID == 4624\n| extend IpAddress = tostring(EventData.IpAddress)\n| extend Account = strcat(tostring(EventData.TargetDomainName),\"\\\\\", tostring(EventData.TargetUserName))\n| summarize by Computer = toupper(Computer), IpAddress, Account = tolower(Account)\n))\n) on Account, Computer\n| summarize StartTime = min(StartTime), EndTime = max(EndTime), ConnectionCount = sum(ConnectionCount)\nby Account, Computer, IpAddress, AccountType, Activity, LogonTypeName, ProcessName\n| extend HostName = tostring(split(Computer, \".\")[0]), DomainIndex = toint(indexof(Computer, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(Computer, DomainIndex + 1), Computer)\n| extend AccountName = tostring(split(Account, @\"\\\")[1]), AccountNTDomain = tostring(split(Account, @\"\\\")[0])\n| project-away DomainIndex\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query identifies the presence of threat information in fields such as EventSeverity, ThreatName, and ThreatCategory\n Topic: Web Session Essentials"}, {"role": "assistant", "content": "let lookback= 1d;\nlet exludeString = dynamic ([\"/\", \"None\"]);\n_Im_WebSession(starttime=ago(lookback))\n| project EventSeverity, ThreatName, ThreatCategory, ThreatRiskLevel, ThreatOriginalConfidence, ThreatField, TimeGenerated, SrcIpAddr, SrcUsername, SrcHostname, Url\n| where (ThreatName !in~ (exludeString) and isnotempty(ThreatName)) or (ThreatCategory !in~ (exludeString) and isnotempty(ThreatCategory)) or ThreatRiskLevel > 60 or toint(ThreatOriginalConfidence) > 0 or EventSeverity in ('Medium','High') or isnotempty(ThreatField)\n| summarize EventCount = count(), EventStartTime=min(TimeGenerated), EvenEndTime=max(TimeGenerated) by SrcIpAddr, SrcUsername, SrcHostname, Url, ThreatName, ThreatCategory, ThreatRiskLevel, ThreatOriginalConfidence, ThreatField\n| extend Name = iif(SrcUsername contains \"@\", tostring(split(SrcUsername,'@',0)[0]),SrcUsername), UPNSuffix = iif(SrcUsername contains \"@\",tostring(split(SrcUsername,'@',1)[0]),\"\")\n| order by EventCount desc\n| extend IP_0_Address = SrcIpAddr\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend Host_0_HostName = SrcHostname\n| extend URL_0_Url = Url\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for updated instances.\n Topic: Oracle Cloud Infrastructure"}, {"role": "assistant", "content": "OCILogs\n| where TimeGenerated > ago(24h)\n| where data_eventName_s =~ 'UpdateInstance'\n| extend AccountCustomEntity = data_definedTags_Oracle_Tags_CreatedBy_s\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Organizations are added in the Cross-tenant Access Settings to control communication inbound or outbound for users and applications. This detection notifies when Organization Outbound Collaboration Settings are changed for \"Users & Groups\" and for \"Applications\".\n Topic: Microsoft Entra ID"}, {"role": "assistant", "content": "// In User & Groups and in Applications, the following \"AccessType\" values in columns PremodifiedOutboundSettings and ModifiedOutboundSettings are interpreted accordingly\n// When Access Type in premodified outbound settings value was 1 that means that the initial access was allowed. When Access Type in premodified outbound settings value was 2 that means that the initial access was blocked.\n// When Access Type in modified outbound settings value is 1 that means that now access is allowed. When Access Type in modified outbound settings value is 2 that means that now access is blocked.\nAuditLogs\n| where OperationName has \"Update a partner cross-tenant access setting\"\n| mv-apply TargetResource = TargetResources on\n  (\n      where TargetResource.type =~ \"Policy\"\n      | extend Properties = TargetResource.modifiedProperties\n  )\n| mv-apply Property = Properties on\n  (\n      where Property.displayName =~ \"b2bCollaborationOutbound\"\n      | extend PremodifiedOutboundSettings = trim('\"',tostring(Property.oldValue)),\n               ModifiedOutboundSettings = trim(@'\"',tostring(Property.newValue))\n  )\n| where PremodifiedOutboundSettings != ModifiedOutboundSettings\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Looking for GetCallerIdentity Events where the UserID Type is AssumedRole\nAn attacker who has assumed the role of a legitimate account can call the GetCallerIdentity function to determine what account they are using.\nA legitimate user using legitimate credentials would not need to call GetCallerIdentity since they should already know what account they are using.\nMore Information: https://duo.com/decipher/trailblazer-hunts-compromised-credentials-in-aws \nAWS STS GetCallerIdentity API: https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity.html \n Topic: Amazon Web Services"}, {"role": "assistant", "content": "AWSCloudTrail\n| where EventName =~ \"GetCallerIdentity\" and UserIdentityType =~ \"AssumedRole\"\n| extend UserIdentityArn = iif(isempty(UserIdentityArn), tostring(parse_json(Resources)[0].ARN), UserIdentityArn)\n| extend UserName = tostring(split(UserIdentityArn, '/')[-1])\n| extend AccountName = case( UserIdentityPrincipalid == \"Anonymous\", \"Anonymous\", isempty(UserIdentityUserName), UserName, UserIdentityUserName)\n| extend AccountName = iif(AccountName contains \"@\", tostring(split(AccountName, '@', 0)[0]), AccountName),\n  AccountUPNSuffix = iif(AccountName contains \"@\", tostring(split(AccountName, '@', 1)[0]), \"\")\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by SourceIpAddress, EventName, EventTypeName, UserIdentityType, RecipientAccountId, AccountName, AccountUPNSuffix, UserIdentityAccountId, UserIdentityPrincipalid,\nUserAgent, UserIdentityUserName, SessionMfaAuthenticated,AWSRegion, EventSource, AdditionalEventData, ResponseElements\n| extend timestamp = StartTime\n| sort by EndTime desc nulls last\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects request attempts from unexpected countries.\n Topic: ImpervaCloudWAF"}, {"role": "assistant", "content": "let bl_country = dynamic(['CH', 'KR']);\nImpervaWAFCloud\n| where Country in (bl_country)\n| where DvcAction !startswith 'REQ_BLOCKED' or DvcAction !startswith 'REQ_BAD_'\n| extend IPCustomEntity = SrcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies connection attempts (success or fail) from clients with very short or very long User Agent strings and with less than 100 connection attempts.\n Topic: Detections"}, {"role": "assistant", "content": "let short_uaLength = 5;\nlet long_uaLength = 1000;\nlet c_threshold = 100;\nW3CIISLog\n// Exclude local IPs as these create noise\n| where cIP !startswith \"192.168.\" and cIP != \"::1\"\n| where isnotempty(csUserAgent) and csUserAgent !in~ (\"-\", \"MSRPC\") and (string_size(csUserAgent) <= short_uaLength or string_size(csUserAgent) >= long_uaLength)\n| extend csUserAgent_size = string_size(csUserAgent)\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), ConnectionCount = count() by Computer, sSiteName, sPort, csUserAgent, csUserAgent_size, csUserName , csMethod, csUriStem, sIP, cIP, scStatus, scSubStatus, scWin32Status\n| where ConnectionCount < c_threshold\n| extend HostName = tostring(split(Computer, \".\")[0]), DomainIndex = toint(indexof(Computer, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(Computer, DomainIndex + 1), Computer)\n| extend AccountName = tostring(split(csUserName, \"@\")[0]), AccountUPNSuffix = tostring(split(csUserName, \"@\")[1])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Checks for new Sonrai tickets. \nIt uses the action type to check if a ticket has been created\n Topic: SonraiSecurity"}, {"role": "assistant", "content": "Sonrai_Tickets_CL\n| where action_d == 1\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Shows SharePoint upload/download volume by IPs with high-risk ASNs. New IPs with volume spikes may be unauthorized and exfiltrating documents.\n Topic: Microsoft 365"}, {"role": "assistant", "content": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = starttime - 14d;\nlet BLOCK_THRESHOLD = 1.0;\nlet HighBlockRateASNs =\nSigninLogs\n| where TimeGenerated > lookback\n| where isnotempty(AutonomousSystemNumber)\n| summarize make_set(IPAddress), TotalIps = dcount(IPAddress), BlockedSignins= countif(ResultType == \"50053\"), TotalSignins = count() by AutonomousSystemNumber\n| extend BlockRatio = 1.00 * BlockedSignins/TotalSignins\n| where BlockRatio >= BLOCK_THRESHOLD\n| distinct AutonomousSystemNumber\n;\nlet ASNIPs=\nSigninLogs\n| where TimeGenerated > lookback\n| where AutonomousSystemNumber in (HighBlockRateASNs)\n| distinct IPAddress, AutonomousSystemNumber\n;\nOfficeActivity\n| where TimeGenerated between(starttime .. endtime)\n| where  RecordType == \"SharePointFileOperation\"\n| where Operation in (\"FileDownloaded\", \"FileUploaded\")\n| where ClientIP in (ASNIPs)\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), RecentFileActivities = count() by ClientIP\n| extend IP_0_Address = ClientIP\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches recently updated resources.\n Topic: PaloAltoPrismaCloud"}, {"role": "assistant", "content": "PaloAltoPrismaCloud\n| where TimeGenerated > ago(24h)\n| where Reason =~ 'RESOURCE_UPDATED'\n| extend AccountCustomEntity = UserName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Create an incident for high severity malicious behavior detected by Vectra AI (Threat score superior to 7.0). \nThe Severity is a mapping with the Threat score assigned to a detection. It ranges between 0 and 10. \nThe severity_threshold variable can be adjusted as desired. \n Topic: Vectra AI Detect"}, {"role": "assistant", "content": "// Edit this variable to only keep the tactics where an incident needs to be created (Defaults are: \"COMMAND & CONTROL\", \"BOTNET ACTIVITY\", \"EXFILTRATION\", \"LATERAL MOVEMENT\", \"RECONNAISSANCE\")   \nlet configured_tactics = dynamic([\"COMMAND & CONTROL\", \"BOTNET ACTIVITY\", \"EXFILTRATION\", \"LATERAL MOVEMENT\", \"RECONNAISSANCE\"]);\n//default threshold is 7 (meaning a threat score of 70)\nlet severity_threshold = 7.0;\n//Map by default to High Severity in Sentinel\nlet Severity = \"High\";\nCommonSecurityLog\n| where DeviceVendor == \"Vectra Networks\"\n| where DeviceProduct == \"X Series\"\n| where DeviceEventClassID != \"campaigns\" and DeviceEventClassID != \"hsc\" and DeviceEventClassID != \"audit\" and DeviceEventClassID != \"health\" and DeviceEventClassID != \"asc\"\n| extend Category = coalesce(\n                          column_ifexists(\"DeviceEventCategory\", \"\"), \n                          extract(\"cat=(.+?)(;|$)\", 1, AdditionalExtensions), \n                          \"\"\n                      )\n| project-rename threat_score = FlexNumber1\n| project-rename certainty_score = FlexNumber2\n| project-rename vectra_URL = DeviceCustomString4\n| project-rename detection_name = DeviceEventClassID\n| where todecimal(LogSeverity) >= severity_threshold\n| extend Tactic = case( Category == \"COMMAND & CONTROL\", \"CommandAndControl\",\n                        Category == \"BOTNET ACTIVITY\" , \"Impact\",\n                        Category == \"EXFILTRATION\", \"Exfiltration\",\n                        Category == \"LATERAL MOVEMENT\", \"LateralMovement\",\n                        Category == \"RECONNAISSANCE\", \"Discovery\",\n                        \"UNKNOWN\")\n| extend level = case(threat_score == 0 and certainty_score == 0, \"Info\",\n    threat_score < 50 and certainty_score < 50, \"Low\",\n    threat_score < 50 and certainty_score >= 50, \"Medium\", \n    threat_score >= 50 and certainty_score <= 50, \"High\", \n    threat_score >= 50 and certainty_score >= 50, \"Critical\",\n    \"UNKNOWN\")\n| extend Severity = case(level == \"Info\", \"Informational\",level == \"Critical\", \"High\", level)\n| extend account = extract(\"account=(.+?);\", 1, AdditionalExtensions)\n| extend upn = iff(account matches regex \":\", tostring(split(account,\":\")[1]) ,tostring(split(account,\":\")[0]))\n| extend name = tostring(split(upn, \"@\")[0])\n| extend upn_suffix = tostring(split(upn, \"@\")[1])\n| extend source_entity = case( isnotempty(upn), upn,\n                               isnotempty(SourceHostName), SourceHostName,\n                               \"UNKNWON\") \n| where Category in (configured_tactics) \n| summarize arg_max(threat_score, *) by source_entity, Activity\n| sort by TimeGenerated\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "High severity virtual network peerings alerts found by Prancer.\n Topic: Prancer PenSuiteAI Integration"}, {"role": "assistant", "content": "union prancer_CL\n| where deviceProduct_s == 'azure'\n| where parse_json(data_data_snapshots_s)[0].type == 'Microsoft.Network/virtualNetworks/virtualNetworkPeerings'\n| where data_data_severity_s == 'High' and data_data_result_s == 'failed'\n| extend snapshot = parse_json(data_data_snapshots_s)\n| mv-expand snapshot \n| extend\n    id = tostring(snapshot.id),\n    structure = tostring(snapshot.structure),\n    reference = tostring(snapshot.reference),\n    source = tostring(snapshot.source),\n    collection = tostring(snapshot.collection),\n    type = tostring(snapshot.type),\n    region = tostring(snapshot.region),\n    resourceTypes = tostring(snapshot.resourceTypes),\n    path = tostring(snapshot.path)\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects multiple rejects on rare ports.\n Topic: Oracle Cloud Infrastructure"}, {"role": "assistant", "content": "let threshold = 50;\nlet r_dports = \nOCILogs\n| where EventType contains 'vcn.flowlogs'\n| where ipv4_is_private(DstIpAddr)\n| where ipv4_is_private(SrcIpAddr) == False\n| summarize count() by DstPortNumber\n| top 10 by count_ asc\n| summarize dports = makeset(DstPortNumber)\n| extend k = 1;\nOCILogs\n| where EventType contains 'vcn.flowlogs'\n| where data_action_s =~ 'REJECT'\n| where ipv4_is_private(DstIpAddr)\n| where ipv4_is_private(SrcIpAddr) == False\n| extend k = 1\n| join kind=innerunique (r_dports) on k\n| where dports has tostring(DstPortNumber)\n| summarize count() by SrcIpAddr, bin(TimeGenerated, 5m)\n| where count_ > threshold\n| extend IPCustomEntity = SrcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This alert audits your logging architecture for recommended data tables aligned to Event Logging (EL0) of the Maturity Model for Event Log Management (M-21-31) standard. The alert triggers when recommended data tables in EL0 are not present.\n Topic: MaturityModelForEventLogManagementM2131"}, {"role": "assistant", "content": "let M2131Mapping = datatable(DataTable:string, MaturityLevel:string)\n[\n\"SigninLogs\",\t\"Event Logging (EL0)\",\n\"AADManagedIdentitySignInLogs\", \"Event Logging (EL0)\",\n\"AADServicePrincipalSignInLogs\",\t\"Event Logging (EL0)\",\n\"StorageBlobLogs\",\t\"Event Logging (EL0)\",\n\"StorageFileLogs\",\t\"Event Logging (EL0)\",\n\"AzureMetrics\",\t\"Event Logging (EL0)\",\n\"AuditLogs\",\t\"Event Logging (EL0)\",\n\"IdentityInfo\",\t\"Event Logging (EL0)\",\n\"CommonSecurityLog\",\t\"Event Logging (EL0)\",\n\"ThreatIntelligenceIndicator\",\t\"Event Logging (EL0)\",\n\"DeviceNetworkInfo\",\t\"Event Logging (EL0)\",\n\"DnsEvents\",\t\"Event Logging (EL0)\",\n\"DeviceNetworkEvents\",\t\"Event Logging (EL0)\",\n\"AzureDiagnostics\",\t\"Event Logging (EL0)\",\n\"Usage\",\t\"Event Logging (EL0)\",\n\"SecurityIncident\",\t\"Event Logging (EL0)\",\n\"SecurityAlert\",\t\"Event Logging (EL0)\",\n\"AzureActivity\",\t\"Event Logging (EL0)\",\n\"Heartbeat\",\t\"Event Logging (EL0)\",\n\"OfficeActivity\",\t\"Event Logging (EL0)\",\n\"SecurityEvent\",\t\"Event Logging (EL0)\",\n\"Syslog\",\t\"Event Logging (EL0)\",\n\"AWSCloudTrail\",\t\"Event Logging (EL0)\",\n\"GWorkspaceActivityReports\",\t\"Event Logging (EL0)\",\n\"AWSGuardDuty\",\t\"Event Logging (EL0)\",\n\"AWSVPCFlow\",\t\"Event Logging (EL0)\",\n\"Perf\",\t\"Basic Event Logging (EL1)\",\n\"SentinelHealth\",\t\"Basic Event Logging (EL1)\",\n\"DeviceLogonEvents\",\t\"Basic Event Logging (EL1)\",\n\"DeviceEvents\",\t\"Basic Event Logging (EL1)\",\n\"DeviceNetworkEvents\",\t\"Basic Event Logging (EL1)\",\n\"DeviceFileEvents\",\t\"Basic Event Logging (EL1)\",\n\"DeviceRegistryEvents\",\t\"Basic Event Logging (EL1)\",\n\"DeviceProcessEvents\",\t\"Basic Event Logging (EL1)\",\n\"VMConnection\",\t\"Basic Event Logging (EL1)\",\n\"EmailEvents\",\t\"Basic Event Logging (EL1)\",\n\"ThreatIntelligenceIndicator\",\t\"Basic Event Logging (EL1)\",\n\"SecurityRecommendation\",\t\"Basic Event Logging (EL1)\",\n\"DeviceProcessEvents\",\t\"Basic Event Logging (EL1)\",\n\"ConfigurationData\",\t\"Basic Event Logging (EL1)\",\n\"ConfigurationChange\",\t\"Basic Event Logging (EL1)\",\n\"GatewayDiagnosticLog\",\t\"Basic Event Logging (EL1)\",\n\"TunnelDiagnosticLog\",\t\"Basic Event Logging (EL1)\",\n\"IKEDiagnosticLog\",\t\"Basic Event Logging (EL1)\",\n\"RouteDiagnosticLog\",\t\"Basic Event Logging (EL1)\",\n\"PS2DiagnosticLog\",\t\"Basic Event Logging (EL1)\",\n\"Event\",\t\"Basic Event Logging (EL1)\",\n\"SqlAtpStatus\",\t\"Basic Event Logging (EL1)\",\n\"ConstainerInstanceLog_CL\",\t\"Basic Event Logging (EL1)\",\n\"ContainerEvent_CL\",\t\"Basic Event Logging (EL1)\",\n\"InsightsMetrics\",\t\"Intermediate Event Logging (EL2)\",\n\"EmailUrlInfo\",\t\"Intermediate Event Logging (EL2)\",\n\"EmailAttachmentInfo\",\t\"Intermediate Event Logging (EL2)\",\n\"InformationProtectionLogs_CL\",\t\"Intermediate Event Logging (EL2)\",\n\"CloudAppEvents\",\t\"Intermediate Event Logging (EL2)\",\n\"ContainerInventory\",\t\"Intermediate Event Logging (EL2)\",\n\"Update\",\t\"Advanced Event Logging (EL3)\",\n\"BehaviorAnalytics\",\t\"Advanced Event Logging (EL3)\",\n\"Anomalies\",\t\"Advanced Event Logging (EL3)\",\n\"SecurityRegulatoryCompliance\",\t\"Advanced Event Logging (EL3)\"\n];\nUsage\n  | summarize Entries = count(), Size = sum(Quantity), last_log = datetime_diff(\"second\",now(), max(TimeGenerated)) by DataType\n  | join kind=fullouter(M2131Mapping) on $left.DataType == $right.DataTable\n  | project RecommendedDataTable=DataTable, ExistingDataTable=DataType, MaturityLevel, Size\n  | summarize Logged = countif(Size > 0), NotLogged = countif(isempty(Size)) by RecommendedDataTable, MaturityLevel\n  | where NotLogged > 0 and MaturityLevel == \"Event Logging (EL0)\" and RecommendedDataTable <> \"Usage\"\n  //| where RecommendedDataTable <> \"Data Table Name\" \n  | project RecommendedDataTable, MaturityLevel, NotLogged, TimeObserved=now()\n  | extend CloudApplication = RecommendedDataTable\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for delete actions performed by admin users.\n Topic: CiscoDuoSecurity"}, {"role": "assistant", "content": "CiscoDuo\n| where TimeGenerated > ago(24h)\n| where DvcAction in~ ('activation_delete_link', 'admin_activation_delete', 'admin_delete', 'azure_directory_delete', 'bypass_delete', 'delete_child_customer', 'directory_delete', 'feature_delete', 'group_delete', 'hardtoken_delete', 'integration_delete', 'phone_delete', 'policy_delete', 'u2ftoken_delete', 'user_delete')\n| project TimeGenerated, SrcIpAddr, DstUserName, SrcUserName\n| extend AccountCustomEntity = SrcUserName, IPCustomEntity = SrcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects multiple failed logins to same destinations.\n Topic: Claroty"}, {"role": "assistant", "content": "let threshold = 10;\nClarotyEvent\n| where EventType has 'Login to SRA'\n| where EventType !has 'succeeded'\n| extend Site = column_ifexists(\"site_name\",\"\")\n| where isnotempty(Site)\n| extend SrcUsername = extract(@'User\\s(.*?)\\sfailed', 1, EventMessage)\n| summarize count() by Site, bin(TimeGenerated, 5m)\n| where count_ > threshold\n| extend SGCustomEntity = Site\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies authentication methods being changed for a privileged account. This could be an indication of an attacker adding an auth method to the account so they can have continued access.\nRef : https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-privileged-accounts#things-to-monitor-1\n Topic: Business Email Compromise - Financial Fraud"}, {"role": "assistant", "content": "let VIPUsers = (IdentityInfo\n| where AssignedRoles contains \"Admin\"\n| summarize by tolower(AccountUPN));\nAuditLogs\n| where TimeGenerated > ago(2h)\n| where Category =~ \"UserManagement\"\n| where ActivityDisplayName =~ \"User registered security info\"\n| where LoggedByService =~ \"Authentication Methods\"\n| extend TargetUserPrincipalName = tostring(TargetResources[0].userPrincipalName)\n| where tolower(TargetUserPrincipalName) in (VIPUsers)\n| extend TargetAadUserId = tostring(TargetResources[0].id)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIPAddress = tostring(InitiatedBy.user.ipAddress)\n| extend TargetAccountName = tostring(split(TargetUserPrincipalName, \"@\")[0]), TargetAccountUPNSuffix = tostring(split(TargetUserPrincipalName, \"@\")[1])\n| extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query searches for deactivated user accounts.\n Topic: SlackAudit"}, {"role": "assistant", "content": "SlackAudit\n| where TimeGenerated > ago(24h)\n| where DvcAction =~ 'user_deactivated'\n| summarize by SrcUserName\n| extend AccountCustomEntity = SrcUserName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Correlate IPs blocked by a Cisco firewall appliance with successful Microsoft Entra ID signins.\nBecause the IP was blocked by the firewall, that same IP logging on successfully to Entra ID is potentially suspect and could indicate credential compromise for the user account.\n Topic: Detections"}, {"role": "assistant", "content": "let aadFunc = (tableName:string){\nCommonSecurityLog\n| where DeviceVendor =~ \"Cisco\"\n| where DeviceAction =~ \"denied\"\n| where ipv4_is_private(SourceIP) == false\n| summarize count() by SourceIP\n| join (\n    // Successful signins from IPs blocked by the firewall solution are suspect\n    // Include fully successful sign-ins, but also ones that failed only at MFA stage\n    // as that supposes the password was sucessfully guessed.\n  table(tableName)\n  | where ResultType in (\"0\", \"50074\", \"50076\")\n) on $left.SourceIP == $right.IPAddress\n| extend AccountName = tostring(split(Account, \"@\")[0]), AccountUPNSuffix = tostring(split(Account, \"@\")[1])\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This rule helps to detect usage of Kali Linux in your environment. Attackers might utilize Kali Linuxs tools and features for unauthorized penetration testing, reconnaissance, or exploitation attempts.\n Topic: Web Session Essentials"}, {"role": "assistant", "content": "let lookback = 1d;\n_Im_WebSession (starttime=ago(lookback))\n| project HttpUserAgent, SrcIpAddr, SrcUsername, SrcHostname, Url, TimeGenerated\n| where HttpUserAgent has_all (\"Linux\", \"Kali\")\n| summarize EventCount=count(), EventStartTime=min(TimeGenerated), EventEndTime = max(TimeGenerated), URLs = make_set(Url,100) by HttpUserAgent, SrcIpAddr, SrcUsername, SrcHostname\n| extend Name = iif(SrcUsername contains \"@\", tostring(split(SrcUsername,'@',0)[0]),SrcUsername), UPNSuffix = iif(SrcUsername contains \"@\",tostring(split(SrcUsername,'@',1)[0]),\"\")\n| order by EventCount desc\n| extend IP_0_Address = SrcIpAddr\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend Host_0_HostName = SrcHostname\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects put or get files from one source in short timeframe \n Topic: OracleWebLogicServer"}, {"role": "assistant", "content": "let p = OracleWebLogicServerEvent\n| where HttpRequestMethod in~ ('POST', 'PUT')\n| sort by EventStartTime asc\n| summarize post_time=min(EventStartTime) by SrcIpAddr, tostring(UrlOriginal);\nOracleWebLogicServerEvent\n| where HttpRequestMethod =~ 'GET'\n| sort by EventStartTime asc\n| summarize get_time=min(EventStartTime) by SrcIpAddr, tostring(UrlOriginal)\n| join kind=innerunique (p) on UrlOriginal, SrcIpAddr\n| extend second = datetime_diff('second',get_time,post_time)\n| where second between (1 .. 300)\n| project second, post_time, get_time, SrcIpAddr, UrlOriginal\n| extend IPCustomEntity = SrcIpAddr, UrlCustomEntity = tostring(UrlOriginal)\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "The detection looks for new external sources added to an Azure DevOps feed. An allow list can be customized to explicitly allow known good sources. \nAn attacker could look to add a malicious feed in order to inject malicious packages into a build pipeline.\n Topic: AzureDevOpsAuditing"}, {"role": "assistant", "content": "// Add any known allowed sources and source locations to the filter below (the NuGet Gallery has been added here as an example).\nlet allowed_sources = dynamic([\"NuGet Gallery\"]);\nlet allowed_locations = dynamic([\"https://api.nuget.org/v3/index.json\"]);\nAzureDevOpsAuditing\n// Look for feeds created or modified at either the organization or project level\n| where OperationName matches regex \"Artifacts.Feed.(Org|Project).Modify\"\n| where Details has \"UpstreamSources, added\"\n| extend FeedName = tostring(Data.FeedName)\n| extend FeedId = tostring(Data.FeedId)\n| extend UpstreamsAdded = Data.UpstreamsAdded\n// As multiple feeds may be added expand these out\n| mv-expand UpstreamsAdded\n// Only focus on external feeds\n| where UpstreamsAdded.UpstreamSourceType !~ \"internal\"\n| extend SourceLocation = tostring(UpstreamsAdded.Location)\n| extend SourceName = tostring(UpstreamsAdded.Name)\n// Exclude sources and locations in the allow list\n| where SourceLocation !in (allowed_locations) and SourceName !in (allowed_sources)\n| extend SourceProtocol = tostring(UpstreamsAdded.Protocol)\n| extend SourceStatus = tostring(UpstreamsAdded.Status)\n| project-reorder TimeGenerated, OperationName, ScopeDisplayName, ProjectName, FeedName, SourceName, SourceLocation, SourceProtocol, ActorUPN, UserAgent, IpAddress\n| extend timestamp = TimeGenerated\n| extend AccountName = tostring(split(ActorUPN, \"@\")[0]), AccountUPNSuffix = tostring(split(ActorUPN, \"@\")[1])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Tracking via user agent is one way to differentiate between types of connecting device.\nIn homogeneous enterprise environments the user agent associated with an attacker device may stand out as unusual.\n Topic: Microsoft 365"}, {"role": "assistant", "content": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = starttime - 14d;\nlet MINIMUM_BLOCKS = 10;\nlet SUCCESS_THRESHOLD = 0.2;\nlet HistoricalActivity = \nSigninLogs\n| where TimeGenerated > lookback\n| where isnotempty(UserAgent)\n| summarize SuccessfulSignins=countif(ResultType==\"0\"), BlockedSignins=countif(ResultType==\"50053\") by UserAgent\n| extend SuccessBlockRatio = 1.00 * SuccessfulSignins / BlockedSignins\n| where SuccessBlockRatio < SUCCESS_THRESHOLD\n| where BlockedSignins > MINIMUM_BLOCKS \n;\nOfficeActivity\n| where TimeGenerated between (starttime .. endtime)\n| where  RecordType == \"SharePointFileOperation\"\n| where Operation in (\"FileDownloaded\", \"FileUploaded\")\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), RecentFileActivities=count() by UserAgent, UserId, ClientIP, Site_Url\n| join kind=innerunique (HistoricalActivity) on UserAgent\n| project-away UserAgent1\n| extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n| extend IP_0_Address = ClientIP\n| extend Account_0_Name = AccountName\n| extend Account_0_UPNSuffix = AccountUPNSuffix\n| extend URL_0_Url = Site_Url\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies when a new Campaign has been detected.  This occurs when multiple Detections accross different Hosts are suspected to be part of the same Attack Campaign.\n Topic: Vectra AI Detect"}, {"role": "assistant", "content": "CommonSecurityLog\n| where DeviceVendor == \"Vectra Networks\"\n| where DeviceProduct == \"X Series\"\n| where DeviceEventClassID contains \"campaign\"\n| where DeviceAction == \"START\"\n| extend reason = coalesce(\n                          column_ifexists(\"Reason\", \"\"), \n                          extract(\"reason=(.+?)($|;)\", 1, AdditionalExtensions),\n                          \"\"\n                      )\n| project-rename vectra_URL = DeviceCustomString4\n| sort by TimeGenerated\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Adversaries often abuse email-forwarding rules to monitor victim activities, steal information, and gain intelligence on the victim or their organization. This query highlights cases where user mail is being forwarded, including to external domains.\n Topic: Microsoft 365"}, {"role": "assistant", "content": "OfficeActivity\n| where OfficeWorkload == \"Exchange\"\n| where (Operation =~ \"Set-Mailbox\" and Parameters contains 'ForwardingSmtpAddress') \nor (Operation in~ ('New-InboxRule','Set-InboxRule') and (Parameters contains 'ForwardTo' or Parameters contains 'RedirectTo'))\n| extend parsed=parse_json(Parameters)\n| extend fwdingDestination_initial = (iif(Operation=~\"Set-Mailbox\", tostring(parsed[1].Value), tostring(parsed[2].Value)))\n| where isnotempty(fwdingDestination_initial)\n| extend fwdingDestination = iff(fwdingDestination_initial has \"smtp\", (split(fwdingDestination_initial,\":\")[1]), fwdingDestination_initial )\n| parse fwdingDestination with * '@' ForwardedtoDomain \n| parse UserId with *'@' UserDomain\n| extend subDomain = ((split(strcat(tostring(split(UserDomain, '.')[-2]),'.',tostring(split(UserDomain, '.')[-1])), '.') [0]))\n| where ForwardedtoDomain !contains subDomain\n| extend Result = iff( ForwardedtoDomain != UserDomain ,\"Mailbox rule created to forward to External Domain\", \"Forward rule for Internal domain\")\n| extend ClientIPAddress = case( ClientIP has \".\", tostring(split(ClientIP,\":\")[0]), ClientIP has \"[\", tostring(trim_start(@'[[]',tostring(split(ClientIP,\"]\")[0]))), ClientIP )\n| extend Port = case(\nClientIP has \".\", (split(ClientIP,\":\")[1]),\nClientIP has \"[\", tostring(split(ClientIP,\"]:\")[1]),\nClientIP\n)\n| project TimeGenerated, UserId, UserDomain, subDomain, Operation, ForwardedtoDomain, ClientIPAddress, Result, Port, OriginatingServer, OfficeObjectId, fwdingDestination\n| extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n| extend Host = tostring(split(OriginatingServer, \" (\")[0])\n| extend HostName = tostring(split(Host, \".\")[0])\n| extend DnsDomain = tostring(strcat_array(array_slice(split(Host, '.'), 1, -1), '.'))\n| extend Account_0_Name = AccountName\n| extend Account_0_UPNSuffix = AccountUPNSuffix\n| extend IP_0_Address = ClientIPAddress\n| extend Host_0_HostName = HostName\n| extend Host_0_DnsDomain = DnsDomain\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Goal: To detect anomalous data change/deletion. This query detects SQL queries that changed/deleted a large number of rows, which is significantly higher than normal for this database.\nThe detection is calculated inside recent time window (defined by detectionWindow parameter), and the anomaly is calculated based on previous training window (defined by trainingWindow parameter). The user can set the minimal threshold for anomaly by changing the threshold parameters volThresholdZ and volThresholdQ (higher threshold will detect only more severe anomalies).\n Topic: Azure SQL Database solution for sentinel"}, {"role": "assistant", "content": "let volumeThresholdZ = 3.0;                     // Minimal threshold for the Zscore to trigger anomaly (number of standard deviations above mean). If set higher, only very significant alerts will fire.\nlet volumeThresholdQ = volumeThresholdZ;        // Minimal threshold for the Qscore to trigger anomaly (number of Inter-Percentile Ranges above high percentile). If set higher, only very significant alerts will fire.\nlet volumeThresholdHardcoded = 500;             // Minimal value for the volume metric to trigger anomaly.\nlet detectionWindow = 1h;                       // The size of the recent detection window for detecting anomalies.  \nlet trainingWindow = detectionWindow + 14d;     // The size of the training window before the detection window for learning the normal state.\nlet monitoredColumn = 'AffectedRows';           // The name of the column for volumetric anomalies.\nlet processedData = materialize (\n    AzureDiagnostics\n    | where TimeGenerated >= ago(trainingWindow)\n    | where Category == 'SQLSecurityAuditEvents' and action_id_s has_any (\"RCM\", \"BCM\") // Keep only SQL affected rows\n    | project TimeGenerated, PrincipalName = server_principal_name_s, ClientIp = client_ip_s, HostName = host_name_s, ResourceId,\n              ApplicationName = application_name_s, ActionName = action_name_s, Database = strcat(LogicalServerName_s, '/', database_name_s),\n              IsSuccess = succeeded_s, AffectedRows = affected_rows_d,\n              ResponseRows = response_rows_d, Statement = statement_s\n    | extend QuantityColumn = column_ifexists(monitoredColumn, 0)\n    | extend WindowType = case( TimeGenerated >= ago(detectionWindow), 'detection',\n                                           (ago(trainingWindow) <= TimeGenerated and TimeGenerated < ago(detectionWindow)), 'training', 'other')\n    | where WindowType in ('detection', 'training'));\nlet trainingSet =\n    processedData\n    | where WindowType == 'training'\n    | summarize AvgVal = round(avg(QuantityColumn), 2), StdVal = round(stdev(QuantityColumn), 2), N = count(),\n                P99Val = round(percentile(QuantityColumn, 99), 2), P50Val = round(percentile(QuantityColumn, 50), 2)\n      by Database;\nprocessedData\n| where WindowType == 'detection'\n| join kind = inner (trainingSet) on Database\n| extend ZScoreVal = iff(N >= 20, round(todouble(QuantityColumn - AvgVal) / todouble(StdVal + 1), 2), 0.00),\n         QScoreVal = iff(N >= 20, round(todouble(QuantityColumn - P99Val) / todouble(P99Val - P50Val + 1), 2), 0.00)\n| extend IsVolumeAnomalyOnVal = iff((ZScoreVal > volumeThresholdZ and QScoreVal > volumeThresholdQ and QuantityColumn > volumeThresholdHardcoded), true, false), AnomalyScore = round((ZScoreVal + QScoreVal)/2, 0)\n| project TimeGenerated, Database, PrincipalName, ClientIp, HostName, ApplicationName, ActionName, Statement,\n          IsSuccess, ResponseRows, AffectedRows, IsVolumeAnomalyOnVal, AnomalyScore,ResourceId\n| where IsVolumeAnomalyOnVal == 'true'\n| sort by AnomalyScore desc, TimeGenerated desc\n| extend Name = tostring(split(PrincipalName,'@',0)[0]), UPNSuffix = tostring(split(PrincipalName,'@',1)[0])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query helps surface phishing campaigns associated with Appspot abuse.These emails frequently contain phishing links that utilize the recipients own email address as a unique identifier in the URI.\nThis campaign was published on Twitter by @MsftSecIntel at this link: https://twitter.com/MsftSecIntel/status/1374148156301004800\nReference - https://twitter.com/MsftSecIntel/status/1374148156301004800\n Topic: Microsoft Defender XDR"}, {"role": "assistant", "content": "EmailUrlInfo\n// Detect URLs with a subdomain on appspot.com\n| where UrlDomain matches regex @'\\b[\\w\\-]+-dot-[\\w\\-\\.]+\\.appspot\\.com\\b'\n// Enrich results with sender and recipient data\n| join kind=inner EmailEvents on $left.NetworkMessageId==$right.NetworkMessageId\n// Phishing attempts from Appspot related campaigns typically contain the recipient's email address in the URI\n// Example 1: https://example-dot-example.appspot.com/#recipient@domain.com\n// Example 2: https://example-dot-example.appspot.com/index.html?user=recipient@domain.com\n| where Url has RecipientEmailAddress\n    // Some phishing campaigns pass recipient email as a Base64 encoded string in the URI\n    or Url has base64_encode_tostring(RecipientEmailAddress)\n| project-away NetworkMessageId1, ReportId1, Type1, TimeGenerated1, Timestamp1\n| extend Name = tostring(split(SenderFromAddress, '@', 0)[0]), UPNSuffix = tostring(split(SenderFromAddress, '@', 1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = SenderIPv4\n| extend URL_0_Url = Url\n| extend MailBox_0_MailboxPrimaryAddress = RecipientEmailAddress\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects anomalous API key usage activity.\n Topic: PaloAltoPrismaCloud"}, {"role": "assistant", "content": "let threshold = 10;\nPaloAltoPrismaCloud\n| where ResourceType =~ 'Login'\n| where EventResult =~ 'Failed'\n| where EventMessage has 'access key'\n| summarize count() by UserName, bin(TimeGenerated, 5m)\n| where count_ > threshold\n| extend AccountCustomEntity = UserName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for user logins to management console.\n Topic: Cisco Secure Endpoint"}, {"role": "assistant", "content": "CiscoSecureEndpoint\n| where TimeGenerated > ago(24h)\n| where EventSubType =~ 'User'\n| where EventMessage =~ 'login'\n| extend AccountCustomEntity = SrcUserName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects suspicious number of user agents from the same IP address.\n Topic: ImpervaCloudWAF"}, {"role": "assistant", "content": "let threshold = 10;\nImpervaWAFCloud\n| summarize d_uas = dcount(HttpUserAgentOriginal) by SrcIpAddr, bin(TimeGenerated, 5m)\n| where d_uas >= threshold\n| extend IPCustomEntity = SrcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query shows list of unaccounted internal DNS servers.\n Topic: Ubiquiti UniFi"}, {"role": "assistant", "content": "let threshold = 100;\nUbiquitiAuditEvent\n| where TimeGenerated > ago(24h)\n| where EventCategory =~ 'firewall'\n| where ipv4_is_private(DstIpAddr)\n| where DvcAction =~ 'Accepted'\n| where DstPortNumber == '53'\n| summarize count() by DstIpAddr\n| where count_ > threshold\n| extend IPCustomEntity = DstIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies communication for well known protocol over a non-standard port based on learning period activity. This can indicate malicious communication (C2) or exfiltration by attackers trying to communicate over known ports (22:SSH, 80:HTTP) but dont use the known protocol headers to match the port number.\n\nConfigurable Parameters:\n\n- Learning period time - learning period for protocol learning in days. Default is set to 7.\n Topic: Azure Firewall"}, {"role": "assistant", "content": "let LearningPeriod = 7d;\nlet RunTime = 1d;\nlet StartLearningPeriod = LearningPeriod + RunTime;\nlet EndRunTime = RunTime - 1d;\nlet LearningPortToProtocol1 =  (AzureDiagnostics\n| where OperationName == \"AzureFirewallApplicationRuleLog\"\n| where TimeGenerated between (ago(StartLearningPeriod) .. ago(RunTime))\n| extend msg_s= column_ifexists('msg_s',Message)\n| parse msg_s with Protocol \" request from \" SourceIp \":\" SourcePort:int \" to \" Fqdn \":\" DestinationPort:int \".\" *\n| where isnotempty(DestinationPort)\n| summarize LearningTimeCount = count() by LearningTimeDstPort = DestinationPort, LearningTimeProtocol = Protocol, SourceIp, Fqdn);\nlet LearningPortToProtocol2 = (AZFWNetworkRule\n| where TimeGenerated between (ago(StartLearningPeriod) .. ago(RunTime))\n| where isnotempty(DestinationPort)\n| extend Fqdn = DestinationIp\n| summarize LearningTimeCount = count() by LearningTimeDstPort = DestinationPort, LearningTimeProtocol = Protocol, SourceIp, Fqdn);\nlet LearningPortToProtocol3 = (AZFWApplicationRule\n| where TimeGenerated between (ago(StartLearningPeriod) .. ago(RunTime))\n| where isnotempty(DestinationPort)\n| summarize LearningTimeCount = count() by LearningTimeDstPort = DestinationPort, LearningTimeProtocol = Protocol, SourceIp, Fqdn);\nlet AlertTimePortToProtocol1 = (AzureDiagnostics\n| where TimeGenerated between (ago(RunTime) .. ago(EndRunTime))\n| where OperationName == \"AzureFirewallApplicationRuleLog\"\n| extend msg_s= column_ifexists('msg_s',Message)\n| parse msg_s with Protocol \" request from \" SourceIp \":\" SourcePort \" to \" Fqdn \":\" DestinationPort:int \".\" *\n| where isnotempty(DestinationPort)\n| summarize AlertTimeCount = count() by AlertTimeDstPort = DestinationPort, AlertTimeProtocol = Protocol);\nlet AlertTimePortToProtocol2 = (AZFWNetworkRule\n| where TimeGenerated between (ago(RunTime) .. ago(EndRunTime))\n| where isnotempty(DestinationPort)\n| extend Fqdn = DestinationIp\n| summarize AlertTimeCount = count() by AlertTimeDstPort = DestinationPort, AlertTimeProtocol = Protocol);\nlet AlertTimePortToProtocol3 = (AZFWApplicationRule\n| where TimeGenerated between (ago(RunTime) .. ago(EndRunTime))\n| where isnotempty(DestinationPort)\n| summarize AlertTimeCount = count() by AlertTimeDstPort = DestinationPort, AlertTimeProtocol = Protocol);\n(union isfuzzy=true \n(AlertTimePortToProtocol1 \n| join kind=leftouter (LearningPortToProtocol1) on $left.AlertTimeDstPort == $right.LearningTimeDstPort\n| where LearningTimeProtocol != AlertTimeProtocol),\n(AlertTimePortToProtocol2 \n| join kind=leftouter (LearningPortToProtocol2) on $left.AlertTimeDstPort == $right.LearningTimeDstPort\n| where LearningTimeProtocol != AlertTimeProtocol),\n(AlertTimePortToProtocol3 \n| join kind=leftouter (LearningPortToProtocol3) on $left.AlertTimeDstPort == $right.LearningTimeDstPort\n| where LearningTimeProtocol != AlertTimeProtocol))\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Create an incident when an Account is suspected to be compromised. \nThe higher the severity level is, the more immediate attention it requires as Vectra AI engine is more confident that this is a real threat. \nLevel of severity are: Low, Medium, High, Critical). Recommended configuration is to trigger an alert for at least High and Critical.\n Topic: Vectra AI Detect"}, {"role": "assistant", "content": "// Edit this variable to only keep the Severity level where an incident needs to be created.\n//Level of severity are: Low, Medium, High, Critical). Recommended configuration is to trigger an alert for at least High and Critical.'\nlet configured_level = dynamic([\"High\", \"Critical\"]);\nlet upn_has_prefix = \":\";\nCommonSecurityLog\n| where DeviceVendor == \"Vectra Networks\"\n| where DeviceProduct == \"X Series\"\n| where DeviceEventClassID == \"asc\"\n| extend saccount = extract(\"saccount=(.+?);\", 1, AdditionalExtensions)\n| extend type = iff(saccount matches regex upn_has_prefix, tostring(split(saccount,\":\")[0]) ,\"network\" ) \n| extend upn = iff(saccount matches regex upn_has_prefix, tostring(split(saccount,\":\")[1]) , saccount )\n| extend name = tostring(split(upn,\"@\")[0])\n| extend upn_suffix = tostring(split(upn,\"@\")[1])\n| project-rename threat_score = FlexNumber1\n| project-rename certainty_score = FlexNumber2\n| project-rename vectra_URL = DeviceCustomString4\n| project-rename detection_name = DeviceEventClassID\n| project-rename score_decreases = DeviceCustomString3\n| extend level = case( threat_score <  50 and certainty_score < 50, \"Low\",\n                      threat_score < 50 and certainty_score >= 50 , \"Medium\", \n                      threat_score >= 50 and certainty_score <= 50, \"High\", \n                      threat_score >= 50 and certainty_score >= 50, \"Critical\",\n                      \"UNKNOWN\")\n| extend Severity = case(level == \"Info\", \"Informational\",level == \"Critical\", \"High\", level)\n| where level in (configured_level) \n//keep only the event with the highest threat score per Host\n| summarize arg_max(threat_score, *) by saccount\n| sort by TimeGenerated\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy on Datapipeline policy. Attackers could use these operations for privilege escalation. Verify these actions with the user.\n Topic: Amazon Web Services"}, {"role": "assistant", "content": "AWSCloudTrail\n  | where EventName in (\"PutUserPolicy\",\"PutRolePolicy\",\"PutGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n  | extend PolicyName = tostring(parse_json(RequestParameters).policyName)\n  | extend Statement = parse_json(tostring((parse_json(RequestParameters).policyDocument))).Statement\n  | mvexpand Statement\n  | extend Action = parse_json(Statement).Action , Effect = tostring(parse_json(Statement).Effect), Resource = tostring(parse_json(Statement).Resource), Condition = tostring(parse_json(Statement).Condition)\n  | extend Action = tostring(Action)\n  | where Effect =~ \"Allow\" and (((Action has \"iam:*\" or Action has \"iam:PassRole\") and Action has \"datapipeline:*\") or ((Action has \"iam:*\" or Action has \"iam:PassRole\") and Action has \"datapipeline:CreatePipeline\" and Action has \"datapipeline:PutPipelineDefinition\" and Action has \"datapipeline:ActivatePipeline\") or ((Action contains \"iam:*\" or Action contains \"iam:PassRole\") and Action contains \"datapipeline:Create*\" and Action contains \"datapipeline:Put*\" and Action contains \"datapipeline:Activate*\")) and Resource == \"*\" and isempty(Condition)\n  | extend UserIdentityArn = iif(isempty(UserIdentityArn), tostring(parse_json(Resources)[0].ARN), UserIdentityArn)\n  | extend UserName = tostring(split(UserIdentityArn, '/')[-1])\n  | extend AccountName = case( UserIdentityPrincipalid == \"Anonymous\", \"Anonymous\", isempty(UserIdentityUserName), UserName, UserIdentityUserName)\n  | extend AccountName = iif(AccountName contains \"@\", tostring(split(AccountName, '@', 0)[0]), AccountName),\n    AccountUPNSuffix = iif(AccountName contains \"@\", tostring(split(AccountName, '@', 1)[0]), \"\")\n  | distinct TimeGenerated, EventName, PolicyName, SourceIpAddress, RecipientAccountId, AccountName, AccountUPNSuffix, UserIdentityArn, UserIdentityUserName\n  | extend timestamp = TimeGenerated\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for DNS requests with errors.\n Topic: GoogleCloudPlatformDNS"}, {"role": "assistant", "content": "GCPCloudDNS\n| where TimeGenerated > ago(24h)\n| where EventResultDetails != 'NOERROR'\n| extend DNSCustomEntity = Query, IPCustomEntity = SrcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies Progress MOVEIt File Transfers  with distinct folder count above certain threshold in a 15min time period.\n Please note that entity mapping for arrays is not supported, so when there is a single value in an array, we will pull that value from the array as a single string to populate the entity to support entity mapping features within Sentinel. Additionally, if the array is multivalued, we will input a string to indicate this with a unique hash so that matching will not occur.\n Topic: Windows Forwarded Events"}, {"role": "assistant", "content": "let threshold = 500;\nEvent\n| where EventID == 0 and Source == \"MOVEit DMZ Audit\" and EventLog == \"Application\"\n| where RenderedDescription has_any (\"Downloaded\", \"Uploaded\")\n| parse RenderedDescription with * \"User '\" userdisplayname \"' (\" *\n| parse RenderedDescription with * \"IPAddress: \" ipaddress \" FileID:\" * \" FileName: \" filename \" FolderID: \" folderid \" FolderPath: \" folderpath \" Username: \" username \" AgentBrand: \" *\n| summarize count_distinct_folderpath=dcount(folderpath), dirlist=make_set(folderpath) by Computer,userdisplayname,username,ipaddress,bin(TimeGenerated, 15m)\n| where count_distinct_folderpath >= threshold\n| extend DirSample = iff(array_length(dirlist) == 1, tostring(dirlist[0]), strcat(\"SeeDirListField\",\"_\", tostring(hash(tostring(dirlist)))))\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the redirect URL of an app being changed.\n  Applications associated with URLs not controlled by the organization can pose a security risk.\n  Ref: https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-applications#application-configuration-changes\n Topic: Detections"}, {"role": "assistant", "content": "AuditLogs\n  | where Category =~ \"ApplicationManagement\"\n  | where Result =~ \"success\"\n  | where OperationName =~ 'Update Application'\n  | where TargetResources has \"AppAddress\"\n  | mv-expand TargetResources\n  | mv-expand TargetResources.modifiedProperties\n  | where TargetResources_modifiedProperties.displayName =~ \"AppAddress\"\n  | extend Key = tostring(TargetResources_modifiedProperties.displayName)\n  | extend NewValue = TargetResources_modifiedProperties.newValue\n  | extend OldValue = TargetResources_modifiedProperties.oldValue\n  | where isnotempty(Key) and isnotempty(NewValue)\n  | project-reorder Key, NewValue, OldValue\n  | extend NewUrls = extract_all('\"Address\":([^,]*)', tostring(NewValue))\n  | extend OldUrls = extract_all('\"Address\":([^,]*)', tostring(OldValue))\n  | extend AddedUrls = set_difference(NewUrls, OldUrls)\n  | where array_length(AddedUrls) > 0\n  | extend UserAgent = iif(tostring(AdditionalDetails[0].key) == \"User-Agent\", tostring(AdditionalDetails[0].value), \"\")\n  | extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n  | extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n  | extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n  | extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n  | extend InitiatingIPAddress = tostring(InitiatedBy.user.ipAddress)\n  | extend AddedBy = iif(isnotempty(InitiatingUserPrincipalName), InitiatingUserPrincipalName, InitiatingAppName)\n  | extend TargetAppName = tostring(TargetResources.displayName)\n  | extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1])\n  | project-reorder TimeGenerated, TargetAppName, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingIPAddress, AddedUrls, AddedBy, UserAgent\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Looks for administrative actions in AzureActivity from known VPS provider network ranges.\nThis is not an exhaustive list of VPS provider ranges but covers some of the most prevalent providers observed.\n Topic: Azure Activity"}, {"role": "assistant", "content": "let IP_Data = (externaldata(network:string)\n[@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/VPS_Networks.csv\"] with (format=\"csv\"));\nAzureActivity\n| where CategoryValue =~ \"Administrative\"\n| evaluate ipv4_lookup(IP_Data, CallerIpAddress, network, return_unmatched = false)\n| summarize Operations = make_set(OperationNameValue), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by CallerIpAddress, Caller\n| extend Name = tostring(split(Caller,'@',0)[0]), UPNSuffix = tostring(split(Caller,'@',1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = CallerIpAddress\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query searches for having 1 Global Administrator reduces the surface area of attack for your Azure tenant, \n but sets up a single point of failure for the whole tenant. Global Administrators have access\n to all aspects of Azure\n Topic: SenservaPro"}, {"role": "assistant", "content": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'AzureSecureScoreOneAdmin'\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Adversaries may use valid accounts to log into a computer using the Remote Desktop Protocol (RDP).\nThe adversary may then perform actions as the logged-on user. FIN10, for example, has used RDP to move laterally to systems in the victim environment.\n Topic: UEBA Essentials"}, {"role": "assistant", "content": "BehaviorAnalytics\n| where ActivityType =~ \"LogOn\"\n| where ActionType =~ \"RemoteInteractiveLogon\"\n| where ActivityInsights has \"True\"\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights\n| extend Name=split(UserPrincipalName, \"@\")[0], UPNSuffix=split(UserPrincipalName, \"@\")[1]\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = SourceIPAddress\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies Microsoft Sentinel Analytics Rules administrative operations\n Topic: Azure Activity"}, {"role": "assistant", "content": "let opValues = dynamic([\"Microsoft.SecurityInsights/alertRules/write\", \"Microsoft.SecurityInsights/alertRules/delete\"]);\n// Microsoft Sentinel Analytics - Rule Create / Update / Delete\nAzureActivity\n| where CategoryValue =~ \"Administrative\"\n| where OperationNameValue in~ (opValues)\n| where ActivitySubstatusValue in~ (\"Created\", \"OK\")\n| sort by TimeGenerated desc\n| extend Name = tostring(split(Caller,'@',0)[0]), UPNSuffix = tostring(split(Caller,'@',1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = CallerIpAddress\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query detects new user creation from SQL Server using the SQLEvent KQL Parser function.\n Topic: Microsoft Windows SQL Server Database Audit"}, {"role": "assistant", "content": "// SQLEvent is not the table name, it is the function name that should already be imported into your workspace.\n// The underlying table where the data exists is the Event table.\n// This query checks for new user account created on SQL Server using the SQLEvent() parser\n//\nSQLEvent\n| where Statement has \"Create Login\"\n| parse Statement with \"CREATE LOGIN [\" TargetUser:string \"]\" *\n| project TimeGenerated, Computer, Action, ClientIP, CurrentUser, DatabaseName, TargetUser, ObjectName, Statement\n| extend Name = iff(CurrentUser contains '@', tostring(split(CurrentUser, '@', 0)[0]), CurrentUser)\n| extend UPNSuffix = iff(CurrentUser contains '@', tostring(split(CurrentUser, '@', 1)[0]), '')\n| extend Name = iff(CurrentUser contains '\\\\', tostring(split(CurrentUser, '\\\\', 1)[0]), Name)\n| extend NTDomain = iff(CurrentUser contains '\\\\', tostring(split(CurrentUser, '\\\\', 0)[0]), '')\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend Account_0_NTDomain = NTDomain\n| extend IP_0_Address = ClientIP\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "New processes in stable environments may indicate malicious activity. Analyzing logon sessions where these binaries ran can help identify attacks.\n Topic: Windows Security Events"}, {"role": "assistant", "content": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = starttime - 14d;\nlet ProcessCreationEvents=() {\nlet processEvents=SecurityEvent\n| where TimeGenerated between(lookback..endtime)\n| where EventID==4688\n| project TimeGenerated, Computer, Account, FileName=tostring(split(NewProcessName, @'')[(-1)]), NewProcessName, ProcessCommandLine = CommandLine, InitiatingProcessFileName=ParentProcessName;\nprocessEvents};\nProcessCreationEvents\n| where TimeGenerated between(lookback..starttime)\n| summarize HostCount=dcount(Computer) by FileName\n| join kind=rightanti (\n    ProcessCreationEvents\n    | where TimeGenerated between(starttime..endtime)\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), Computers = make_set(Computer,1000) , HostCount=dcount(Computer) by Account, NewProcessName, FileName, ProcessCommandLine, InitiatingProcessFileName\n) on FileName\n| extend timestamp = StartTime\n| extend NTDomain = tostring(split(Account,'\\\\',0)[0]), Name = tostring(split(Account,'\\\\',1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_NTDomain = NTDomain\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "A summary of failed logons can be used to infer lateral movement with the intention of discovering credentials and sensitive data\n Topic: Windows Security Events"}, {"role": "assistant", "content": "SecurityEvent\n| where AccountType == 'User' and EventID == 4625\n| extend Reason = case(\nSubStatus == '0xc000005e', 'No logon servers available to service the logon request',\nSubStatus == '0xc0000062', 'Account name is not properly formatted',\nSubStatus == '0xc0000064', 'Account name does not exist',\nSubStatus == '0xc000006a', 'Incorrect password',    SubStatus == '0xc000006d', 'Bad user name or password',\nSubStatus == '0xc000006f', 'User logon blocked by account restriction',\nSubStatus == '0xc000006f', 'User logon outside of restricted logon hours',\nSubStatus == '0xc0000070', 'User logon blocked by workstation restriction',\nSubStatus == '0xc0000071', 'Password has expired',\nSubStatus == '0xc0000072', 'Account is disabled',\nSubStatus == '0xc0000133', 'Clocks between DC and other computer too far out of sync',\nSubStatus == '0xc000015b', 'The user has not been granted the requested logon right at this machine',\nSubStatus == '0xc0000193', 'Account has expirated',\nSubStatus == '0xc0000224', 'User is required to change password at next logon',\nSubStatus == '0xc0000234', 'Account is currently locked out',\nstrcat('Unknown reason substatus: ', SubStatus))\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), count() by Reason\n| extend timestamp = StartTimeUtc\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Beyond your internal software management systems, it is possible you may not have visibility into your entire footprint of SolarWinds installations. This query helps discover any systems that have SolarWinds processes.\n Topic: Legacy IOC based Threat Protection"}, {"role": "assistant", "content": "\n(union isfuzzy=true \n( \nSecurityEvent  \n| where EventID == '4688' \n| where tolower(NewProcessName) has 'solarwinds' \n| extend MachineName = Computer , Process = NewProcessName\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), MachineCount = dcount(MachineName), AccountCount = dcount(Account), MachineNames = make_set(MachineName), Accounts = make_set(Account) by Process, Type\n), \n( \nWindowsEvent  \n| where EventID == '4688' and EventData has \"solarwinds\"\n| extend NewProcessName = tostring(EventData.NewProcessName)\n| where tolower(NewProcessName) has 'solarwinds' \n| extend MachineName = Computer , Process = NewProcessName\n| extend Account =  strcat(tostring(EventData.SubjectDomainName),\"\\\\\", tostring(EventData.SubjectUserName))\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), MachineCount = dcount(MachineName), AccountCount = dcount(Account), MachineNames = make_set(MachineName), Accounts = make_set(Account) by Process, Type\n), \n( \nDeviceProcessEvents \n| where tolower(InitiatingProcessFolderPath) has 'solarwinds' \n| extend MachineName = DeviceName , Process = InitiatingProcessFolderPath, Account = AccountName\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), MachineCount = dcount(MachineName), AccountCount = dcount(Account), MachineNames = make_set(MachineName), Accounts = make_set(Account)  by Process, Type\n), \n( \nEvent \n| where Source == \"Microsoft-Windows-Sysmon\" \n| where EventID == 1 \n| extend Image = tostring(parse_json(EventData).[4].[\"#text\"]) \n| where tolower(Image) has 'solarwinds' \n| extend MachineName = Computer , Process = Image, Account = UserName\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), MachineCount = dcount(MachineName), AccountCount = dcount(Account), MachineNames = make_set(MachineName), Accounts = make_set(Account)  by Process, Type\n) \n) \n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query shows rare files observed\n Topic: PaloAltoCDL"}, {"role": "assistant", "content": "PaloAltoCDLEvent\n| where TimeGenerated > ago(24h)\n| where isnotempty(SrcFileName)\n| summarize RareFiles = count() by SrcFileName\n| top 20 by RareFiles asc\n| extend FileCustomEntity = SrcFileName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for requests for rare destination ports.\n Topic: ImpervaCloudWAF"}, {"role": "assistant", "content": "ImpervaWAFCloud\n| where TimeGenerated > ago(24h)\n| summarize count() by DstIpAddr, DstPortNumber\n| top 20 by count_ asc\n| extend IPCustomEntity = DstIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This hunting query identifies user removed from a SQL Server Role. It relies on the SQLEvent KQL Parser function.\n Topic: Microsoft Windows SQL Server Database Audit"}, {"role": "assistant", "content": "// SQLEvent is not the table name, it is the function name that should already be imported into your workspace.\n// The underlying table where the data exists is the Event table.\n// This query checks for user removed from a ServerRole\nSQLEvent\n| where Statement has_all (\"Alter Server role\", \"drop member\")\n| parse Statement with * \"DROP MEMBER [\" TargetUser:string \"]\" *\n| project TimeGenerated, Computer, Action, ClientIP, CurrentUser, DatabaseName, TargetUser, ObjectName, Statement \n| extend Name = iff(CurrentUser contains '@', tostring(split(CurrentUser, '@', 0)[0]), CurrentUser)\n| extend UPNSuffix = iff(CurrentUser contains '@', tostring(split(CurrentUser, '@', 1)[0]), '')\n| extend Name = iff(CurrentUser contains '\\\\', tostring(split(CurrentUser, '\\\\', 1)[0]), Name)\n| extend NTDomain = iff(CurrentUser contains '\\\\', tostring(split(CurrentUser, '\\\\', 0)[0]), '')\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend Account_0_NTDomain = NTDomain\n| extend IP_0_Address = ClientIP\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "DMARC Not Configured\n Topic: CTM360"}, {"role": "assistant", "content": "HackerViewLog_Azure_1_CL | where severity_s == \"medium\" | where progress_status_s == \"New\" | where status_s != \"inactive\"  | where issue_name_s == \"DMARC Not Configured\"\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detected a SSM document that is publicly exposed, which could lead to sensitive information leakage to the public. Verify the object configurations.\n Topic: Amazon Web Services"}, {"role": "assistant", "content": "AWSCloudTrail\n| where  EventName == \"ModifyDocumentPermission\" and isempty(ErrorCode) and isempty(ErrorMessage)\n| where todynamic(parse_json(RequestParameters).[\"accountIdsToAdd\"]) == '[\"all\"]'\n| extend UserIdentityArn = iif(isempty(UserIdentityArn), tostring(parse_json(Resources)[0].ARN), UserIdentityArn)\n| extend UserName = tostring(split(UserIdentityArn, '/')[-1])\n| extend AccountName = case( UserIdentityPrincipalid == \"Anonymous\", \"Anonymous\", isempty(UserIdentityUserName), UserName, UserIdentityUserName)\n| extend AccountName = iif(AccountName contains \"@\", tostring(split(AccountName, '@', 0)[0]), AccountName),\n  AccountUPNSuffix = iif(AccountName contains \"@\", tostring(split(AccountName, '@', 1)[0]), \"\")  \n| project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent,UserIdentityUserName, SessionMfaAuthenticated, RecipientAccountId, AccountName, AccountUPNSuffix, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData, RequestParameters, ResponseElements, UserIdentityArn\n| extend timestamp = TimeGenerated\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects request to sensitive files.\n Topic: Tomcat"}, {"role": "assistant", "content": "let forbidden_files = dynamic(['shadow', 'passwd', 'id_rsa']);\nTomcatEvent\n| extend File = extract(@'(.*\\/)?(.*)', 2, tostring(UrlOriginal))\n| where File in (forbidden_files)\n| extend FileCustomEntity = File, UrlCustomEntity = UrlOriginal\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for threats discovered via security risk scans.\n Topic: Trend Micro Cloud App Security"}, {"role": "assistant", "content": "TrendMicroCAS\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'security_risk_scan'\n| where isnotempty(SecurityRiskName)\n| project DetectionTime, DstUserName, SrcFileName, SecurityRiskName\n| extend AccountCustomEntity = DstUserName, FileCustomEntity = SrcFileName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Shows data loss prevention action by IP address.\n Topic: Trend Micro Apex One"}, {"role": "assistant", "content": "TMApexOneEvent\n| where TimeGenerated > ago(24h)\n| where EventMessage has \"Data Loss Prevention\"\n| extend DlpAction = case(\nDvcAction == \"-1\", \"Not available\",\nDvcAction == \"0\", \"Blocked\", \nDvcAction == \"1\", \"Deleted\",\nDvcAction == \"2\", \"Delivered\",\nDvcAction == \"3\", \"Logged\", \nDvcAction == \"4\", \"Passed\",\nDvcAction == \"5\", \"Quarantined\",\nDvcAction == \"6\", \"Replaced\", \nDvcAction == \"7\", \"Archived\",\nDvcAction == \"8\", \"Archived (message body only)\",\nDvcAction == \"9\", \"Quarantined (message body only)\", \nDvcAction == \"10\", \"Passed (message body only)\",\nDvcAction == \"11\", \"Encrypted\",\nDvcAction == \"12\", \"Alerted (endpoint)\",\nDvcAction == \"13\", \"Alerted (server)\", \nDvcAction == \"14\", \"Data recorded\",\nDvcAction == \"15\", \"User justified\",\nDvcAction == \"16\", \"Handed off\",\nDvcAction == \"17\", \"Recipient altered\", \nDvcAction == \"18\", \"Blind carbon copied\",\nDvcAction == \"19\", \"Delivery postponed\",\nDvcAction == \"20\", \"Stamped\",\nDvcAction == \"21\", \"Attachment deleted\",\nDvcAction == \"22\", \"Subject tagged\",\nDvcAction == \"23\", \"X-header tagged\",\nDvcAction == \"24\", \"Decrypted\",\nDvcAction == \"25\", \"Re-encrypted\",\nDvcAction == \"26\", \"Tagged (mail)\",\nDvcAction == \"27\", \"Encrypted (user key)\",\nDvcAction == \"28\", \"Encrypted (group key)\",\nDvcAction == \"29\", \"Moved\",\nDvcAction == \"30\", \"Passed (encrypted)\",\nDvcAction == \"31\", \"Passed (user justified)\",\nDvcAction == \"32\", \"Blocked (Endpoint Encryption not installed)\",\nDvcAction == \"33\", \"Blocked (user justified)\",\nDvcAction == \"34\", \"Blocked (Endpoint Encryption logged off)\",\nDvcAction == \"35\", \"Blocked (Endpoint Encryption error)\",\nDvcAction == \"36\", \"web upload\",\n\"unknown\")\n| summarize ActionCount = count() by DlpAction, SrcIpAddr, FileName\n| sort by ActionCount desc \n| extend IPCustomEntity = SrcIpAddr, FileCustomEntity = FileName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Finds non-owner mailbox access by admin/delegate permissions. Whitelist valid users and check others for unauthorized access.\n Topic: Global Secure Access"}, {"role": "assistant", "content": "let starttime = todatetime('{{StartTimeISO}}');\n  let endtime = todatetime('{{EndTimeISO}}');\n  // Enriched Logs Query for Mailbox Logins (non-owner)\n  let EnrichedMailboxLogins = EnrichedMicrosoft365AuditLogs\n      | where TimeGenerated between (starttime .. endtime)\n      | where Workload == \"Exchange\"\n      | where Operation == \"MailboxLogin\"\n      | extend Logon_Type = tostring(parse_json(tostring(AdditionalProperties)).LogonType)\n      | extend MailboxOwnerUPN = tostring(parse_json(tostring(AdditionalProperties)).MailboxOwnerUPN)\n      | where Logon_Type != \"Owner\"\n      | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), count() by Operation, UserType, UserId, MailboxOwnerUPN, Logon_Type, ClientIp\n      | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n      | extend IP_0_Address = ClientIp\n      | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix;\n  // Office Activity Query for Mailbox Logins (non-owner)\n  let OfficeMailboxLogins = OfficeActivity\n      | where TimeGenerated between (starttime .. endtime)\n      | where OfficeWorkload == \"Exchange\"\n      | where Operation == \"MailboxLogin\" and Logon_Type != \"Owner\"\n      | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), count() by Operation, OrganizationName, UserType, UserId, MailboxOwnerUPN, Logon_Type, ClientIP\n      | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n      | extend IP_0_Address = ClientIP\n      | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix;\n  // Combine both results\n  let CombinedMailboxLogins = EnrichedMailboxLogins\n      | union OfficeMailboxLogins\n      | summarize arg_min(StartTime, *) by UserId, MailboxOwnerUPN, Logon_Type;\n  // Final output\n  CombinedMailboxLogins\n      | project StartTime, EndTime, Operation, UserId, MailboxOwnerUPN, Logon_Type, Account_0_Name, Account_0_UPNSuffix, IP_0_Address\n      | order by StartTime desc\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Infoblox SOC Insight detected in logs sourced via Infoblox CDC. Customize scheduling, responses and more. This rule depends on a parser based on a Kusto Function to work as expected called [**InfobloxCDC_SOCInsights**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox/Parsers/InfobloxCDC_SOCInsights.yaml).\n Topic: Infoblox"}, {"role": "assistant", "content": "InfobloxCDC_SOCInsights\n| summarize arg_max(TimeGenerated, *) by InfobloxInsightID\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Rule helps to detect if headline ratings is drop in BitSight.\n Topic: BitSight"}, {"role": "assistant", "content": "let timeframe = 24h;\nBitSightGraphData\n| where ingestion_time() > ago(timeframe)\n| where toint(RatingDifferance) < 0\n| project RatingDate, Rating, CompanyName, RatingDifferance\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query idenifies when rundll32.exe executes a specific set of inline VBScript commands\n References: https://www.microsoft.com/security/blog/2021/03/04/goldmax-goldfinder-sibot-analyzing-nobelium-malware/\n Topic: Detections"}, {"role": "assistant", "content": "(union isfuzzy=true \n(SecurityEvent\n| where EventID == 4688\n| where Process =~ 'rundll32.exe' \n| where CommandLine has_all ('Execute','RegRead','window.close')\n| project TimeGenerated, Computer, SubjectAccount = Account, SubjectUserName, SubjectDomainName, SubjectUserSid, Process, ProcessId, NewProcessName, CommandLine, ParentProcessName, _ResourceId\n),\n(WindowsEvent\n| where EventID == 4688 and EventData has 'rundll32.exe' and EventData has_any ('Execute','RegRead','window.close')\n| extend NewProcessName = tostring(EventData.NewProcessName)\n| extend Process=tostring(split(NewProcessName, '\\\\')[-1])\n| where Process =~ 'rundll32.exe' \n| extend CommandLine = tostring(EventData.CommandLine)\n| where CommandLine has_all ('Execute','RegRead','window.close')\n| extend SubjectAccount =  strcat(EventData.SubjectDomainName,\"\\\\\", EventData.SubjectUserName)\n| extend ParentProcessName = tostring(EventData.ParentProcessName)  \n| project TimeGenerated, Computer, SubjectAccount, SubjectUserName = tostring(EventData.SubjectUserName), SubjectDomainName = tostring(EventData.SubjectDomainName), SubjectUserSid = tostring(EventData.SubjectUserSid), Process, NewProcessName, CommandLine, ParentProcessName, _ResourceId\n)\n)\n| extend HostName = tostring(split(Computer, \".\")[0]), DomainIndex = toint(indexof(Computer, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(Computer, DomainIndex + 1), Computer)\n| project-away DomainIndex\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query detects Adfind tool use for domain reconnaissance, regardless of executable name, focusing on DC and ADFS servers, to spot potential adversary activity.\n Topic: Windows Security Events"}, {"role": "assistant", "content": "// Adjust lookupwindows for aggregate interval \nlet lookupwindow = 2m;\nlet threshold = 3; //number of commandlines in the set below\nlet DCADFSServersList = dynamic ([\"DCServer01\", \"DCServer02\", \"ADFSServer01\"]); // Enter a reference list of hostnames for your DC/ADFS servers\nlet tokens = dynamic([\"objectcategory\",\"domainlist\",\"dcmodes\",\"adinfo\",\"trustdmp\",\"computers_pwdnotreqd\",\"Domain Admins\", \"objectcategory=person\", \"objectcategory=computer\", \"objectcategory=*\"]);\nSecurityEvent\n//| where Computer in (DCADFSServersList) // Uncomment to limit it to your DC/ADFS servers list if specified above or any pattern in hostnames (startswith, matches regex, etc).\n| where EventID == 4688\n| where CommandLine has_any (tokens)\n| where CommandLine matches regex \"(.*)>(.*)\"\n| summarize Commandlines = make_set(CommandLine, 100), LastObserved=max(TimeGenerated) by bin(TimeGenerated, lookupwindow), Account, Computer, ParentProcessName, NewProcessName\n| extend Count = array_length(Commandlines)\n| where Count > threshold\n| extend NTDomain = split(Account, '\\\\', 0)[0], Name = split(Account, '\\\\', 1)[0], HostName = split(Computer, '.', 0)[0], DnsDomain = strcat_array(array_slice(split(Computer, '.'), 1, -1), '.')\n| extend Account_0_Name = Name\n| extend Account_0_NTDomain = NTDomain\n| extend Host_0_HostName = HostName\n| extend Host_0_DnsDomain = DnsDomain \n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "42Crunch API protection against suspicious login\n Topic: 42Crunch API Protection"}, {"role": "assistant", "content": "let firstRec = apifirewall_log_1_CL\n| where TimeGenerated >= ago(5m) \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g\n| where Instance_Name_s == \"Instance_6\" and URI_Path_s has \"/api/login?user=\" and Status_d in (200, 403);\nlet ipAddressCount = toscalar(firstRec | summarize by Source_IP_s | count);\nlet secondRec = firstRec | summarize arg_max(Source_IP_s, *) by Source_IP_s;\nlet recCount = iff((toscalar(secondRec | count) > 3), ipAddressCount, 0);\nsecondRec | take recCount\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies a match in OfficeActivity table from any Email IOC from TI\n Topic: Threat Intelligence"}, {"role": "assistant", "content": "let dt_lookBack = 1h;\nlet ioc_lookBack = 14d;\nlet emailregex = @'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$';\nlet OfficeEvents = materialize(\n  OfficeActivity\n  | where isnotempty(UserId)\n  | where TimeGenerated >= ago(dt_lookBack)\n  | where UserId matches regex emailregex\n  | project-rename  OfficeActivity_TimeGenerated = TimeGenerated);\nlet OfficeActivityUPNs = OfficeEvents | distinct UserId = tolower(UserId) | summarize make_list(UserId);\nThreatIntelligenceIndicator\n| where isnotempty(EmailSenderAddress)\n| where TimeGenerated >= ago(ioc_lookBack)\n| where tolower(EmailSenderAddress) in (OfficeActivityUPNs)\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| where Active == true and ExpirationDateTime > now()\n| where Description !contains_cs \"State: inactive;\" and Description !contains_cs \"State: falsepos;\"\n// using innerunique to keep perf fast and result set low, we only need one match to indicate potential malicious activity that needs to be investigated\n| join kind=innerunique (OfficeEvents) on $left.EmailSenderAddress == $right.UserId\n| where OfficeActivity_TimeGenerated < ExpirationDateTime\n| summarize OfficeActivity_TimeGenerated = arg_max(OfficeActivity_TimeGenerated, *) by IndicatorId, UserId\n| project OfficeActivity_TimeGenerated, Description, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore, EmailSenderName, EmailRecipient, EmailSourceDomain, EmailSourceIpAddress, EmailSubject, FileHashValue, FileHashType, UserId, ClientIP, Operation, UserType, RecordType, OfficeWorkload, Parameters\n| extend Name = tostring(split(UserId, '@', 0)[0]), UPNSuffix = tostring(split(UserId, '@', 1)[0])\n| extend timestamp = OfficeActivity_TimeGenerated\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Indicates that an admin has set disabled keyguard features on a Knox device. Topic: Samsung Knox Asset Intelligence"}, {"role": "assistant", "content": "Samsung_Knox_Audit_CL \n| where Name == \"TAG_KEYGUARD_DISABLED_FEATURES_SET\" \nand MitreTtp has \"T1461\"\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "The Custom Script Extension in Azure executes scripts on VMs, useful for post-deployment tasks. Scripts can be from various sources and could be used maliciously. The query identifies rare custom script extensions executed in your environment.\n Topic: Azure Activity"}, {"role": "assistant", "content": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet Lookback = starttime - 14d;\nlet CustomScriptExecution = AzureActivity\n| where TimeGenerated >= Lookback\n| where OperationName =~ \"Create or Update Virtual Machine Extension\"\n| extend parsed_properties = parse_json(Properties)\n| extend Settings = tostring((parse_json(tostring(parsed_properties.responseBody)).properties).settings)\n| parse Settings with * 'fileUris\":[' FileURI \"]\" *\n| parse Settings with * 'commandToExecute\":' commandToExecute '}' *\n| extend message_ = tostring((parse_json(tostring(parsed_properties.statusMessage)).error).message);\nlet LookbackCustomScriptExecution = CustomScriptExecution\n| where TimeGenerated >= Lookback and TimeGenerated < starttime\n| where isnotempty(FileURI) and isnotempty(commandToExecute)\n| summarize max(TimeGenerated), OperationCount = count() by Caller, Resource, CallerIpAddress, FileURI, commandToExecute;\nlet CurrentCustomScriptExecution = CustomScriptExecution\n| where TimeGenerated between (starttime..endtime)\n| where isnotempty(FileURI) and isnotempty(commandToExecute)\n| project TimeGenerated, ActivityStatus, OperationId, CorrelationId, ResourceId, CallerIpAddress, Caller, OperationName, Resource, ResourceGroup, FileURI, commandToExecute, FailureMessage = message_, HTTPRequest, Settings;\nlet RareCustomScriptExecution =  CurrentCustomScriptExecution\n| join kind= leftanti (LookbackCustomScriptExecution) on Caller, CallerIpAddress, FileURI, commandToExecute;\nlet IPCheck = RareCustomScriptExecution\n| summarize arg_max(TimeGenerated, OperationName), OperationIds = make_set(OperationId,100), CallerIpAddresses = make_set(CallerIpAddress,100) by ActivityStatus, CorrelationId, ResourceId, Caller, Resource, ResourceGroup, FileURI, commandToExecute, FailureMessage\n| extend IPArray = array_length(CallerIpAddresses);\n//Get IPs for later summarization so all associated CorrelationIds and Caller actions have an IP.  Success and Fails do not always have IP\nlet multiIP = IPCheck | where IPArray > 1\n| mv-expand CallerIpAddresses | extend CallerIpAddress = tostring(CallerIpAddresses)\n| where isnotempty(CallerIpAddresses);\nlet singleIP = IPCheck | where IPArray <= 1\n| mv-expand CallerIpAddresses | extend CallerIpAddress = tostring(CallerIpAddresses);\nlet FullDetails = singleIP | union multiIP;\n//Get IP address associated with successes and fails with no IP listed\nlet IPList = FullDetails | where isnotempty(CallerIpAddress) | summarize by CorrelationId, Caller, CallerIpAddress;\nlet EmptyIP = FullDetails | where isempty(CallerIpAddress) | project-away CallerIpAddress;\nlet IpJoin = EmptyIP | join kind= leftouter (IPList) on CorrelationId, Caller | project-away CorrelationId1, Caller1;\nlet nonEmptyIP = FullDetails | where isnotempty(CallerIpAddress);\nnonEmptyIP | union IpJoin\n// summarize all activities with a given CorrelationId and Caller together so we can provide a singular result\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), ActivityStatusSet = make_set(ActivityStatus,100), OperationIds = make_set(OperationIds,100), FailureMessages = make_set(FailureMessage,100) by CorrelationId, ResourceId, CallerIpAddress, Caller, Resource, ResourceGroup, FileURI, commandToExecute\n| extend Name = tostring(split(Caller,'@',0)[0]), UPNSuffix = tostring(split(Caller,'@',1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = CallerIpAddress\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "The query detects authentication attempts from a decoy user account. \nA decoy user account is explicitly created and monitored to alert the SOC, indicating a malicious activity when the account is in use.\n Topic: Windows Security Events"}, {"role": "assistant", "content": "// Enter a reference list of decoy users (usernames) \"Case Sensitive\"\n   let DecoyUserNameList = dynamic ([\"DecoyUser1\",\"DecoyUser2\"]);\nSecurityEvent\n | where TargetUserName in (DecoyUserNameList)\n | where EventID in (4624,4625)\n | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by EventID, Computer, TargetUserName, LogonTypeName, IpAddress\n | extend Account_0_Name = TargetUserName\n | extend Host_0_HostName = Computer\n | extend IP_0_Address = IpAddress  \n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects a user being added to a new privileged role. Monitor these additions to ensure the users are made eligible for these roles are intended to have these levels of access.\n  Ref: https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-privileged-accounts#changes-to-privileged-accounts\n Topic: Business Email Compromise - Financial Fraud"}, {"role": "assistant", "content": "AuditLogs\n  | where OperationName in (\"Add eligible member (permanent)\", \"Add eligible member (eligible)\", \"Add member to role\")\n  | mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"User\"\n      | extend Target = tostring(TargetResource.userPrincipalName),\n               props = TargetResource.modifiedProperties\n  )\n  | mv-apply Property = props on \n  (\n      where Property.displayName =~ \"Role.DisplayName\"\n      | extend RoleName = trim('\"',tostring(Property.newValue))\n  )\n  | where RoleName contains \"admin\"\n  | extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n  | extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n  | extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n  | extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n  | extend InitiatingIPAddress = tostring(InitiatedBy.user.ipAddress)\n  | extend InitiatedBy = iif(isnotempty(InitiatingAppName), InitiatingAppName, InitiatingUserPrincipalName)\n  | extend TargetUserPrincipalName = iff(OperationName==\"Add member to role\",tostring(TargetResources[0].userPrincipalName),tostring(TargetResources[2].userPrincipalName))\n  | extend TargetAadUserId = iff(OperationName==\"Add member to role\", tostring(TargetResources[0].id), tostring(TargetResources[2].id))\n  | extend AddedUser = TargetUserPrincipalName\n  | extend TargetAccountName = tostring(split(TargetUserPrincipalName, \"@\")[0]), TargetAccountUPNSuffix = tostring(split(TargetUserPrincipalName, \"@\")[1])\n  | extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1])\n  | project-reorder TimeGenerated, AddedUser, RoleName, InitiatedBy\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This alert leverages Defender for IoT to detect unauthorized changes to PLC ladder logic code indicating new functionality in the PLC, improper configuration of an application, or malicious activity on the network.\n Topic: IoTOTThreatMonitoringwithDefenderforIoT"}, {"role": "assistant", "content": "let alertList = dynamic([\"Unpermitted Usage of Internal Indication (IIN)\", \"Modbus Address Range Violation\", \"Function Code Raised Unauthorized Exception\", \"Unauthorized Access to Siemens S7 Data Block\", \"Unauthorized Access to Wonderware Tag\", \"Unauthorized MMS Program Access\", \"GOOSE Message Type Settings\", \"Sampled Values Message Type Settings\", \"Foxboro I/A Unauthorized Operation\", \"New Activity Detected - CIP Class\", \"New Activity Detected - CIP Class Service\", \"New Activity Detected - CIP PCCC Command\", \"New Activity Detected - CIP Symbol\", \"New Activity Detected - EtherNet/IP I/O Connection\", \"New Activity Detected - EtherNet/IP Protocol Command\", \"New Activity Detected - GSM Message Code\", \"New Activity Detected - LonTalk Command Codes\", \"New Activity Detected - LonTalk Network Variable\", \"New Activity Detected - Ovation Data Request\", \"New Activity Detected - Read/Write Command (AMS Index Group)\", \"New Activity Detected - Read/Write Command (AMS Index Offset)\", \"New Activity Detected - Unauthorized DeltaV Message Type\", \"New Activity Detected - Unauthorized DeltaV ROC Operation\", \"New Activity Detected - Using AMS Protocol Command\", \"New Activity Detected - Using Siemens SICAM Command\", \"New Activity Detected - Using Suitelink Protocol command\", \"New Activity Detected - Using Suitelink Protocol sessions\", \"New Activity Detected - Using Yokogawa VNetIP Command\", \"Omron FINS Unauthorized Command\", \"Toshiba Computer Link Unauthorized Command\", \"Unauthorized ABB Totalflow File Operation\", \"Unauthorized ABB Totalflow Register Operation\", \"Unauthorized Access to Siemens S7 Plus Object\", \"Unauthorized BACNet Object Access\", \"Unauthorized BACNet Route\", \"Unauthorized Emerson ROC Operation\", \"Unauthorized GE SRTP File Access\", \"Unauthorized GE SRTP Protocol Command\", \"Unauthorized GE SRTP System Memory Operation\", \"Unauthorized Mitsubishi MELSEC Command\", \"Unauthorized MMS Service\", \"Unauthorized OPC UA Activity\", \"Unauthorized OPC UA Request/Response\", \"Unauthorized Profinet Frame Type\", \"Unauthorized SAIA S-Bus Command\", \"Unauthorized Siemens S7 Execution of Control Function\", \"Unauthorized Siemens S7 Execution of User Defined Function\", \"Unauthorized Siemens S7 Plus Block Access\", \"Unauthorized Siemens S7 Plus Operation\", \"Unauthorized SNMP Operation\", \"Unpermitted Modbus Schneider Electric Extension\", \"Unpermitted Usage of ASDU Types\", \"Unpermitted Usage of DNP3 Function Code\", \"Unpermitted Usage of Modbus Function Code\", \"Unauthorized Operation was detected by a User Defined Rule\", \"Unauthorized PLC Configuration Read\", \"Unauthorized PLC Programming\", \"Unauthorized PLC Configuration Write\", \"Unauthorized PLC Program Upload\"]);\nSecurityAlert\n| where ProviderName == \"IoTSecurity\"\n| where AlertName has_any (alertList) \n  or ExtendedProperties has_any (\"Illegal Beckhoff AMS Command\", \"Beckhoff AMS Command Failure\")\n| extend ExtendedProperties = parse_json(ExtendedProperties)\n| where tostring(ExtendedProperties.isNew) == \"True\"\n| extend DeviceId = tostring(ExtendedProperties.DeviceId), \n         SourceDeviceAddress = tostring(ExtendedProperties.SourceDeviceAddress), \n         DestDeviceAddress = tostring(ExtendedProperties.DestinationDeviceAddress), \n         RemediationSteps = tostring(parse_json(RemediationSteps)[0]), \n         Protocol = tostring(ExtendedProperties.Protocol), \n         AlertManagementUri = tostring(ExtendedProperties.AlertManagementUri)\n| project\n  TimeGenerated,\n  DeviceId,\n  ProductName,\n  ProductComponentName,\n  AlertSeverity,\n  AlertName,\n  Description,\n  Protocol,\n  SourceDeviceAddress,\n  DestDeviceAddress,\n  RemediationSteps,\n  Tactics,\n  Entities,\n  VendorOriginalId,\n  AlertLink,\n  AlertManagementUri,\n  Techniques\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This will alert when the \"Consent to application\" operation occurs by a user that has not done this operation before or rarely does this.\nThis could indicate that permissions to access the listed Azure App were provided to a malicious actor.\nConsent to application, Add service principal and Add OAuth2PermissionGrant should typically be rare events.\nThis may help detect the Oauth2 attack that can be initiated by this publicly available tool - https://github.com/fireeye/PwnAuth\nFor further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.\n Topic: Microsoft Entra ID"}, {"role": "assistant", "content": "let current = 1d;\nlet auditLookback = 7d;\n// Setting threshold to 3 as a default, change as needed.\n// Any operation that has been initiated by a user or app more than 3 times in the past 7 days will be excluded\nlet threshold = 3;\n// Gather initial data from lookback period, excluding current, adjust current to more than a single day if no results\nlet AuditTrail = AuditLogs | where TimeGenerated >= ago(auditLookback) and TimeGenerated < ago(current)\n// 2 other operations that can be part of malicious activity in this situation are\n// \"Add OAuth2PermissionGrant\" and \"Add service principal\", extend the filter below to capture these too\n| where OperationName has \"Consent to application\"\n| extend InitiatedBy = iff(isnotempty(tostring(InitiatedBy.user.userPrincipalName)),\n          tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"ServicePrincipal\"\n      | extend TargetResourceName = tolower(tostring(TargetResource.displayName))\n  )\n| summarize max(TimeGenerated), OperationCount = count() by OperationName, InitiatedBy, TargetResourceName\n// only including operations initiated by a user or app that is above the threshold so we produce only rare and has not occurred in last 7 days\n| where OperationCount > threshold;\n// Gather current period of audit data\nlet RecentConsent = AuditLogs | where TimeGenerated >= ago(current)\n| where OperationName has \"Consent to application\"\n| extend IpAddress = case(\n              isnotempty(tostring(InitiatedBy.user.ipAddress)) and tostring(InitiatedBy.user.ipAddress) != 'null', tostring(InitiatedBy.user.ipAddress),\n              isnotempty(tostring(InitiatedBy.app.ipAddress)) and tostring(InitiatedBy.app.ipAddress) != 'null', tostring(InitiatedBy.app.ipAddress),\n              'Not Available')\n| extend InitiatedBy = iff(isnotempty(tostring(InitiatedBy.user.userPrincipalName)),\n                          tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"ServicePrincipal\"\n      | extend TargetResourceName = tolower(tostring(TargetResource.displayName)),\n               props = TargetResource.modifiedProperties\n  )\n| parse props with * \"ConsentType: \" ConsentType \"]\" *\n| mv-apply AdditionalDetail = AdditionalDetails on \n  (\n      where AdditionalDetail.key =~ \"User-Agent\"\n      | extend UserAgent = tostring(AdditionalDetail.value)\n  )\n| project TimeGenerated, InitiatedBy, IpAddress, TargetResourceName, Category, OperationName, ConsentType, UserAgent, CorrelationId, Type;\n// Exclude previously seen audit activity for \"Consent to application\" that was seen in the lookback period\n// First for rare InitiatedBy\nlet RareConsentBy = RecentConsent | join kind= leftanti AuditTrail on OperationName, InitiatedBy\n| extend Reason = \"Previously unseen user consenting\";\n// Second for rare TargetResourceName\nlet RareConsentApp = RecentConsent | join kind= leftanti AuditTrail on OperationName, TargetResourceName\n| extend Reason = \"Previously unseen app granted consent\";\nRareConsentBy | union RareConsentApp\n| summarize Reason = make_set(Reason,100) by TimeGenerated, InitiatedBy, IpAddress, TargetResourceName, Category, OperationName, ConsentType, UserAgent, CorrelationId, Type\n| extend timestamp = TimeGenerated, Name = tolower(tostring(split(InitiatedBy,'@',0)[0])), UPNSuffix = tolower(tostring(split(InitiatedBy,'@',1)[0]))\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query detects domain user accounts creation (event ID 4720) where the username ends with $. \nAccounts that end with $ are normally domain computer accounts and when they are created the event ID 4741 is generated instead.\nRef: https://blog.menasec.net/2019/02/threat-hunting-6-hiding-in-plain-sights.html\n Topic: Detections"}, {"role": "assistant", "content": "SecurityEvent\n| where EventID == 4720 and TargetUserName endswith \"$\"\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by Computer, SubjectUserName, SubjectDomainName, SubjectAccount, SubjectUserSid, SubjectLogonId, \nTargetUserName, TargetDomainName, TargetAccount, TargetSid, UserPrincipalName\n| extend HostName = tostring(split(Computer, \".\")[0]), DomainIndex = toint(indexof(Computer, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(Computer, DomainIndex + 1), Computer)\n| project-away DomainIndex\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query generates the baseline pattern of cloud resource deletions by an individual and generates an anomaly when any unusual spike is detected. These anomalies from unusual or privileged users could be an indication of a cloud infrastructure takedown by an adversary.\n Topic: Azure Activity"}, {"role": "assistant", "content": "let starttime = 14d;\nlet endtime = 1d;\nlet timeframe = 1d;\nlet TotalEventsThreshold = 25;\nlet TimeSeriesData = AzureActivity \n| where TimeGenerated between (startofday(ago(starttime))..startofday(now())) \n| where OperationNameValue endswith \"delete\" \n| project TimeGenerated, Caller \n| make-series Total = count() on TimeGenerated from startofday(ago(starttime)) to startofday(now()) step timeframe by Caller;\nTimeSeriesData \n| extend (anomalies, score, baseline) = series_decompose_anomalies(Total, 3, -1, 'linefit') \n| mv-expand Total to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double), score to typeof(double), baseline to typeof(long) \n| where TimeGenerated >= startofday(ago(endtime)) \n| where anomalies > 0 \n| project Caller, TimeGenerated, Total, baseline, anomalies, score \n| where Total > TotalEventsThreshold and baseline > 0 \n| join (AzureActivity \n| where TimeGenerated > startofday(ago(endtime)) \n| where OperationNameValue endswith \"delete\" \n| summarize count(), make_set(OperationNameValue,100), make_set(_ResourceId,100) by bin(TimeGenerated, timeframe), Caller ) on TimeGenerated, Caller \n| extend Name = iif(Caller has '@',tostring(split(Caller,'@',0)[0]),\"\")\n| extend UPNSuffix = iif(Caller has '@',tostring(split(Caller,'@',1)[0]),\"\")\n| extend AadUserId = iif(Caller !has '@',Caller,\"\")\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This rule will check if a sign-in failed into LastPass due to MFA.\nAn incident can indicate the potential brute forcing of a LastPass account. \nThe use of MFA is identified by combining the sign-in logs, this rule assumes LastPass is federated to Entra ID.\n Topic: LastPass"}, {"role": "assistant", "content": "LastPassNativePoller_CL\n| where Action_s == \"Log in\"\n| join (SigninLogs | where AppDisplayName == \"LastPass Enterprise\") on $left.IP_Address_s == $right.IPAddress and $left.Username_s == $right.UserPrincipalName\n| where ResultType in (50074, 50076)\n| extend AccountCustomEntity = Username_s, IPCustomEntity = IP_Address_s\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "\"Creates Microsoft Sentinel incidents for medium risk Theom alerts.\"\n Topic: Theom"}, {"role": "assistant", "content": "TheomAlerts_CL\n | where priority_s == \"P3\"\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies a match for a Code Injection based attack in the AFD WAF logs. The threshold value in the query can be changed as per your infrastructures requirements.\nReferences: https://owasp.org/www-community/attacks/Code_Injection\n Topic: Azure Web Application Firewall (WAF)"}, {"role": "assistant", "content": "let Threshold = 3;\nAzureDiagnostics\n| where Category =~ \"FrontDoorWebApplicationFirewallLog\"\n| where action_s =~ \"AnomalyScoring\"\n| where details_msg_s has \"Injection\" or details_msg_s has \"File Inclusion\"\n| parse details_data_s with MessageText \"Matched Data:\" MatchedData \"AND \" * \"table_name FROM \" TableName \" \" *\n| project trackingReference_s, host_s, requestUri_s, TimeGenerated, clientIP_s, details_matches_s, details_msg_s, details_data_s, TableName, MatchedData\n| join kind = inner(\nAzureDiagnostics\n| where Category =~ \"FrontDoorWebApplicationFirewallLog\"\n| where action_s =~ \"Block\") on trackingReference_s\n| summarize URI_s = make_set(requestUri_s,100), Table = make_set(TableName,100), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), TrackingReference = make_set(trackingReference_s,100), Matched_Data = make_set(MatchedData,100), Detail_Data = make_set(details_data_s,100), Detail_Message = make_set(details_msg_s,100), Total_TrackingReference = dcount(trackingReference_s) by clientIP_s, host_s, action_s\n| where Total_TrackingReference >= Threshold\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for top URLs.\n Topic: CiscoWSA"}, {"role": "assistant", "content": "CiscoWSAEvent\n| where TimeGenerated > ago(24h)\n| summarize count() by UrlOriginal, SrcUserName\n| extend URLCustomEntity = UrlOriginal, AccountCustomEntity = SrcUserName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for Domains with rare errors.\n Topic: GoogleCloudPlatformDNS"}, {"role": "assistant", "content": "GCPCloudDNS\n| where TimeGenerated > ago(24h)\n| where EventResultDetails != 'NOERROR'\n| summarize count() by EventResultDetails, Query\n| order by count_ asc\n| top 10 by count_\n| extend DNSCustomEntity = Query\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies the creation of large size or expensive VMs (with GPUs or with a large number of virtual CPUs) in Azure.\nAn adversary may create new or update existing virtual machines to evade defenses or use them for cryptomining purposes.\nFor Windows/Linux Vm Sizes, see https://docs.microsoft.com/azure/virtual-machines/windows/sizes \nAzure VM Naming Conventions, see https://docs.microsoft.com/azure/virtual-machines/vm-naming-conventions\n Topic: Azure Activity"}, {"role": "assistant", "content": "let tokens = dynamic([\"416\",\"208\",\"192\",\"128\",\"120\",\"96\",\"80\",\"72\",\"64\",\"48\",\"44\",\"40\",\"nc12\",\"nc24\",\"nv24\"]);\nlet operationList = dynamic([\"microsoft.compute/virtualmachines/write\", \"microsoft.resources/deployments/write\"]);\nAzureActivity\n| where OperationNameValue in~ (operationList)\n| where ActivityStatusValue startswith \"Accept\"\n| where Properties has 'vmSize'\n| extend parsed_property= parse_json(tostring((parse_json(Properties).responseBody))).properties\n| extend vmSize = tostring((parsed_property.hardwareProfile).vmSize)\n| mv-apply token=tokens to typeof(string) on (where vmSize contains token)\n| extend ComputerName = tostring((parsed_property.osProfile).computerName)\n| project TimeGenerated, OperationNameValue, ActivityStatusValue, Caller, CallerIpAddress, ComputerName, vmSize\n| extend Name = tostring(split(Caller,'@',0)[0]), UPNSuffix = tostring(split(Caller,'@',1)[0])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query shows agent which are not updated to the latest version.\n Topic: SentinelOne"}, {"role": "assistant", "content": "//Latest agent version can be checked in Management Console>Sentinels>Packages\nlet upd_ver = dynamic(['21.7.4.1043', '21.7.4.5853', '21.10.3.3', '21.12.1.5913']);\nSentinelOne\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'Agents.'\n| where AgentVersion !in (upd_ver)\n| extend HostCustomEntity = ComputerName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "New user agents associated with a client IP for SharePoint file uploads/downloads.\n Topic: Global Secure Access"}, {"role": "assistant", "content": "let starttime = todatetime('{{StartTimeISO}}');\n  let endtime = todatetime('{{EndTimeISO}}');\n  let lookback = starttime - 14d;\n  // Historical user agents in EnrichedMicrosoft365AuditLogs\n  let historicalUA_Enriched = EnrichedMicrosoft365AuditLogs\n    | where RecordType == \"SharePointFileOperation\"\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\n    | where TimeGenerated between (lookback .. starttime)\n    | extend ClientApplication = tostring(parse_json(AdditionalProperties).UserAgent)\n    | summarize by ClientIp, ClientApplication;\n  // Recent user agents in EnrichedMicrosoft365AuditLogs\n  let recentUA_Enriched = EnrichedMicrosoft365AuditLogs\n    | where RecordType == \"SharePointFileOperation\"\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\n    | where TimeGenerated between (starttime .. endtime)\n    | extend ClientApplication = tostring(parse_json(AdditionalProperties).UserAgent)\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by ClientIp, ClientApplication;\n  // Combine historical and recent user agents from EnrichedMicrosoft365AuditLogs\n  let Enriched_UA = recentUA_Enriched\n    | join kind=leftanti (historicalUA_Enriched) on ClientIp, ClientApplication\n    | where not(isempty(ClientIp))\n    | extend IP_0_Address = ClientIp;\n  // Historical user agents in OfficeActivity\n  let historicalUA_Office = OfficeActivity\n    | where RecordType == \"SharePointFileOperation\"\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\n    | where TimeGenerated between (lookback .. starttime)\n    | summarize by ClientIP, UserAgent;\n  // Recent user agents in OfficeActivity\n  let recentUA_Office = OfficeActivity\n    | where RecordType == \"SharePointFileOperation\"\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\n    | where TimeGenerated between (starttime .. endtime)\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by ClientIP, UserAgent;\n  // Combine historical and recent user agents from OfficeActivity\n  let Office_UA = recentUA_Office\n    | join kind=leftanti (historicalUA_Office) on ClientIP, UserAgent\n    | where not(isempty(ClientIP))\n    | extend IP_0_Address = ClientIP;\n  // Final combined result\n  Enriched_UA\n  | union Office_UA\n  | project StartTime, EndTime, ClientIp, ClientApplication, IP_0_Address;\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies when multiple (more than one) users mailboxes are configured to forward to the same destination. \nThis could be an attacker-controlled destination mailbox configured to collect mail from multiple compromised user accounts.\n Topic: Microsoft 365"}, {"role": "assistant", "content": "let queryfrequency = 1d;\nlet queryperiod = 7d;\nOfficeActivity\n| where TimeGenerated > ago(queryperiod)\n| where OfficeWorkload =~ \"Exchange\"\n//| where Operation in (\"Set-Mailbox\", \"New-InboxRule\", \"Set-InboxRule\")\n| where Parameters has_any (\"ForwardTo\", \"RedirectTo\", \"ForwardingSmtpAddress\")\n| mv-apply DynamicParameters = todynamic(Parameters) on (summarize ParsedParameters = make_bag(bag_pack(tostring(DynamicParameters.Name), DynamicParameters.Value)))\n| evaluate bag_unpack(ParsedParameters, columnsConflict='replace_source')\n| extend DestinationMailAddress = tolower(case(\n    isnotempty(column_ifexists(\"ForwardTo\", \"\")), column_ifexists(\"ForwardTo\", \"\"),\n    isnotempty(column_ifexists(\"RedirectTo\", \"\")), column_ifexists(\"RedirectTo\", \"\"),\n    isnotempty(column_ifexists(\"ForwardingSmtpAddress\", \"\")), trim_start(@\"smtp:\", column_ifexists(\"ForwardingSmtpAddress\", \"\")),\n    \"\"))\n| where isnotempty(DestinationMailAddress)\n| mv-expand split(DestinationMailAddress, \";\")\n| extend ClientIPValues = extract_all(@'\\[?(::ffff:)?(?P<IPAddress>(\\d+\\.\\d+\\.\\d+\\.\\d+)|[^\\]]+)\\]?([-:](?P<Port>\\d+))?', dynamic([\"IPAddress\", \"Port\"]), ClientIP)[0]\n| extend ClientIP = tostring(ClientIPValues[0]), Port = tostring(ClientIPValues[1])\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), DistinctUserCount = dcount(UserId), UserId = make_set(UserId, 250), Ports = make_set(Port, 250), EventCount = count() by tostring(DestinationMailAddress), ClientIP\n| where DistinctUserCount > 1 and EndTime > ago(queryfrequency)\n| mv-expand UserId to typeof(string)\n| extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for non HTTP/HTTPs applications.\n Topic: ImpervaCloudWAF"}, {"role": "assistant", "content": "ImpervaWAFCloud\n| where TimeGenerated > ago(24h)\n| where NetworkApplicationProtocol !in~ ('HTTP', 'HTTPs')\n| summarize count() by DstIpAddr, NetworkApplicationProtocol\n| extend IPCustomEntity = DstIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects when a user was removed from project.\n Topic: AtlassianJiraAudit"}, {"role": "assistant", "content": "JiraAudit\n| where EventMessage =~ 'User removed from project'\n| extend user = todynamic(AssociatedItems)[0]['name']\n| project EventCreationTime, ObjectItemName, user\n| extend AccountCustomEntity = user\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies an IP address that had 15 failed attempts to sign in via SSH in a 4 hour block during a 24 hour time period.\n Please note that entity mapping for arrays is not supported, so when there is a single value in an array, we will pull that value from the array as a single string to populate the entity to support entity mapping features within Sentinel. Additionally, if the array is multivalued, we will input a string to indicate this with a unique hash so that matching will not occur.\n As an example - ComputerList is an array that we check for a single value and write that into the HostName field for use in the entity mapping within Sentinel.\n Topic: Syslog"}, {"role": "assistant", "content": "let threshold = 15;\nSyslog\n| where ProcessName =~ \"sshd\"\n| where SyslogMessage contains \"Failed password for invalid user\"\n| parse kind=relaxed SyslogMessage with * \"invalid user \" user \" from \" ip \" port\" port \" ssh2\" *\n// using distinct below as it has been seen that Syslog can duplicate entries depending on implementation\n| distinct TimeGenerated, Computer, user, ip, port, SyslogMessage, _ResourceId\n| summarize EventTimes = make_list(TimeGenerated), PerHourCount = count() by bin(TimeGenerated,4h), ip, Computer, user, _ResourceId\n| where PerHourCount > threshold\n| mvexpand EventTimes\n| extend EventTimes = tostring(EventTimes)\n| summarize StartTime = min(EventTimes), EndTime = max(EventTimes), UserList = make_set(user), ComputerList = make_set(Computer), ResourceIdList = make_set(_ResourceId), sum(PerHourCount) by IPAddress = ip\n// bringing through single computer and user if array only has 1, otherwise, referencing the column and hashing the ComputerList or UserList so we don't get accidental entity matches when reviewing alerts\n| extend HostName = iff(array_length(ComputerList) == 1, tostring(ComputerList[0]), strcat(\"SeeComputerListField\",\"_\", tostring(hash(tostring(ComputerList)))))\n| extend Account = iff(array_length(ComputerList) == 1, tostring(UserList[0]), strcat(\"SeeUserListField\",\"_\", tostring(hash(tostring(UserList)))))\n| extend ResourceId = iff(array_length(ResourceIdList) == 1, tostring(ResourceIdList[0]), strcat(\"SeeResourceIdListField\",\"_\", tostring(hash(tostring(ResourceIdList)))))\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies a match in OfficeActivity table from any Email IOC from ThreatConnect TI\n Topic: ThreatConnect"}, {"role": "assistant", "content": "let dt_lookBack = 1h;\nlet ioc_lookBack = 14d;\nlet emailregex = @'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$';\nThreatIntelligenceIndicator\n  | where TimeGenerated >= ago(ioc_lookBack)\n  | summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n  | where ExpirationDateTime > now() and Active == true\n// Filter out non ThreatConnect TI Sources\n| where SourceSystem startswith \"ThreatConnect-\"\n//Filtering the table for Email related IOCs\n| where isnotempty(EmailSenderAddress)\n// using innerunique to keep perf fast and result set low, we only need one match to indicate potential malicious activity that needs to be investigated\n| join kind=innerunique (\n    OfficeActivity | where TimeGenerated >= ago(dt_lookBack) and isnotempty(UserId)\n    | where UserId matches regex emailregex\n    | extend OfficeActivity_TimeGenerated = TimeGenerated\n)\non $left.EmailSenderAddress == $right.UserId\n| where OfficeActivity_TimeGenerated < ExpirationDateTime\n| summarize OfficeActivity_TimeGenerated = arg_max(OfficeActivity_TimeGenerated, *) by IndicatorId, UserId\n| project OfficeActivity_TimeGenerated, Description, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore,\nEmailSenderName, EmailRecipient, EmailSourceDomain, EmailSourceIpAddress, EmailSubject, FileHashValue, FileHashType, UserId, ClientIP, Operation, UserType, RecordType, OfficeWorkload, Parameters\n| extend Name = tostring(split(UserId, '@', 0)[0]), UPNSuffix = tostring(split(UserId, '@', 1)[0])\n| extend timestamp = OfficeActivity_TimeGenerated\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies a list of IP addresses with a minimum number(default of 5) of failed logon attempts to remote hosts.\nUses that list to identify any successful logons to Microsoft Entra ID from these IPs within the same timeframe.\n Topic: Detections"}, {"role": "assistant", "content": "//Adjust this threshold to fit environment\nlet signin_threshold = 5; \n//Make a list of IPs with failed Windows host logins above threshold\nlet win_fails = \nSecurityEvent\n| where EventID == 4625\n| where LogonType in (10, 7, 3)\n| where IpAddress != \"-\"\n| summarize count() by IpAddress\n| where count_ > signin_threshold\n| summarize make_list(IpAddress);\nlet wef_fails =\nWindowsEvent\n| where EventID == 4625\n| extend LogonType = tostring(EventData.LogonType)\n| where LogonType in (10, 7, 3)\n| extend IpAddress = tostring(EventData.IpAddress)\n| where IpAddress != \"-\"\n| summarize count() by IpAddress\n| where count_ > signin_threshold\n| summarize make_list(IpAddress);\n//Make a list of IPs with failed *nix host logins above threshold\nlet nix_fails = \nSyslog\n| where Facility contains 'auth' and ProcessName != 'sudo' and SyslogMessage has 'from' and not(SyslogMessage has_any ('Disconnecting', 'Disconnected', 'Accepted', 'disconnect', @'[preauth]'))\n| extend SourceIP = extract(\"(([0-9]{1,3})\\\\.([0-9]{1,3})\\\\.([0-9]{1,3})\\\\.(([0-9]{1,3})))\",1,SyslogMessage)\n| where SourceIP != \"\" and SourceIP != \"127.0.0.1\"\n| summarize count() by SourceIP\n| where count_ > signin_threshold\n| summarize make_list(SourceIP);\n//See if any of the IPs with failed host logins hve had a sucessful Azure AD login\nlet aadFunc = (tableName:string){\ntable(tableName)\n| where ResultType in (\"0\", \"50125\", \"50140\")\n| where IPAddress in (win_fails) or IPAddress in (nix_fails) or IPAddress in (wef_fails)\n| extend Reason=  \"Multiple failed host logins from IP address with successful Azure AD login\"\n| extend timestamp = TimeGenerated, Type = Type\n| extend AccountName = tostring(split(UserPrincipalName, \"@\")[0]), AccountUPNSuffix = tostring(split(UserPrincipalName, \"@\")[1])\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects possible sql injection patterns\n Topic: Tomcat"}, {"role": "assistant", "content": "let commands = dynamic([\"1/*'*/\", \"1'||'asd'||'\", \"'1'='1\", \"1' or '1'='1\", \"1 or 1=1\", \"1=1\", \"1/*!1111'*/\", \"'or''='\"]);\nTomcatEvent\n| where UrlOriginal has_any (commands)\n| extend UrlCustomEntity = UrlOriginal\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies when the Cisco ASA Threat Detection engine fired an alert based on malicious activity occurring on the network inicated by DeviceEventClassID 733101-733105\nResources: https://www.cisco.com/c/en/us/td/docs/security/asa/syslog/b_syslog/syslogs9.html\nDetails on how to further troubleshoot/investigate: https://www.cisco.com/c/en/us/support/docs/security/asa-5500-x-series-next-generation-firewalls/113685-asa-threat-detection.html\n Topic: CiscoASA"}, {"role": "assistant", "content": "CommonSecurityLog\n| where isempty(CommunicationDirection)\n| where DeviceEventClassID in (\"733101\",\"733102\",\"733103\",\"733104\",\"733105\")\n| extend HostName = tostring(split(DeviceName, \".\")[0]), DomainIndex = toint(indexof(DeviceName, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(DeviceName, DomainIndex + 1), DeviceName)\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects certificate expiration.\n Topic: Cisco ISE"}, {"role": "assistant", "content": "let lbtime = 1h;\nCiscoISEEvent\n| where TimeGenerated > ago(lbtime)\n| where EventId == '60167'\n| project SrcIpAddr, DvcIpAddr, DvcHostname, DstUserName\n| extend HostCustomEntity = DvcHostname\n| extend IPCustomEntity = SrcIpAddr\n| extend AccountCustomEntity = DstUserName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies executable files and scripts uploaded to SharePoint sites used for Dynamics document management, circumventing native file extension restrictions in Dataverse. Topic: Microsoft Business Applications"}, {"role": "assistant", "content": "let file_extensions = dynamic(['com', 'exe', 'bat', 'cmd', 'vbs', 'vbe', 'js', 'jse', 'wsf', 'wsh', 'msc', 'cpl', 'ps1', 'scr']);\nlet query_frequency = 1h;\nDataverseSharePointSites\n| join kind=inner (\n    OfficeActivity\n    | where TimeGenerated >= ago(query_frequency)\n    | where OfficeWorkload == \"SharePoint\" and Operation == \"FileUploaded\")\n    on $left.SharePointUrl == $right.Site_Url\n| where SourceFileExtension in (file_extensions)\n| extend\n    CloudAppId = int(32780),\n    SharePointId = int(20892),\n    AccountName = tostring(split(UserId, '@')[0]),\n    UPNSuffix = tostring(split(UserId, '@')[1])\n| project\n    TimeGenerated,\n    UserId,\n    ClientIP,\n    InstanceUrl,\n    SourceFileName,\n    SharePointUrl,\n    CloudAppId,\n    SharePointId,\n    AccountName,\n    UPNSuffix\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "When maximum password attempts have reached and the Knox device is locked out. This is based on the threshold set by the MDM policy.\n Topic: Samsung Knox Asset Intelligence"}, {"role": "assistant", "content": "Samsung_Knox_User_CL \n| where Name == \"PASSWORD_LOCKOUT\"\nand MitreTtp has \"T1110\"\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query identifies users seen login from new geo location/country as well as a new device and performing critical operations.\n Topic: Okta Single Sign-On"}, {"role": "assistant", "content": "let timeframe = 1h;\nlet RiskyOperations = dynamic([\"policy.rule.update\",\"policy.rule.create\",\"policy.rule.delete\", \"policy.rule.deactivate\", \"policy.lifecycle.update\", \"policy.rule.modify\", \"policy.lifecycle.create\", \"policy.lifecycle.delete\", \"policy.lifecycle.deactivate\", \"policy.lifecycle.modify\", \"network_zone.rule.disabled\", \"system.api_token.create\", \"system.api_token.revoke\", \"application.policy.sign_on.update\", \"application.policy.sign_on.rule.delete\",\"user.mfa.factor.deactivate\", \"user.mfa.factor.reset_all\", \"system.mfa.factor.deactivate\", \"user.mfa.attempt_bypass\"]);\nlet UserLoginNewCountryDevice = OktaSSO\n| where eventType_s == \"user.session.start\"\n| where outcome_result_s == \"SUCCESS\"\n| extend debugContext_debugData_logOnlySecurityData_s = column_ifexists('debugContext_debugData_logOnlySecurityData_s', '{}')\n| where parse_json(tostring(parse_json(debugContext_debugData_logOnlySecurityData_s).behaviors)).[\"New Country\"] == \"POSITIVE\"\n| where parse_json(tostring(parse_json(debugContext_debugData_logOnlySecurityData_s).behaviors)).[\"New Geo-Location\"] == \"POSITIVE\"\n| where parse_json(tostring(parse_json(debugContext_debugData_logOnlySecurityData_s).behaviors)).[\"New Device\"] == \"POSITIVE\"\n| summarize by timekey = bin(TimeGenerated, timeframe), actor_alternateId_s, actor_displayName_s, client_userAgent_os_s, client_userAgent_browser_s, client_device_s, client_userAgent_rawUserAgent_s, client_ipAddress_s, authenticationContext_externalSessionId_s, client_geographicalContext_country_s, client_geographicalContext_city_s, displayMessage_s, outcome_result_s, outcome_reason_s, column_ifexists('debugContext_debugData_logOnlySecurityData_s', \"\"), debugContext_debugData_threatSuspected_s, client_geographicalContext_geolocation_lat_d, client_geographicalContext_geolocation_lon_d\n| extend Location = strcat(client_geographicalContext_city_s, \"-\", client_geographicalContext_country_s);\nlet RiskyOperationsObserved = OktaSSO\n| where eventType_s in (RiskyOperations)\n| where outcome_result_s == \"SUCCESS\"\n| summarize by timekey = bin(TimeGenerated, timeframe), actor_alternateId_s, actor_displayName_s, client_userAgent_os_s, client_userAgent_browser_s, client_device_s, client_userAgent_rawUserAgent_s, client_ipAddress_s, authenticationContext_externalSessionId_s, client_geographicalContext_country_s, client_geographicalContext_city_s, displayMessage_s, outcome_result_s, outcome_reason_s, column_ifexists('debugContext_debugData_logOnlySecurityData_s', \"\"), debugContext_debugData_threatSuspected_s, client_geographicalContext_geolocation_lat_d, client_geographicalContext_geolocation_lon_d;\nUserLoginNewCountryDevice\n| join kind=inner (RiskyOperationsObserved) on timekey, actor_displayName_s, client_ipAddress_s\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "The policy detects users that were assigned to one of the systems default admin roles. Topic: Authomize"}, {"role": "assistant", "content": "Authomize_v2_CL\n| where ingestion_time() >= ago(30m)\n| extend EventID = id_s, Policy = policy_name_s, Severity = severity_s,Description = description_s,Recommendation = recommendation_s,URL = url_s,Tactics = tactics_s\n| where Policy has \"User assigned to a default admin role\"\n| project  EventID, Policy, Severity, Description, Recommendation, URL, Category, Tactics"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "42Crunch API protection against API scraping\n Topic: 42Crunch API Protection"}, {"role": "assistant", "content": "let firstRec = apifirewall_log_1_CL\n| where TimeGenerated >= ago(5m) \n| project-away Non_blocking_mode_b, Source_Port_d, Destination_Port_d, Query_s, API_ID_g, Request_Header_s, Response_Header_s, Errors_s, Type, UUID_g\n| where Instance_Name_s == \"Instance_7\" and URI_Path_s has \"/api/properties?page=\" and Status_d == 200;\nlet rateLimitCount = (toscalar(firstRec | count));\nlet recCount = iff((rateLimitCount > 100), 1, 0);\nfirstRec | top recCount by Timestamp_t desc;\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies instances where an employee who has been notified or is already terminated, on the TerminatedEmployees watchlist, creates or modifies a Power Automate flow. Topic: Microsoft Business Applications"}, {"role": "assistant", "content": "let query_frequency = 1h;\nPowerAutomateActivity\n| where TimeGenerated >= ago(query_frequency)\n| where EventOriginalType in (\"CreateFlow\", \"EditFlow\")\n| join kind=inner (MSBizAppsTerminatedEmployees()) on $left.ActorName == $right.UserPrincipalName\n| extend path = parse_url(FlowDetailsUrl).Path\n| extend EnvironmentId = tostring(split(path, \"/\")[2])\n| extend FlowId = tostring(split(path, \"/\")[-2])\n| extend\n    AccountName = tostring(split(ActorName, \"@\")[0]),\n    UPNSuffix = tostring(split(ActorName, \"@\")[1]),\n    PowerAutomateAppId = 27592,\n    CloudAppId = 32780\n| project\n    TimeGenerated,\n    EventOriginalType,\n    ActorName,\n    EnvironmentId,\n    AccountName,\n    UPNSuffix,\n    PowerAutomateAppId,\n    CloudAppId,\n    FlowId\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for sources of spam mails.\n Topic: CiscoSEG"}, {"role": "assistant", "content": "CiscoSEGEvent\n| where TimeGenerated > ago(24h)\n| where NetworkDirection =~ 'Incoming'\n| where SimplifiedDeviceAction =~ 'QUARANTINED'\n| extend act_det = extract(@'ESAFinalActionDetails\":\"(.*?)\"', 1, tostring(AdditionalFields))\n| where act_det has 'To SPAM'\n| summarize count() by SourceIP\n| extend IPCustomEntity = SourceIP\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detect Third-Party runtime vulnerabilities in your environment insights by snyk\n Topic: Dynatrace"}, {"role": "assistant", "content": "DynatraceSecurityProblems\n| where VulnerabilityType != \"CODE_LEVEL\" and DAVISRiskLevel == \"CRITICAL\"  and Muted == false\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies when the system time was changed on a Windows host which can indicate potential timestomping activities.\n Topic: Windows Security Events"}, {"role": "assistant", "content": "SecurityEvent\n| where EventID == 4616\n| where not(ProcessName has_any (\":\\\\Windows\\\\System32\\\\svchost.exe\", \":\\\\Program Files\\\\VMware\\\\VMware Tools\\\\vmtoolsd.exe\"))\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), count() by Computer, EventID, Activity, Account, AccountType, NewTime, PreviousTime, ProcessName, ProcessId, SubjectAccount, SubjectUserSid, SourceComputerId, _ResourceId\n| extend timestamp = StartTime, NTDomain = tostring(split(SubjectAccount, '\\\\', 0)[0]), Name = tostring(split(SubjectAccount, '\\\\', 1)[0]), HostName = tostring(split(Computer, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(Computer, '.'), 1, -1), '.'))\n| extend Account_0_Name = Name\n| extend Account_0_NTDomain = NTDomain\n| extend Host_0_HostName = HostName\n| extend Host_0_DnsDomain = DnsDomain\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for files uploaded over period of time by each source.\n Topic: Corelight"}, {"role": "assistant", "content": "corelight_http\n| where TimeGenerated > ago(24h)\n| where method in~ ('POST', 'PUT')\n| where orig_filenames != '[\"\"]'\n| mv-expand(todynamic(orig_filenames))\n| summarize f_list = makeset(tostring(orig_filenames)) by id_orig_h\n| extend f_cnt = array_length(f_list)\n| order by f_cnt\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identify potential new registry key name that is a non-autorun and non-run key in the HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\ registry key containing VBScript in the key value value.\n Topic: Cyborg Security HUNTER"}, {"role": "assistant", "content": "SecurityEvent\n| where ObjectName has \"\\\\CurrentVersion\"\n| where ObjectName !has \"\\\\Run\"\n| where NewValue contains \"RunHTMLApplication\" or \n  NewValue contains \"vbscript\" or \n  NewValue contains \"jscript\" or \n  NewValue contains \"mshtml\" or \n  NewValue contains \"mshtml,\" or \n  NewValue contains \"mshtml \" or \n  NewValue contains \"Execute(\" or \n  NewValue contains \"CreateObject\" or \n  NewValue contains \"RegRead\" or \n  NewValue contains \"window.close\"\n| project TimeGenerated, Computer, Process, ObjectName, ObjectValueName, NewValue, OldValue, SubjectUserName, NewProcessId, SourceComputerId\n| order by TimeGenerated\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query identifies any URL indicators of compromise (IOCs) from threat intelligence (TI) by searching for matches in DeviceNetworkEvents.\n Topic: Threat Intelligence"}, {"role": "assistant", "content": "let dt_lookBack = 1h;\nlet ioc_lookBack = 14d;\nlet DeviceNetworkEvents_ = DeviceNetworkEvents\n  | where isnotempty(RemoteUrl)\n  | where TimeGenerated >= ago(dt_lookBack)\n  | where ActionType !has \"ConnectionFailed\"\n  | extend RemoteUrl = tolower(RemoteUrl)\n  | project-rename DeviceNetworkEvents_TimeGenerated = TimeGenerated;\nlet DeviceNetworkEventUrls = DeviceNetworkEvents_\n  | distinct Url = RemoteUrl\n  | summarize make_list(Url);\nThreatIntelligenceIndicator\n| where isnotempty(Url)\n| where TimeGenerated >= ago(ioc_lookBack)\n| extend Url = tolower(Url)\n| where Url in (DeviceNetworkEventUrls)\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| where Active == true and ExpirationDateTime > now()\n| where Description !contains_cs \"State: inactive;\" and Description !contains_cs \"State: falsepos;\"\n| join kind=innerunique (DeviceNetworkEvents_) on $left.Url == $right.RemoteUrl\n| where DeviceNetworkEvents_TimeGenerated < ExpirationDateTime\n| summarize DeviceNetworkEvents_TimeGenerated = arg_max(DeviceNetworkEvents_TimeGenerated, *) by IndicatorId, Url\n| project DeviceNetworkEvents_TimeGenerated, IndicatorId, Url, ConfidenceScore, Description, ThreatType, Tags, TrafficLightProtocolLevel, ActionType, DeviceId, DeviceName, InitiatingProcessAccountUpn, InitiatingProcessCommandLine, RemoteIP, RemotePort\n| extend Name = tostring(split(InitiatingProcessAccountUpn, '@', 0)[0]), UPNSuffix = tostring(split(InitiatingProcessAccountUpn, '@', 1)[0])\n| extend timestamp = DeviceNetworkEvents_TimeGenerated, UserPrincipalName = InitiatingProcessAccountUpn\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies suspicious child processes of SolarWinds.Orion.Core.BusinessLayer.dll that may be evidence of the SUNBURST backdoor\n Topic: MicrosoftDefenderForEndpoint"}, {"role": "assistant", "content": "let excludeProcs = dynamic([@\"\\SolarWinds\\Orion\\APM\\APMServiceControl.exe\", @\"\\SolarWinds\\Orion\\ExportToPDFCmd.Exe\", @\"\\SolarWinds.Credentials\\SolarWinds.Credentials.Orion.WebApi.exe\", @\"\\SolarWinds\\Orion\\Topology\\SolarWinds.Orion.Topology.Calculator.exe\", @\"\\SolarWinds\\Orion\\Database-Maint.exe\", @\"\\SolarWinds.Orion.ApiPoller.Service\\SolarWinds.Orion.ApiPoller.Service.exe\", @\"\\Windows\\SysWOW64\\WerFault.exe\"]);\nDeviceProcessEvents\n| where InitiatingProcessFileName =~ \"solarwinds.businesslayerhost.exe\"\n| where not(FolderPath has_any (excludeProcs))\n| extend\n    timestamp = TimeGenerated,\n    AccountCustomEntity = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName),\n    HostName = tostring(split(DeviceName, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(DeviceName, '.'), 1, -1), '.')),\n    AlgorithmCustomEntity = \"MD5\",FileHashCustomEntity = MD5\n|extend Name = tostring(split(AccountCustomEntity, '@', 0)[0]), UPNSuffix = tostring(split(AccountCustomEntity, '@', 1)[0])    \n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend Host_0_HostName = HostName\n| extend Host_0_DnsDomain = DnsDomain \n| extend FileHash_0_Algorithm = AlgorithmCustomEntity\n| extend FileHash_0_Value = FileHashCustomEntity \n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query searches for all the exploited risks that RidgeBot identified\n Topic: RidgeSecurity"}, {"role": "assistant", "content": "CommonSecurityLog\n| where DeviceVendor == \"RidgeSecurity\"\n| where DeviceEventClassID == \"4001\"\n| order by TimeGenerated desc \n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This alert creates an incident when an malware record is detected in the SpyCloud watchlist data\n Topic: SpyCloud Enterprise Protection"}, {"role": "assistant", "content": "SpyCloudBreachDataWatchlist_CL\n| where Severity_s == '20'\n| project TimeGenerated, Document_Id_g, Source_Id_s, SpyCloud_Publish_Date_t, Email_s, Domain_s, Password_s, Password_Plaintext_s, Username_s, IP_Address_s\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for queries of type UNKNOWN.\n Topic: Snowflake"}, {"role": "assistant", "content": "Snowflake\n| where TimeGenerated > ago(24h)\n| where QUERY_TYPE_s =~ 'UNKNOWN'\n| summarize by QUERY_TEXT_s, TargetUsername\n| extend AccountCustomEntity = TargetUsername\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detected usage of AttachUserPolicy/AttachGroupPolicy/AttachRolePolicy on admin managed policy. Attackers could use these operations for privilege escalation. Verify these actions with the user.\n Topic: Amazon Web Services"}, {"role": "assistant", "content": "AWSCloudTrail\n| where  EventName in (\"AttachUserPolicy\",\"AttachRolePolicy\",\"AttachGroupPolicy\") and isempty(ErrorCode) and isempty(ErrorMessage)\n| where tostring(parse_json(RequestParameters).policyArn) contains \"Admin\" and tostring(parse_json(RequestParameters).policyArn) !contains \"FullAccess\" and tostring(parse_json(RequestParameters).policyArn) !startswith \"arn:aws:iam::aws:policy/AdministratorAccess\"\n| extend UserIdentityArn = iif(isempty(UserIdentityArn), tostring(parse_json(Resources)[0].ARN), UserIdentityArn)\n| extend UserName = tostring(split(UserIdentityArn, '/')[-1])\n| extend AccountName = case( UserIdentityPrincipalid == \"Anonymous\", \"Anonymous\", isempty(UserIdentityUserName), UserName, UserIdentityUserName)\n| extend AccountName = iif(AccountName contains \"@\", tostring(split(AccountName, '@', 0)[0]), AccountName),\n  AccountUPNSuffix = iif(AccountName contains \"@\", tostring(split(AccountName, '@', 1)[0]), \"\")\n| project TimeGenerated, EventName, EventTypeName, UserIdentityAccountId, UserIdentityPrincipalid, UserAgent, RecipientAccountId, AccountName, AccountUPNSuffix, UserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion, EventSource, AdditionalEventData, RequestParameters, ResponseElements, UserIdentityArn\n| extend timestamp = TimeGenerated\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies Office365 Sharepoint File Transfers with distinct folder count above certain threshold in a 15min time period.\n Please note that entity mapping for arrays is not supported, so when there is a single value in an array, we will pull that value from the array as a single string to populate the entity to support entity mapping features within Sentinel. Additionally, if the array is multivalued, we will input a string to indicate this with a unique hash so that matching will not occur.\n Topic: Microsoft 365"}, {"role": "assistant", "content": "let threshold = 500;\nOfficeActivity\n| where EventSource == \"SharePoint\" and OfficeWorkload has_any(\"SharePoint\", \"OneDrive\") and Operation has_any (\"FileDownloaded\", \"FileSyncDownloadedFull\", \"FileSyncUploadedFull\", \"FileUploaded\")\n| summarize count_distinct_SourceRelativeUrl=dcount(SourceRelativeUrl), dirlist=make_set(SourceRelativeUrl, 10000) by UserId,ClientIP,UserAgent,bin(TimeGenerated, 15m)\n| where count_distinct_SourceRelativeUrl >= threshold\n| extend DirSample = iff(array_length(dirlist) == 1, tostring(dirlist[0]), strcat(\"SeeDirListField\",\"_\", tostring(hash(tostring(dirlist)))))\n| extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Invoke-PowerShellTcpOneLine is a PowerShell script to create a simple and small reverse shell. It can be abused by attackers to exfiltrate data. This query looks for command line activity similar to Invoke-PowerShellTcpOneLine.\n Topic: Windows Security Events"}, {"role": "assistant", "content": "SecurityEvent\n| where EventID == 4688\n| where Process has_any (\"powershell.exe\", \"PowerShell_ISE.exe\", \"cmd.exe\")\n| where CommandLine has \"$client = New-Object System.Net.Sockets.TCPClient\"\n| extend NTDomain = tostring(split(Account,'\\\\',0)[0]), Name = tostring(split(Account,'\\\\',1)[0])\n| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer, IPCustomEntity = IpAddress\n| extend HostName = tostring(split(Computer, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(Computer, '.'), 1, -1), '.'))\n| extend Account_0_Name = Name\n| extend Account_0_NTDomain = NTDomain\n| extend Host_0_HostName = HostName\n| extend Host_0_DnsDomain = DnsDomain\n| extend IP_0_Address = IpAddress\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects when new user created with SourceLogin containing non-corporate domain.\n Topic: Box"}, {"role": "assistant", "content": "BoxEvents\n| where EventType =~ 'NEW_USER'\n| extend corp_domain = extract(@'@(.*)', 1, SourceLogin)\n| extend new_domain = tolower(extract(@'@(.*)', 1, SourceLogin))\n| where corp_domain != new_domain\n| extend AccountCustomEntity = SourceLogin\n| extend IPCustomEntity = SrcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects when a rule was deleted.\n Topic: SentinelOne"}, {"role": "assistant", "content": "SentinelOne\n| where ActivityType == 3602\n| project EventCreationTime, DataRuleName, DataRuleQueryDetails, DataUserName\n| extend AccountCustomEntity = DataUserName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Searches for Golden Ticket attacks\n Topic: Alsid For AD"}, {"role": "assistant", "content": "afad_parser\n| where MessageType == 2 and Codename == \"Golden Ticket\"\n| extend HostName = tostring(split(Host, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(Host, '.'), 1, -1), '.'))\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This Alert detects whenever a PAT is used in ways that PATs are not normally used. May require an allow list and baselining.\nReference - https://docs.microsoft.com/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops&tabs=preview-page\nUse this query for baselining:\nAzureDevOpsAuditing\n| distinct OperationName\n Topic: AzureDevOpsAuditing"}, {"role": "assistant", "content": "// Allowlisted UPNs should likely stay empty\nlet AllowlistedUpns = datatable(UPN:string)['foo@bar.com', 'test@foo.com'];\n// Operation Name parts that will alert\nlet HasAnyBlocklist = datatable(OperationNamePart:string)['Security.','Project.','AuditLog.','Extension.'];\n// Distinct Operation Names that will flag\nlet HasExactBlocklist = datatable(OperationName:string)['Group.UpdateGroupMembership.Add','Library.ServiceConnectionExecuted','Pipelines.PipelineModified',\n'Release.ReleasePipelineModified', 'Git.RefUpdatePoliciesBypassed'];\nAzureDevOpsAuditing\n| where AuthenticationMechanism startswith \"PAT\" and (OperationName has_any (HasAnyBlocklist) or OperationName in (HasExactBlocklist))\n  and ActorUPN !in (AllowlistedUpns)\n| project TimeGenerated, AuthenticationMechanism, ProjectName, ActorUPN, ActorDisplayName, IpAddress, UserAgent, OperationName, Details, Data\n| extend timestamp = TimeGenerated\n| extend AccountName = tostring(split(ActorUPN, \"@\")[0]), AccountUPNSuffix = tostring(split(ActorUPN, \"@\")[1])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Variables can be configured and used at any stage of the build process in Azure DevOps to inject values. An attacker with the required permissions could modify or add to these variables to conduct malicious activity such as changing paths or remote endpoints called during the build.\nAs variables are often changed by users, just detecting these changes would have a high false positive rate. This detection looks for modifications to variable groups where that user has not been observed modifying them before.\n Topic: AzureDevOpsAuditing"}, {"role": "assistant", "content": "let lookback = 14d;\nlet timeframe = 1d;\nlet historical_data =\nAzureDevOpsAuditing\n| where TimeGenerated > ago(lookback) and TimeGenerated < ago(timeframe)\n| where OperationName =~ \"Library.VariableGroupModified\"\n| extend variables = Data.Variables\n| extend VariableGroupId = tostring(Data.VariableGroupId)\n| extend UserKey = strcat(VariableGroupId, \"-\", ActorUserId)\n| project UserKey;\nAzureDevOpsAuditing\n| where TimeGenerated > ago(timeframe)\n| where OperationName =~ \"Library.VariableGroupModified\"\n| extend VariableGroupName = tostring(Data.VariableGroupName)\n| extend VariableGroupId = tostring(Data.VariableGroupId)\n| extend UserKey = strcat(VariableGroupId, \"-\", ActorUserId)\n| where UserKey !in (historical_data)\n| project-away UserKey\n| project-reorder TimeGenerated, VariableGroupName, ActorUPN, IpAddress, UserAgent\n| extend timestamp = TimeGenerated\n| extend AccountName = tostring(split(ActorUPN, \"@\")[0]), AccountUPNSuffix = tostring(split(ActorUPN, \"@\")[1])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Adversaries may manipulate accounts to maintain access to victim systems. These actions include adding new accounts to high privilleged groups. \n Dragonfly 2.0, for example, added newly created accounts to the administrators group to maintain elevated access. The query below generates an \n output of all high Blast Radius users performing \"Update user\" (name change) to priveleged role, or where one or more features of the activitiy \n deviates from the user, his peers or the tenant profile.\n Topic: UEBA Essentials"}, {"role": "assistant", "content": "\n//Critical Roles can impersonate any user or app, can update passwords for users or service principals (if the role can let a user update passwords for privileged users, if an attacker compromises this user then attacker can update passwords for privileged users hence gaining more privileges so users with this role are equally critical)\n//High Roles are Administrators that can manage all aspects or permissions of important products but can't update credentials and impersonate another user/app\nlet critical = dynamic(['9b895d92-2cd3-44c7-9d02-a6ac2d5ea5c3','c4e39bd9-1100-46d3-8c65-fb160da0071f','158c047a-c907-4556-b7ef-446551a6b5f7','62e90394-69f5-4237-9190-012177145e10',\n'd29b2b05-8046-44ba-8758-1e26182fcf32','729827e3-9c14-49f7-bb1b-9608f156bbb8','966707d0-3269-4727-9be2-8c3a10f19b9d','194ae4cb-b126-40b2-bd5b-6091b380977d','fe930be7-5e62-47db-91af-98c3a49a38b1']);\nlet high = dynamic(['cf1c38e5-3621-4004-a7cb-879624dced7c','7495fdc4-34c4-4d15-a289-98788ce399fd','aaf43236-0c0d-4d5f-883a-6955382ac081','3edaf663-341e-4475-9f94-5c398ef6c070',\n'7698a772-787b-4ac8-901f-60d6b08affd2','b1be1c3e-b65d-4f19-8427-f6fa0d97feb9','9f06204d-73c1-4d4c-880a-6edb90606fd8','29232cdf-9323-42fd-ade2-1d097af3e4de','be2f45a1-457d-42af-a067-6ec1fa63bc45',\n'7be44c8a-adaf-4e2a-84d6-ab2649e08a13','e8611ab8-c189-46e8-94e1-60213ab1f814']);\nAuditLogs\n| where OperationName == \"Update user\"\n| mv-expand AdditionalDetails\n| mv-expand TargetResources\n| where AdditionalDetails.key == \"UserPrincipalName\"\n| mv-expand TargetResources\n| extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\n| extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\n| where RoleId in (critical,high)\n| where isnotempty(RoleId) or isnotempty(RoleName)\n| extend TargetId = tostring(TargetResources.id)\n| extend Target =  iff(tostring(TargetResources.userPrincipalName) has \"#EXT#\",replace(\"_\",\"@\",tostring(split(TargetResources.userPrincipalName, \"#\")[0])),TargetResources.userPrincipalName),tostring(TargetResources.userPrincipalName)\n| join kind=inner ( BehaviorAnalytics\n) on $left._ItemId == $right.SourceRecordId\n| where UsersInsights.BlastRadius == \"High\" or ActivityInsights has \"True\"\n| extend UserPrincipalName = iff(UserPrincipalName has \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserPrincipalName), UserName = iff(UserName has \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserName) \n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, RoleName, ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, ResourceId\n| extend timestamp = TimeGenerated, AccountCustomEntity = UserPrincipalName, IPCustomEntity = SourceIPAddress, ResourceCustomEntity = ResourceId\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This rule generates an alert for an Armorblox incident where the remediation action is \"Needs Review\".\n Topic: Armorblox"}, {"role": "assistant", "content": "Armorblox_CL \n| where remediation_actions_s contains \"Needs Review\"\n| extend users_json = parse_json(users_s)\n| extend Name = users_json[0].name, Email = users_json[0].email\n| project-away users_json\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies when a process is running from a rare path. This could indicate malicious or unexpected activity as attacks\noften try to use common process names running from non-standard locations\n Topic: Windows Security Events"}, {"role": "assistant", "content": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = totimespan((endtime-starttime)*7);\nlet processEvents=\nSecurityEvent\n| where TimeGenerated between(ago(lookback)..endtime)\n| where EventID==4688\n// excluding well known processes\n| where NewProcessName !endswith ':\\\\Windows\\\\System32\\\\conhost.exe' and ParentProcessName !endswith ':\\\\Windows\\\\System32\\\\conhost.exe'\n| where ParentProcessName !endswith \":\\\\Windows\\\\System32\\\\wuauclt.exe\" and NewProcessName !startswith \"C:\\\\Windows\\\\SoftwareDistribution\\\\Download\\\\Install\\\\AM_Delta_Patch_\"\n| where NewProcessName !has \":\\\\Windows\\\\WinSxS\\\\amd64_microsoft-windows-servicingstack_\" and ParentProcessName !has \":\\\\Windows\\\\WinSxS\\\\amd64_microsoft-windows-servicingstack_\"\n| where NewProcessName !endswith \":\\\\WindowsAzure\\\\SecAgent\\\\WaSecAgentProv.exe\"\n| where ParentProcessName !has \":\\\\WindowsAzure\\\\GuestAgent_\" and NewProcessName !has \":\\\\WindowsAzure\\\\GuestAgent_\"\n| where ParentProcessName !has \":\\\\WindowsAzure\\\\WindowsAzureNetAgent_\" and NewProcessName !has \":\\\\WindowsAzure\\\\WindowsAzureNetAgent_\"\n| where ParentProcessName !has \":\\\\ProgramData\\\\Microsoft\\\\Windows Defender\\\\platform\\\\\" and ParentProcessName !endswith \"\\\\MpCmdRun.exe\"\n| where NewProcessName !has \":\\\\ProgramData\\\\Microsoft\\\\Windows Defender\\\\platform\\\\\" and NewProcessName !endswith \"\\\\MpCmdRun.exe\"\n| where NewProcessName !has ':\\\\Program Files\\\\Microsoft Monitoring Agent\\\\Agent\\\\'\n// filter out common randomly named paths and files\n| where not(NewProcessName matches regex @\"\\\\TRA[0-9A-Fa-f]{3}\\.tmp\")\n| where not(NewProcessName matches regex @\"\\\\TRA[0-9A-Fa-f]{4}\\.tmp\")\n| where not(NewProcessName matches regex @\"Installer\\\\MSI[0-9A-Fa-f]{3}\\.tmp\")\n| where not(NewProcessName matches regex @\"Installer\\\\MSI[0-9A-Fa-f]{4}\\.tmp\")\n| where not(NewProcessName matches regex @\"\\\\Windows\\\\Temp\\\\[0-9A-Za-z-]*\\\\DismHost\\.exe\")\n| where not(NewProcessName matches regex @\"\\\\Users\\\\[0-9A-Za-z-_~\\.]*\\\\AppData\\\\Local\\\\Temp\\\\[0-9A-Za-z-]*\\\\DismHost\\.exe\")\n| where not(NewProcessName matches regex @\"\\\\Windows\\\\Temp\\\\[0-9A-Za-z-]*\\\\MpSigStub\\.exe\")\n| where not(NewProcessName matches regex @\"\\\\[0-9A-Za-z]*\\\\amd64\\\\setup\\.exe\") and (ParentProcessName !has \":\\\\Windows\\\\SoftwareDistribution\\\\Download\\\\Install\\\\\"\nor ParentProcessName !has \"\\\\AppData\\\\Local\\\\Temp\\\\mpam-\")\n| where not(NewProcessName matches regex @\"\\\\Windows\\\\Microsoft.NET\\\\(Framework|Framework64)\\\\v[0-9].[0-9].[0-9]*\\\\(csc\\.exe|cvtres\\.exe|mscorsvw\\.exe|ngentask\\.exe|ngen\\.exe)\")\n| where not(NewProcessName matches regex @\"\\\\WindowsAzure\\\\GuestAgent_[0-9].[0-9].[0-9]*.[0-9]*_[0-9]*-[0-9]*-[0-9]*_[0-9]*\\\\\")\nand not(ParentProcessName matches regex @\"\\\\WindowsAzure\\\\GuestAgent_[0-9].[0-9].[0-9]*.[0-9]*_[0-9]*-[0-9]*-[0-9]*_[0-9]*\\\\\")\n| where not(NewProcessName matches regex @\"\\\\[0-9A-Za-z]*\\\\epplauncher.exe\")\n| where not(NewProcessName matches regex @\"\\\\Packages\\\\Plugins\\\\Microsoft\\.\")\n| extend path_parts = parse_path(NewProcessName)\n| extend ProcessPath = tostring(path_parts.DirectoryPath)\n;\nlet normalizedProcessPath = processEvents\n| extend NormalizedProcessPath = ProcessPath\n// normalize guids\n| project TimeGenerated, Computer, Account, Process, ProcessPath,\nNormalizedProcessPath = replace(\"[0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12}\", \"<guid>\", NormalizedProcessPath)\n// normalize digits away\n| project TimeGenerated, Computer, Account, Process, ProcessPath, NormalizedProcessPath = replace(@'\\d', '#', NormalizedProcessPath)\n;\nlet freqs = normalizedProcessPath\n| summarize make_list(Computer, 1000), make_list(Account, 1000), make_list(ProcessPath, 1000), frequency=count() by NormalizedProcessPath, Process\n| join kind= leftouter (\nnormalizedProcessPath\n| summarize StartTimeUtc=min(TimeGenerated), EndTimeUtc=max(TimeGenerated) by NormalizedProcessPath, Process\n) on NormalizedProcessPath, Process;\nfreqs\n| where frequency <= toscalar( freqs | serialize | project frequency | summarize percentiles(frequency, 5))\n| order by frequency asc\n| mv-expand Computer = list_Computer, Account = list_Account, ProcessPath = list_ProcessPath\n| project StartTimeUtc, EndTimeUtc, frequency, Process, NormalizedProcessPath, tostring(ProcessPath), tostring(Computer), tostring(Account)\n| extend NTDomain = split(Account, '\\\\', 0)[0], Name = split(Account, '\\\\', 1)[0], HostName = split(Computer, '.', 0)[0], DnsDomain = strcat_array(array_slice(split(Computer, '.'), 1, -1), '.')\n| extend Account_0_Name = Name\n| extend Account_0_NTDomain = NTDomain\n| extend Host_0_HostName = HostName\n| extend Host_0_DnsDomain = DnsDomain \n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects unusual query.\n Topic: Snowflake"}, {"role": "assistant", "content": "Snowflake\n| where QUERY_TYPE_s =~ 'SELECT'\n| where EXECUTION_STATUS_s =~ 'SUCCESS'\n| where QUERY_TEXT_s startswith @'SELECT *'\n| extend AccountCustomEntity = TargetUsername\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects when McAfee failed to clean or delete infected file.\n Topic: McAfee ePolicy Orchestrator"}, {"role": "assistant", "content": "McAfeeEPOEvent\n| where EventId in ('1026', '1028', '1298', '1310', '1055', '2002', '2004', '2009')\n| extend EventMessage = case(EventId == '1026', 'Unable to clean infected file',\n                              EventId == '1028', 'Unable to delete infected file',\n                              EventId == '1298', 'File infected. Delete failed, quarantine failed',\n                              EventId == '1310', 'Multiple extension heuristic detection - delete failed, quarantine failed',\n                              EventId == '1055', 'Unable to delete infected file',\n                              EventId == '2002', 'Unable to clean infected file',\n                              EventId == '2004', 'Unable to delete infected file',\n                              'Unable to move infected file to quarantine')\n| project DvcIpAddr, EventId, EventMessage, DstFileName\n| extend IPCustomEntity = DvcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies multiple machines trying to reach out to the same destination blocked by TI in Azure Firewall. This can indicate attack on the organization by the same attack group.\n\nConfigurable Parameters:\n\n- Minimum affected threshold - alert only if more than this number of hosts affected. Default is set to 5.\n- Recommendation is to use the new resource specific logs. If you are using both, the TiTraffic Count will be duplicated.\n Topic: Azure Firewall"}, {"role": "assistant", "content": "let RunTime = 1d; \nlet StartRunTime = 1d; \nlet EndRunTime = StartRunTime - RunTime; \nlet MinAffectedThreshold = 5;\nunion isfuzzy=true\n(AzureDiagnostics \n| where TimeGenerated  between (ago(StartRunTime) .. ago(EndRunTime))\n| where OperationName == \"AzureFirewallThreatIntelLog\"\n| parse msg_s with * \"from \" SourceIp \":\" SourcePort:int \" to \" Fqdn \":\" DestinationPort:int  \".\" * \"Action: Deny. \" ThreatDescription),\n(AZFWThreatIntel\n| where TimeGenerated between (ago(StartRunTime) .. ago(EndRunTime)))\n| summarize TiTrafficCount = count(), dCountSourceIps = dcount(SourceIp), AffectedIps = make_set(SourceIp, 10000) by Fqdn, ThreatDescription\n| where array_length(AffectedIps) > MinAffectedThreshold\n| mv-expand SourceIp = AffectedIps\n| order by TiTrafficCount desc, Fqdn asc, parse_ipv4(tostring(SourceIp)) asc\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects when email received with binary file as attachment.\n Topic: Proofpoint On demand(POD) Email Security"}, {"role": "assistant", "content": "let lbtime = 10m;\nlet binaryTypes = dynamic(['zip', 'octet-stream', 'java-archive', 'rar', 'tar', 'x-7z-compressed', 'x-msdownload', 'portable-executable']);\nProofpointPOD\n| where TimeGenerated > ago(lbtime)\n| where EventType == 'message'\n| where NetworkDirection == 'inbound'\n| where FilterDisposition !in ('reject', 'discard')\n| extend attachedMimeType = tostring(todynamic(MsgParts)[0]['detectedMime'])\n| where attachedMimeType has_any (binaryTypes)\n| project SrcUserUpn, AccountCustomEntity = tostring(parse_json(DstUserUpn)[0]), attachedMimeType, MsgHeaderSubject\n| extend Name = tostring(split(AccountCustomEntity, \"@\")[0]), UPNSuffix = tostring(split(AccountCustomEntity, \"@\")[1])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Adversaries may interrupt the availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to them. LockerGoga, for example, has been observed changing account passwords and logging off current users. The query below generates an output of all users performing Reset User Password where one or more features of the activity deviate from the user, his peers, or the tenant profile.\n Topic: UEBA Essentials"}, {"role": "assistant", "content": "BehaviorAnalytics\n| where ActionType =~ \"Reset user password\"\n| where ActivityInsights has \"True\"\n| join kind=inner (\nAuditLogs\n) on $left.SourceRecordId == $right._ItemId\n| mv-expand TargetResources\n| extend Target =  iff(tostring(TargetResources.userPrincipalName) has \"#EXT#\",replace_string(tostring(split(TargetResources.userPrincipalName, \"#\")[0]),\"_\",\"@\"),TargetResources.userPrincipalName)\n| extend UserPrincipalName = iff(UserPrincipalName has \"#EXT#\",replace_string(tostring(split(UserPrincipalName, \"#\")[0]),\"_\",\"@\"),UserPrincipalName),\nUserName = iff(UserName has \"#EXT#\",replace_string(tostring(split(UserPrincipalName, \"#\")[0]),\"_\",\"@\"),UserName)\n| sort by TimeGenerated desc\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, ResourceId\n| extend Name=split(UserPrincipalName, \"@\")[0], UPNSuffix=split(UserPrincipalName, \"@\")[1]\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = SourceIPAddress\n| extend AzureResource_0_ResourceId = ResourceId\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Searches for triggered Indicators of Exposures related to Active Directory attacks pathways.\n Topic: Tenable App"}, {"role": "assistant", "content": "// For the query to work properly, make sure you have imported the afad_parser.yaml parser into the workspace\n// Retrieve the parser here: https://aka.ms/sentinel-TenableApp-afad-parser\n// Then, create the Kusto Function with alias afad_parser\nlet SeverityTable=datatable(Severity:string,Level:int) [\n\"low\", 1,\n\"medium\", 2,\n\"high\", 3,\n\"critical\", 4\n];\nlet codeNameList = datatable(Codename:string)[\"C-PRIV-ACCOUNTS-SPN\", \"C-SDPROP-CONSISTENCY\", \"C-DANG-PRIMGROUPID\", \"C-GPO-HARDENING\", \"C-DC-ACCESS-CONSISTENCY\", \"C-DANGEROUS-TRUST-RELATIONSHIP\", \"C-UNCONST-DELEG\", \"C-ABNORMAL-ENTRIES-IN-SCHEMA\"];\nafad_parser\n| where MessageType == 0 and Codename in~ (codeNameList)\n| lookup kind=leftouter SeverityTable on Severity\n| order by Level\n| extend HostName = tostring(split(Host, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(Host, '.'), 1, -1), '.'))\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Multi-Factor Authentication (MFA) helps you to prevent credential compromise. This alert identifies logins to the AWS Management Console without MFA.\nYou can limit this detection to trigger for administrative accounts if you do not have MFA enabled on all accounts.\nThis is done by looking at the eventName ConsoleLogin and if the AdditionalEventData field indicates MFA was NOT used and the ResponseElements field indicates NOT a Failure. Thereby indicating that a non-MFA login was successful.\n Topic: Amazon Web Services"}, {"role": "assistant", "content": "AWSCloudTrail\n| where EventName =~ \"ConsoleLogin\"\n| extend MFAUsed = tostring(parse_json(AdditionalEventData).MFAUsed), LoginResult = tostring(parse_json(ResponseElements).ConsoleLogin)\n| where MFAUsed !~ \"Yes\" and LoginResult !~ \"Failure\"\n| where SessionIssuerUserName !contains \"AWSReservedSSO\"\n| extend UserIdentityArn = iif(isempty(UserIdentityArn), tostring(parse_json(Resources)[0].ARN), UserIdentityArn)\n| extend UserName = tostring(split(UserIdentityArn, '/')[-1])\n| extend AccountName = case( UserIdentityPrincipalid == \"Anonymous\", \"Anonymous\", isempty(UserIdentityUserName), UserName, UserIdentityUserName)\n| extend AccountName = iif(AccountName contains \"@\", tostring(split(AccountName, '@', 0)[0]), AccountName),\n  AccountUPNSuffix = iif(AccountName contains \"@\", tostring(split(AccountName, '@', 1)[0]), \"\")\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by EventName, EventTypeName, LoginResult, MFAUsed, RecipientAccountId, AccountName, AccountUPNSuffix, UserIdentityAccountId,  UserIdentityPrincipalid, UserAgent,\n  UserIdentityUserName, SessionMfaAuthenticated, SourceIpAddress, AWSRegion\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "New Brand Abuse with severity High found\n Topic: CTM360"}, {"role": "assistant", "content": "CBSLog_Azure_1_CL\n| where severity_s == \"High\"\n| where type_s == \"Brand Abuse\"\n| where status_s != \"Closed\" or status_s != \"Resolved\" \n| where remarks_s == \"New Brand Abuse with severity High found\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This analytics rule collects events where an SD-WAN Edge reports that all Cloud Security Service (CSS) tunnels are down. Losing connectivity to a Secure Service Edge (SSE) service can impact security capabilities. Topic: VMware SD-WAN and SASE"}, {"role": "assistant", "content": "VMware_VECO_EventLogs_CL\n| where event contains \"ALL_CSS_DOWN\"\n| extend Edge_Serial_Number = extract(\"edgeSerialNumber:(.*)$\", 1, detail)\n| project TimeGenerated, Edge_Serial_Number, message, severity\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Several failed \"assume role\" attempts occurred on existing roles in the account. This could be an attacker trying to escalate privileges and move laterally by assuming roles in a compromised account. Verify with the user identity that the activity is legitimate.\n Topic: Amazon Web Services"}, {"role": "assistant", "content": "AWSCloudTrail\n| where EventName == \"AssumeRole\" and ErrorMessage == \"AccessDenied\"\n| extend UserIdentityUserName = iff(isnotempty(UserIdentityUserName), UserIdentityUserName, tostring(split(UserIdentityArn,'/')[-1]))\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n| summarize timestamp=arg_max(timestamp,*), failed_roles=dcount(ErrorMessage) by IPCustomEntity, AccountCustomEntity\n| where failed_roles > 2\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects PowerShell commands downloading and execute code hosted on Pastebin and other services. This technique has been used by malicious actors to distribute malware, in particular it has been used by the EvilCorp Ransomware variants such as Sodinokibi.\n Topic: Cyborg Security HUNTER"}, {"role": "assistant", "content": "SecurityEvent\n| where Process  has \"powershell.exe\"\n| where CommandLine contains \"http\"\n| where CommandLine has_any (\n  \"pastebin\",\n  \"github\",\n  \"ghostbin\",\n  \"githubusercontent\",\n  \"0bin\",\n  \"zerobin\",\n  \"privatebin\",\n  \"klgrth\",\n  \"termbin\",\n  \"hatebin\",\n  \"hastebin\",\n  \"dumpz\"\n) or  CommandLine contains \".onion\" or CommandLine contains \"paste.\"\n| project TimeGenerated, Computer, tostring(EventID), ParentProcessName, NewProcessName, CommandLine, SubjectUserName, SourceComputerId, processID=tolong(NewProcessId), parentProcessID=tolong(ProcessId), EventData| order by TimeGenerated\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query searches for hosts running a rare process. A rare process has execution requency of less than 1% of the average for 30 days and less than a count of 100 on a given host or less than a 14 count on a given host from the last 7 days\n Topic: Windows Security Events"}, {"role": "assistant", "content": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = starttime - 14d;\nlet basic=materialize(\n  SecurityEvent\n    | where TimeGenerated >= lookback\n    | where EventID == 4688\n    | where isnotempty(CommandLine) and NewProcessName !endswith \":\\\\windows\\\\system32\\\\conhost.exe\" and CommandLine !~ NewProcessName and CommandLine !~ strcat('\\\"',NewProcessName,'\\\"',\" \")\n    | extend CommandLine=tolower(CommandLine)\n    | summarize FullCount = count()\n                , Count= countif(TimeGenerated between (starttime .. endtime))\n                , min_TimeGenerated=min(TimeGenerated)\n                , max_TimeGenerated=max(TimeGenerated)\n                      by Computer, NewProcessName, CommandLine\n    | where Count > 0 and Count < 100);\nlet basic_avg = basic\n    | summarize Avg = avg(FullCount) by  NewProcessName, CommandLine;\nbasic | project-away FullCount\n  | join kind=inner\nbasic_avg\n  on NewProcessName, CommandLine | project-away NewProcessName1, CommandLine1\n  | where Count < 7 or (Count <= Avg*0.01 and Count < 100)\n  | extend HostName = split(Computer, '.', 0)[0], DnsDomain = strcat_array(array_slice(split(Computer, '.'), 1, -1), '.')\n  | extend Host_0_HostName = HostName\n  | extend Host_0_DnsDomain = DnsDomain \n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "The VMware SD-WAN Edge appliance captured a potentially malicious traffic flow. Please investigate the IOC information available.\n\nThis analytics rule analyses Search API streams. Search API queries report only IDS/IPS Alerts. In case you would also need Network Flood Protection, please enable Syslog collection using AMA. Topic: VMware SD-WAN and SASE"}, {"role": "assistant", "content": "VMware_SDWAN_FirewallLogs_CL\n| project TimeGenerated, signature, severity, category, signatureId, actionTaken, edgeName, sourceIp, protocol, sourcePort, destinationIp, destinationPort, domainName, attackSource, attackTarget, firewallPolicyName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "A user has started a session impersonation, gaining access with the impersonated users permissions. This typically signifies Okta admin access and should only happen if anticipated and requested.\n Topic: Okta Single Sign-On"}, {"role": "assistant", "content": "Okta_CL\n| where eventType_s == \"user.session.impersonation.initiate\" and outcome_result_s == \"SUCCESS\"\n// Expand the JSON array in 'target_s' field to extract detailed information about the event\n| mv-expand parsed_json = todynamic(target_s) // Unpack and understand the details from the 'target_s' JSON array\n// Enhance visibility by extending columns with extracted details for better analysis\n| extend TargetUser_id = tostring(parsed_json.id), \n         TargetUser_type = tostring(parsed_json.type), \n         TargetUser_alternateId = tostring(parsed_json.alternateId), \n         TargetUser_displayName = tostring(parsed_json.displayName), \n         Target_detailEntry = tostring(parsed_json.detailEntry) \n// Project event details to gain insights into the security context, including actor and target user information\n| project TimeGenerated, actor_alternateId_s, actor_displayName_s, TargetUser_alternateId, \n               TargetUser_displayName, TargetUser_type, TargetUser_id, \n               eventType_s, outcome_result_s\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query identifies Dataverse exfiltration via email by terminated employees. Topic: Microsoft Business Applications"}, {"role": "assistant", "content": "// Note this detection relies upon the user's UPN matching their email address.\n// UEBA can provide more accurate data if enabled.\nlet query_frequency = 1h;\nlet allowed_destination_smtp_domains = dynamic([\n// Specify a list of recipient domains to exclude from alerting.\n// Example:\n// \"microsoft.com\", \"contoso.com\"\n    ]);\nlet exfiltration_alert_users = SecurityAlert\n    | where Tactics has 'Exfiltration' and Entities has_all ('account', '32780')\n    | mv-expand DataverseEntities = todynamic(Entities)\n    | where DataverseEntities.AppId == 32780\n    | extend InstanceUrl = tostring(DataverseEntities.InstanceName)\n    | mv-expand AccountEntities = todynamic(Entities)\n    | where AccountEntities.Type == 'account'\n    | extend\n        AccountName = tostring(AccountEntities.Name),\n        UPNSuffix = tostring(AccountEntities.UPNSuffix)\n    | summarize InstanceUrls = make_set(InstanceUrl, 100) by AccountName, UPNSuffix\n    | extend UserId = tolower(strcat(AccountName, \"@\", UPNSuffix));\nexfiltration_alert_users\n| join kind=inner (\n    MSBizAppsTerminatedEmployees\n    | project UserId = tolower(UserPrincipalName), NotificationDate\n    | where startofday(NotificationDate) <= startofday(now()))\n    // Uncomment the below KQL if UEBA is available to gain more accurate\n    // email address data:\n    // | join kind=leftouter (_ASIM_IdentityInfo) on $left.UserId == $right.Username\n    // | extend UserId = iif(UserId == UserMailAddress or isempty(UserMailAddress), UserId, UserMailAddress))\n    on UserId\n| join kind=inner (\n    EmailEvents\n    | where TimeGenerated >= ago (query_frequency)\n    | where EmailDirection == \"Outbound\" and AttachmentCount > 0\n    | extend RecipientDomain = tolower(split(RecipientEmailAddress, '@')[1])\n    | where RecipientDomain !in (allowed_destination_smtp_domains)\n    | summarize\n        RecipientAddresses = make_set(RecipientEmailAddress, 1000),\n        Subject = make_set(Subject, 1000)\n        by SenderAddress = tolower(SenderMailFromAddress), SenderIPv4)\n    on $left.UserId == $right.SenderAddress\n| mv-expand InstanceUrl = InstanceUrls to typeof(string)\n| extend\n    CloudAppId = int(32780),\n    AccountName = tostring(split(UserId, \"@\")[0]),\n    UPNSuffix = tostring(split(UserId, \"@\")[1])\n| project\n    UserId,\n    InstanceUrl,\n    SenderIPv4,\n    RecipientAddresses,\n    Subject,\n    AccountName,\n    UPNSuffix,\n    CloudAppId\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Monitors CTERA platform to detect potential ransomware attacks detected by CTERA Ransom Protect AI engine. Topic: CTERA"}, {"role": "assistant", "content": "Syslog\n| where SyslogMessage contains \"Ransomware incident detected\"\n| extend \nPortal = extract(\"portal:(\\\\w+)\", 1, SyslogMessage),\nEdgeFiler = extract(\"Edge Filer:(\\\\w+-\\\\d+)\", 1, SyslogMessage),\nIP = extract(\"\\\\(IP:([0-9.]+)\\\\)\", 1, SyslogMessage),\nUser = extract(\"user:(\\\\w+)\", 1, SyslogMessage),\nIncidentType = extract(\"Incident type:(\\\\w+)\", 1, SyslogMessage),\nStartTime = extract(\"started at \\\"([^\\\"]+)\\\"\", 1, SyslogMessage),\nEndTime = extract(\"ended at \\\"([^\\\"]+)\\\"\", 1, SyslogMessage)\n| project TimeGenerated, Portal, EdgeFiler, IP, User, IncidentType, StartTime, EndTime\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects user login after long inactivity period.\n Topic: Box"}, {"role": "assistant", "content": "let lbperiod_start = 14d;\nlet lbperiod_end = 7d;\nlet lbtime = 1h;\nlet active_users = BoxEvents\n| where TimeGenerated between (ago(lbperiod_end) .. ago(lbtime))\n| where EventType =~ 'LOGIN'\n| summarize makeset(SourceName);\nlet inactive_users = BoxEvents\n| where TimeGenerated between (ago(lbperiod_start) .. ago(lbperiod_end))\n| where EventType =~ 'LOGIN'\n| where SourceName !in (active_users)\n| summarize makeset(SourceName);\nBoxEvents\n| where EventType == 'LOGIN'\n| where SourceName in (inactive_users)\n| extend AccountCustomEntity = SourceName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies when failed logon attempts are 20 or higher during a 10 minute period (2 failed logons per minute minimum) from valid account.\n Topic: Detections"}, {"role": "assistant", "content": "let threshold = 20;\nlet ReasontoSubStatus = datatable(SubStatus: string, Reason: string) [\n    \"0xc000005e\", \"There are currently no logon servers available to service the logon request.\",\n    \"0xc0000064\", \"User logon with misspelled or bad user account\",\n    \"0xc000006a\", \"User logon with misspelled or bad password\",\n    \"0xc000006d\", \"Bad user name or password\",\n    \"0xc000006e\", \"Unknown user name or bad password\",\n    \"0xc000006f\", \"User logon outside authorized hours\",\n    \"0xc0000070\", \"User logon from unauthorized workstation\",\n    \"0xc0000071\", \"User logon with expired password\",\n    \"0xc0000072\", \"User logon to account disabled by administrator\",\n    \"0xc00000dc\", \"Indicates the Sam Server was in the wrong state to perform the desired operation\",\n    \"0xc0000133\", \"Clocks between DC and other computer too far out of sync\",\n    \"0xc000015b\", \"The user has not been granted the requested logon type (aka logon right) at this machine\",\n    \"0xc000018c\", \"The logon request failed because the trust relationship between the primary domain and the trusted domain failed\",\n    \"0xc0000192\", \"An attempt was made to logon, but the Netlogon service was not started\",\n    \"0xc0000193\", \"User logon with expired account\",\n    \"0xc0000224\", \"User is required to change password at next logon\",\n    \"0xc0000225\", \"Evidently a bug in Windows and not a risk\",\n    \"0xc0000234\", \"User logon with account locked\",\n    \"0xc00002ee\", \"Failure Reason: An Error occurred during Logon\",\n    \"0xc0000413\", \"Logon Failure: The machine you are logging onto is protected by an authentication firewall. The specified account is not allowed to authenticate to the machine\"\n];\n(union isfuzzy=true\n    (SecurityEvent\n    | where EventID == 4625\n    | where AccountType =~ \"User\"\n    | where SubStatus !~ '0xc0000064' and Account !in ('\\\\', '-\\\\-')\n    // SubStatus '0xc0000064' signifies 'Account name does not exist'\n    | extend\n        ResourceId = column_ifexists(\"_ResourceId\", _ResourceId),\n        SourceComputerId = column_ifexists(\"SourceComputerId\", SourceComputerId),\n        SubStatus = tolower(SubStatus)\n    | lookup ReasontoSubStatus on SubStatus\n    | extend coalesce(Reason, strcat('Unknown reason substatus: ', SubStatus))\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), FailedLogonCount = count() by bin(TimeGenerated,10m), EventID,\n        Activity, Computer, Account, TargetAccount, TargetUserName, TargetDomainName,\n        LogonType, LogonTypeName, LogonProcessName, Status, SubStatus, Reason, ResourceId, SourceComputerId, WorkstationName, IpAddress\n    | where FailedLogonCount >= threshold\n    ),\n    (\n    (WindowsEvent\n    | where EventID == 4625 and not(EventData has '0xc0000064')\n    | extend TargetAccount = strcat(tostring(EventData.TargetDomainName), \"\\\\\", tostring(EventData.TargetUserName))\n    | extend TargetUserSid = tostring(EventData.TargetUserSid)\n    | extend AccountType=case(EventData.TargetUserName endswith \"$\" or TargetUserSid in (\"S-1-5-18\", \"S-1-5-19\", \"S-1-5-20\"), \"Machine\", isempty(TargetUserSid), \"\", \"User\")\n    | where AccountType =~ \"User\"\n    | extend SubStatus = tostring(EventData.SubStatus)\n    | where SubStatus !~ '0xc0000064' and TargetAccount !in ('\\\\', '-\\\\-')\n    // SubStatus '0xc0000064' signifies 'Account name does not exist'\n    | extend\n        ResourceId = column_ifexists(\"_ResourceId\", _ResourceId),\n        SourceComputerId = column_ifexists(\"SourceComputerId\", \"\"),\n        SubStatus = tolower(SubStatus)\n    | lookup ReasontoSubStatus on SubStatus\n    | extend coalesce(Reason, strcat('Unknown reason substatus: ', SubStatus))\n    | extend Activity=\"4625 - An account failed to log on.\"\n    | extend TargetUserName = tostring(EventData.TargetUserName)\n    | extend TargetDomainName = tostring(EventData.TargetDomainName)\n    | extend LogonType = tostring(EventData.LogonType)\n    | extend Status= tostring(EventData.Status)\n    | extend LogonProcessName = tostring(EventData.LogonProcessName)\n    | extend WorkstationName = tostring(EventData.WorkstationName)\n    | extend IpAddress = tostring(EventData.IpAddress)\n    | extend LogonTypeName=case(\n      LogonType == 2, \"2 - Interactive\",\n      LogonType == 3, \"3 - Network\",\n      LogonType == 4, \"4 - Batch\",\n      LogonType == 5, \"5 - Service\",\n      LogonType == 7, \"7 - Unlock\",\n      LogonType == 8, \"8 - NetworkCleartext\",\n      LogonType == 9, \"9 - NewCredentials\",\n      LogonType == 10, \"10 - RemoteInteractive\",\n      LogonType == 11, \"11 - CachedInteractive\",\n      tostring(LogonType)\n    )\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), FailedLogonCount = count() by bin(TimeGenerated,10m), EventID,\n        Activity, Computer, TargetAccount, TargetUserName, TargetDomainName,\n        LogonType, LogonTypeName, LogonProcessName, Status, SubStatus, Reason, ResourceId, SourceComputerId, WorkstationName, IpAddress\n    | where FailedLogonCount >= threshold\n    )))\n| summarize arg_max(TimeGenerated, *) by Computer, TargetAccount, TargetUserName, TargetDomainName\n| extend HostName = tostring(split(Computer, \".\")[0]), DomainIndex = toint(indexof(Computer, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(Computer, DomainIndex + 1), Computer)\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query looks for suspicious request patterns to Exchange servers that fit a pattern observed by Silk Typhoon actors.\nThe same query can be run on HTTPProxy logs from on-premise hosted Exchange servers.\nReference: https://www.microsoft.com/security/blog/2021/03/02/hafnium-targeting-exchange-servers/\n Topic: Detections"}, {"role": "assistant", "content": "let exchange_servers = (\nW3CIISLog\n| where TimeGenerated > ago(14d)\n| where sSiteName =~ \"Exchange Back End\"\n| summarize by Computer);\nW3CIISLog\n| where TimeGenerated > ago(1d)\n| where Computer in (exchange_servers)\n| where csUriQuery startswith \"t=\"\n| project-reorder TimeGenerated, Computer, csUriStem, csUriQuery, csUserName, csUserAgent, cIP\n| extend HostName = tostring(split(Computer, \".\")[0]), DomainIndex = toint(indexof(Computer, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(Computer, DomainIndex + 1), Computer)\n| extend AccountName = tostring(split(csUserName, \"@\")[0]), AccountUPNSuffix = tostring(split(csUserName, \"@\")[1])\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies when a user account was created and then added to the builtin Administrators group in the same day.\nThis should be monitored closely and all additions reviewed.\n Topic: Detections"}, {"role": "assistant", "content": "(union isfuzzy=true\n    (SecurityEvent\n    | where EventID == 4720\n    | where AccountType == \"User\"\n    | project CreatedUserTime = TimeGenerated, CreatedUserEventID = EventID, CreatedUserActivity = Activity, Computer = toupper(Computer), \n    CreatedUser = tolower(TargetAccount), CreatedUserAccountName = TargetUserName, CreatedUserDomainName = TargetDomainName, CreatedUserSid = TargetSid, \n    AccountUsedToCreateUser = SubjectAccount, CreatedByAccountName = SubjectUserName, CreatedByDomainName = SubjectDomainName, SidofAccountUsedToCreateUser = SubjectUserSid\n    ),\n    (WindowsEvent\n    | where EventID == 4720\n    | extend SubjectUserSid = tostring(EventData.SubjectUserSid)\n    | extend AccountType=case(EventData.SubjectUserName endswith \"$\" or SubjectUserSid in (\"S-1-5-18\", \"S-1-5-19\", \"S-1-5-20\"), \"Machine\", isempty(SubjectUserSid), \"\", \"User\")\n    | where AccountType == \"User\"\n    | extend SubjectAccount = strcat(tostring(EventData.SubjectDomainName),\"\\\\\", tostring(EventData.SubjectUserName))\n    | extend SubjectDomainName = tostring(EventData.SubjectDomainName), SubjectUserName = tostring(EventData.SubjectUserName)\n    | extend TargetAccount = strcat(EventData.TargetDomainName,\"\\\\\", EventData.TargetUserName)\n    | extend TargetUserName = tostring(EventData.TargetUserName), TargetDomainName = tostring(EventData.TargetDomainName) \n    | extend Activity=\"4720 - A user account was created.\"\n    | extend TargetSid = tostring(EventData.TargetSid)\n    | project CreatedUserTime = TimeGenerated, CreatedUserEventID = EventID, CreatedUserActivity = Activity, Computer = toupper(Computer), \n    CreatedUser = tolower(TargetAccount), CreatedUserAccountName = TargetUserName, CreatedUserDomainName = TargetDomainName, CreatedUserSid = TargetSid, \n    AccountUsedToCreateUser = SubjectAccount, CreatedByAccountName = SubjectUserName, CreatedByDomainName = SubjectDomainName, SidofAccountUsedToCreateUser = SubjectUserSid\n    )\n  )\n| join kind=inner\n(\n  (union isfuzzy=true\n    (SecurityEvent \n    | where AccountType == \"User\"\n    // 4732 - A member was added to a security-enabled local group\n    | where EventID == 4732\n    // TargetSid is the builin Admins group: S-1-5-32-544\n    | where TargetSid == \"S-1-5-32-544\"\n    | project GroupAddTime = TimeGenerated, GroupAddEventID = EventID, GroupAddActivity = Activity, Computer = toupper(Computer), GroupName = tolower(TargetAccount), \n    GroupSid = TargetSid, AccountThatAddedUser = SubjectAccount, SIDofAccountThatAddedUser = SubjectUserSid, AddedByAccountName = SubjectUserName, AddedByDomainName = SubjectDomainName,\n    CreatedUserSid = MemberSid\n    ),\n    (  WindowsEvent \n    // 4732 - A member was added to a security-enabled local group\n    | where EventID == 4732 and EventData has \"S-1-5-32-544\"\n    //TargetSid is the builin Admins group: S-1-5-32-544\n    | extend SubjectUserSid = tostring(EventData.SubjectUserSid)\n    | extend AccountType=case(EventData.SubjectUserName endswith \"$\" or SubjectUserSid in (\"S-1-5-18\", \"S-1-5-19\", \"S-1-5-20\"), \"Machine\", isempty(SubjectUserSid), \"\", \"User\")\n    | where AccountType == \"User\"\n    | extend TargetSid = tostring(EventData.TargetSid)\n    | where TargetSid == \"S-1-5-32-544\"\n    | extend SubjectAccount = strcat(tostring(EventData.SubjectDomainName),\"\\\\\", tostring(EventData.SubjectUserName))\n    | extend SubjectDomainName = tostring(EventData.SubjectDomainName), SubjectUserName = tostring(EventData.SubjectUserName)\n    | extend TargetAccount = strcat(EventData.TargetDomainName,\"\\\\\", EventData.TargetUserName)\n    | extend Activity=\"4732 - A member was added to a security-enabled local group.\"\n    | extend MemberSid = tostring(EventData.MemberSid)\n    | project GroupAddTime = TimeGenerated, GroupAddEventID = EventID, GroupAddActivity = Activity, Computer = toupper(Computer), GroupName = tolower(TargetAccount), \n    GroupSid = TargetSid, AccountThatAddedUser = SubjectAccount, SIDofAccountThatAddedUser = SubjectUserSid, AddedByAccountName = SubjectUserName, AddedByDomainName = SubjectDomainName,\n    CreatedUserSid = MemberSid\n    )\n  )\n)\non CreatedUserSid\n//Create User first, then the add to the group.\n| project Computer, CreatedUserTime, CreatedUserEventID, CreatedUserActivity, CreatedUser, CreatedUserSid, CreatedUserAccountName, CreatedUserDomainName,\nGroupAddTime, GroupAddEventID, GroupAddActivity, GroupName, GroupSid,\nAccountUsedToCreateUser, SidofAccountUsedToCreateUser, CreatedByAccountName, CreatedByDomainName, \nAccountThatAddedUser, SIDofAccountThatAddedUser, AddedByAccountName, AddedByDomainName\n| extend HostName = tostring(split(Computer, \".\")[0]), DomainIndex = toint(indexof(Computer, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(Computer, DomainIndex + 1), Computer)\n| project-away DomainIndex\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "VIP Account with more than 6 failed logon attempts in 10 minutes, include your own VIP list in the table below\n NTSTATUS codes - https://docs.microsoft.com/openspecs/windows_protocols/ms-erref/596a1078-e883-4972-9bbc-49e60bebca55\n Topic: Windows Security Events"}, {"role": "assistant", "content": "// Create DataTable with your own values, example below shows dummy usernames and domain\nlet List = datatable(VIPUser:string, Domain:string)[\"Bob\", \"Domain\", \"joe\", \"domain\", \"MATT\", \"DOMAIN\", \"administrator\", \"\"];\nlet timeframe = 10m;\nList\n| project TargetUserName = tolower(VIPUser), TargetDomainName = toupper(Domain)\n| join kind= rightsemi ( \nSecurityEvent \n| where TimeGenerated > ago(2*timeframe) \n| where EventID == \"4625\"\n| where AccountType == \"User\"\n) on TargetUserName, TargetDomainName\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), FailedVIPLogons = count() by EventID, Activity, WorkstationName, Account, TargetAccount, TargetUserName, TargetDomainName, LogonType, LogonTypeName, LogonProcessName, Status, SubStatus\n| where FailedVIPLogons >= 6\n// map the most common ntstatus codes\n| extend StatusDesc = case(\nStatus =~ \"0x80090302\", \"SEC_E_UNSUPPORTED_FUNCTION\",\nStatus =~ \"0x80090308\", \"SEC_E_INVALID_TOKEN\",\nStatus =~ \"0x8009030E\", \"SEC_E_NO_CREDENTIALS\",\nStatus =~ \"0xC0000008\", \"STATUS_INVALID_HANDLE\",\nStatus =~ \"0xC0000017\", \"STATUS_NO_MEMORY\",\nStatus =~ \"0xC0000022\", \"STATUS_ACCESS_DENIED\",\nStatus =~ \"0xC0000034\", \"STATUS_OBJECT_NAME_NOT_FOUND\",\nStatus =~ \"0xC000005E\", \"STATUS_NO_LOGON_SERVERS\",\nStatus =~ \"0xC000006A\", \"STATUS_WRONG_PASSWORD\",\nStatus =~ \"0xC000006D\", \"STATUS_LOGON_FAILURE\",\nStatus =~ \"0xC000006E\", \"STATUS_ACCOUNT_RESTRICTION\",\nStatus =~ \"0xC0000073\", \"STATUS_NONE_MAPPED\",\nStatus =~ \"0xC00000FE\", \"STATUS_NO_SUCH_PACKAGE\",\nStatus =~ \"0xC000009A\", \"STATUS_INSUFFICIENT_RESOURCES\",\nStatus =~ \"0xC00000DC\", \"STATUS_INVALID_SERVER_STATE\",\nStatus =~ \"0xC0000106\", \"STATUS_NAME_TOO_LONG\",\nStatus =~ \"0xC000010B\", \"STATUS_INVALID_LOGON_TYPE\",\nStatus =~ \"0xC000015B\", \"STATUS_LOGON_TYPE_NOT_GRANTED\",\nStatus =~ \"0xC000018B\", \"STATUS_NO_TRUST_SAM_ACCOUNT\",\nStatus =~ \"0xC0000224\", \"STATUS_PASSWORD_MUST_CHANGE\",\nStatus =~ \"0xC0000234\", \"STATUS_ACCOUNT_LOCKED_OUT\",\nStatus =~ \"0xC00002EE\", \"STATUS_UNFINISHED_CONTEXT_DELETED\",\n\"See - https://docs.microsoft.com/openspecs/windows_protocols/ms-erref/596a1078-e883-4972-9bbc-49e60bebca55\"\n)\n| extend SubStatusDesc = case(\nSubStatus =~ \"0x80090325\", \"SEC_E_UNTRUSTED_ROOT\",\nSubStatus =~ \"0xC0000008\", \"STATUS_INVALID_HANDLE\",\nSubStatus =~ \"0xC0000022\", \"STATUS_ACCESS_DENIED\",\nSubStatus =~ \"0xC0000064\", \"STATUS_NO_SUCH_USER\",\nSubStatus =~ \"0xC000006A\", \"STATUS_WRONG_PASSWORD\",\nSubStatus =~ \"0xC000006D\", \"STATUS_LOGON_FAILURE\",\nSubStatus =~ \"0xC000006E\", \"STATUS_ACCOUNT_RESTRICTION\",\nSubStatus =~ \"0xC000006F\", \"STATUS_INVALID_LOGON_HOURS\",\nSubStatus =~ \"0xC0000070\", \"STATUS_INVALID_WORKSTATION\",\nSubStatus =~ \"0xC0000071\", \"STATUS_PASSWORD_EXPIRED\",\nSubStatus =~ \"0xC0000072\", \"STATUS_ACCOUNT_DISABLED\",\nSubStatus =~ \"0xC0000073\", \"STATUS_NONE_MAPPED\",\nSubStatus =~ \"0xC00000DC\", \"STATUS_INVALID_SERVER_STATE\",\nSubStatus =~ \"0xC0000133\", \"STATUS_TIME_DIFFERENCE_AT_DC\",\nSubStatus =~ \"0xC000018D\", \"STATUS_TRUSTED_RELATIONSHIP_FAILURE\",\nSubStatus =~ \"0xC0000193\", \"STATUS_ACCOUNT_EXPIRED\",\nSubStatus =~ \"0xC0000380\", \"STATUS_SMARTCARD_WRONG_PIN\",\nSubStatus =~ \"0xC0000381\", \"STATUS_SMARTCARD_CARD_BLOCKED\",\nSubStatus =~ \"0xC0000382\", \"STATUS_SMARTCARD_CARD_NOT_AUTHENTICATED\",\nSubStatus =~ \"0xC0000383\", \"STATUS_SMARTCARD_NO_CARD\",\nSubStatus =~ \"0xC0000384\", \"STATUS_SMARTCARD_NO_KEY_CONTAINER\",\nSubStatus =~ \"0xC0000385\", \"STATUS_SMARTCARD_NO_CERTIFICATE\",\nSubStatus =~ \"0xC0000386\", \"STATUS_SMARTCARD_NO_KEYSET\",\nSubStatus =~ \"0xC0000387\", \"STATUS_SMARTCARD_IO_ERROR\",\nSubStatus =~ \"0xC0000388\", \"STATUS_DOWNGRADE_DETECTED\",\nSubStatus =~ \"0xC0000389\", \"STATUS_SMARTCARD_CERT_REVOKED\",\n\"See - https://docs.microsoft.com/openspecs/windows_protocols/ms-erref/596a1078-e883-4972-9bbc-49e60bebca55\"\n)\n| project StartTimeUtc, EndTimeUtc, FailedVIPLogons, EventID, Activity, WorkstationName, Account, TargetAccount, TargetUserName, TargetDomainName, LogonType, LogonTypeName, LogonProcessName, Status, StatusDesc, SubStatus, SubStatusDesc\n| extend timestamp = StartTimeUtc, AccountCustomEntity = Account\n| extend NTDomain = tostring(split(Account,'\\\\',0)[0]), Name = tostring(split(Account,'\\\\',1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_NTDomain = NTDomain\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query searches for guest is not an admin in Azure\n Topic: SenservaPro"}, {"role": "assistant", "content": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'UserNonAdminGuest'"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for unexpected EdgeResponseStatus values.\n Topic: Cloudflare"}, {"role": "assistant", "content": "Cloudflare\n| where TimeGenerated > ago(24h)\n| where HttpStatusCode != EdgeResponseStatus\n| extend IPCustomEntity = SrcIpAddr\n| extend UrlCustomEntity = ClientRequestURI\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Shows channel type.\n Topic: Trend Micro Apex One"}, {"role": "assistant", "content": "TMApexOneEvent\n| where TimeGenerated > ago(24h)\n| where EventMessage has \"Data Loss Prevention\"\n| extend DeviceCustomNumber3 = coalesce(\n                                  column_ifexists(\"FieldDeviceCustomNumber3\", long(null)),\n                                  DeviceCustomNumber3,\n                                  long(null)\n                              )\n| where isnotempty(DeviceCustomNumber3)\n| extend DlpAction = case(\nDeviceCustomNumber3 == \"65535\", \"Not available\",\nDeviceCustomNumber3 == \"0\", \"Removable storage\", \nDeviceCustomNumber3 == \"1\", \"SMB\",\nDeviceCustomNumber3 == \"2\", \"Email\",\nDeviceCustomNumber3 == \"3\", \"IM\", \nDeviceCustomNumber3 == \"4\", \"FTP\",\nDeviceCustomNumber3 == \"5\", \"HTTP\",\nDeviceCustomNumber3 == \"6\", \"HTTPS\", \nDeviceCustomNumber3 == \"7\", \"PGP\",\nDeviceCustomNumber3 == \"8\", \"Data recorders\",\nDeviceCustomNumber3 == \"9\", \"Printer\", \nDeviceCustomNumber3 == \"10\", \"Clipboard\",\nDeviceCustomNumber3 == \"11\", \"Sync\",\nDeviceCustomNumber3 == \"12\", \"P2P\",\nDeviceCustomNumber3 == \"13\", \"Webmail\", \nDeviceCustomNumber3 == \"14\", \"Document management\",\nDeviceCustomNumber3 == \"15\", \"Cloud storage\",\nDeviceCustomNumber3 == \"121\", \"SMTP email\",\nDeviceCustomNumber3 == \"122\", \"Exchange Client Mail\", \nDeviceCustomNumber3 == \"123\", \"Lotus Note Email\",\nDeviceCustomNumber3 == \"130\", \"Webmail (Yahoo! Mail)\",\nDeviceCustomNumber3 == \"131\", \"Webmail (Hotmail)\",\nDeviceCustomNumber3 == \"132\", \"Webmail (Gmail)\",\nDeviceCustomNumber3 == \"133\", \"Webmail (AOL Mail)\",\nDeviceCustomNumber3 == \"140\", \"IM (MSN)\",\nDeviceCustomNumber3 == \"141\", \"IM (AIM)\",\nDeviceCustomNumber3 == \"142\", \"IM (Yahoo Messenger)\",\nDeviceCustomNumber3 == \"143\", \"IM (Skype)\",\nDeviceCustomNumber3 == \"191\", \"P2P (BitTorrent)\",\nDeviceCustomNumber3 == \"192\", \"P2P (EMule)\",\nDeviceCustomNumber3 == \"193\", \"P2P (Winny)\",\nDeviceCustomNumber3 == \"194\", \"P2P (HTCSYN)\",\nDeviceCustomNumber3 == \"195\", \"P2P (iTunes)\",\nDeviceCustomNumber3 == \"196\", \"Cloud storage (DropBox)\",\nDeviceCustomNumber3 == \"197\", \"Cloud storage (Box)\",\nDeviceCustomNumber3 == \"198\", \"Cloud storage (Google Drive)\",\nDeviceCustomNumber3 == \"199\", \"Cloud storage (OneDrive)\",\nDeviceCustomNumber3 == \"200\", \"Cloud storage (SugarSync)\",\nDeviceCustomNumber3 == \"201\", \"Cloud storage (Hightail)\",\nDeviceCustomNumber3 == \"202\", \"IM (QQ)\",\nDeviceCustomNumber3 == \"203\", \"Webmail (other)\",\nDeviceCustomNumber3 == \"204\", \"Cloud storage (Evernote)\",\nDeviceCustomNumber3 == \"211\", \"Document management (SharePoint)\",\n\"unknown\")\n| summarize ChannelType = count() by DlpAction, DstUserName\n| extend AccountCustomEntity = DstUserName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "test\n Topic: DEV-0537DetectionandHunting"}, {"role": "assistant", "content": "test\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for top users receiving spam mails.\n Topic: CiscoSEG"}, {"role": "assistant", "content": "CiscoSEGEvent\n| where TimeGenerated > ago(24h)\n| where NetworkDirection =~ 'Incoming'\n| where SimplifiedDeviceAction =~ 'QUARANTINED'\n| extend act_det = extract(@'ESAFinalActionDetails\":\"(.*?)\"', 1, tostring(AdditionalFields))\n| where act_det has 'To SPAM'\n| summarize count() by DstUserName\n| extend AccountCustomEntity = DstUserName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies a match for a SQL Injection attack in the App Gateway WAF logs. The threshold value in the query can be changed as per your infrastructures requirements.\nReferences: https://owasp.org/Top10/A03_2021-Injection/\n Topic: Azure Web Application Firewall (WAF)"}, {"role": "assistant", "content": "let Threshold = 3;  \nAzureDiagnostics\n| where Category == \"ApplicationGatewayFirewallLog\"\n| where action_s == \"Matched\"\n| where Message has \"SQL Injection\"\n| extend transactionId_g = tostring(parse_json(AdditionalFields).transactionId_g)\n| extend hostname_s = tostring(parse_json(AdditionalFields).hostname_s)\n| project transactionId_g, hostname_s, requestUri_s, TimeGenerated, clientIp_s, Message\n| join kind = inner(\nAzureDiagnostics\n| where Category == \"ApplicationGatewayFirewallLog\"\n| where action_s == \"Blocked\"\n| extend transactionId_g = tostring(parse_json(AdditionalFields).transactionId_g)) on transactionId_g\n| extend Uri = strcat(hostname_s,requestUri_s)\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), TransactionID = make_set(transactionId_g,100), Message = make_set(Message,100), Total_TransactionId = dcount(transactionId_g) by clientIp_s, Uri, action_s\n| where Total_TransactionId >= Threshold\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects when threat was not blocked by CAS solution.\n Topic: Trend Micro Cloud App Security"}, {"role": "assistant", "content": "TrendMicroCAS\n| where isnotempty(SecurityRiskName)\n| where EventOriginalResultDetails !has 'Blocked' or EventOriginalResultDetails !has 'Block' or EventOriginalResultDetails !has 'Quarantine' or TriggeredPolicyName has 'Monitor Only'\n| extend AccountCustomEntity = DstUserName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies when Exchange Online transport rule is configured to forward emails.\nThis could be an adversary mailbox configured to collect mail from multiple user accounts.\n Topic: Global Secure Access"}, {"role": "assistant", "content": "// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where Workload == \"Exchange\"\n    | where Operation in (\"New-TransportRule\", \"Set-TransportRule\")\n    | mv-apply DynamicParameters = todynamic(AdditionalProperties.Parameters) on (\n        summarize ParsedParameters = make_bag(pack(tostring(DynamicParameters.Name), DynamicParameters.Value))\n    )\n    | extend RuleName = case(\n        Operation == \"Set-TransportRule\", ObjectId,\n        Operation == \"New-TransportRule\", ParsedParameters.Name,\n        \"Unknown\"\n    )\n    | mv-expand ExpandedParameters = todynamic(AdditionalProperties.Parameters)\n    | where ExpandedParameters.Name in (\"BlindCopyTo\", \"RedirectMessageTo\") and isnotempty(ExpandedParameters.Value)\n    | extend RedirectTo = ExpandedParameters.Value\n    | extend ClientIPValues = extract_all(@'\\[?(::ffff:)?(?P<IPAddress>(\\d+\\.\\d+\\.\\d+\\.\\d+)|[^\\]]+)\\]?([-:](?P<Port>\\d+))?', dynamic([\"IPAddress\", \"Port\"]), ClientIp)[0]\n    | project TimeGenerated, RedirectTo, IPAddress = tostring(ClientIPValues[0]), Port = tostring(ClientIPValues[1]), UserId, Operation, RuleName, AdditionalProperties\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where OfficeWorkload == \"Exchange\"\n    | where Operation in (\"New-TransportRule\", \"Set-TransportRule\")\n    | mv-apply DynamicParameters = todynamic(Parameters) on (\n        summarize ParsedParameters = make_bag(pack(tostring(DynamicParameters.Name), DynamicParameters.Value))\n    )\n    | extend RuleName = case(\n        Operation == \"Set-TransportRule\", OfficeObjectId,\n        Operation == \"New-TransportRule\", ParsedParameters.Name,\n        \"Unknown\"\n    )\n    | mv-expand ExpandedParameters = todynamic(Parameters)\n    | where ExpandedParameters.Name in (\"BlindCopyTo\", \"RedirectMessageTo\") and isnotempty(ExpandedParameters.Value)\n    | extend RedirectTo = ExpandedParameters.Value\n    | extend ClientIPValues = extract_all(@'\\[?(::ffff:)?(?P<IPAddress>(\\d+\\.\\d+\\.\\d+\\.\\d+)|[^\\]]+)\\]?([-:](?P<Port>\\d+))?', dynamic([\"IPAddress\", \"Port\"]), ClientIP)[0]\n    | project TimeGenerated, RedirectTo, IPAddress = tostring(ClientIPValues[0]), Port = tostring(ClientIPValues[1]), UserId, Operation, RuleName, Parameters\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix, IP_0_Address = IPAddress;\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(TimeGenerated, *) by RuleName, UserId;\n// Final Output\nCombinedEvents\n    | project TimeGenerated, RuleName, RedirectTo, IPAddress, Port, UserId, AccountName, AccountUPNSuffix\n    | order by TimeGenerated desc\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query shows outdated config vesions\n Topic: PaloAltoCDL"}, {"role": "assistant", "content": "let cur_ver = dynamic(['0.1']); //put latest config version here\nPaloAltoCDLEvent\n| where TimeGenerated > ago(24h)\n| where isnotempty(PanOSConfigVersion)\n| where PanOSConfigVersion != cur_ver\n| project SrcIpAddr, PanOSConfigVersion\n| extend IPCustomEntity = SrcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies a match in DnsEvents from any ThreatConnect Domain IOC from TI\n Topic: ThreatConnect"}, {"role": "assistant", "content": "// Define the lookback periods for time-based filters\nlet dt_lookBack = 1h; // Look back 1 hour for DNS events\nlet ioc_lookBack = 7d; // Look back 7 days for threat intelligence indicators\n// Fetch threat intelligence indicators related to domains\nlet Domain_Indicators = ThreatIntelligenceIndicator\n  | where TimeGenerated >= ago(ioc_lookBack)\n  | summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n  | where ExpirationDateTime > now() and Active == true\n  // Filter out non ThreatConnect TI Sources\n  | where SourceSystem startswith \"ThreatConnect-\"\n  // Filter out indicators without domain names\n  | where isnotempty(DomainName)\n  | extend TI_DomainEntity = DomainName;\n// Create a list of TLDs in our threat feed for later validation\nlet maxListSize = 100000; // Define the maximum allowed size for each list\nlet list_tlds = Domain_Indicators\n  | extend parts = split(DomainName, '.')\n  | extend tld = parts[(array_length(parts)-1)]\n  | summarize count() by tostring(tld)\n  | project tld\n  | summarize make_list(tld, maxListSize);\n// Perform a join between domain indicators and DNS events to identify potential malicious activity\nDomain_Indicators\n  // Use innerunique to keep performance fast and result set low, as we only need one match to indicate potential malicious activity that needs investigation\n  | join kind=innerunique (\n    DnsEvents\n    | where TimeGenerated > ago(dt_lookBack)\n    // Extract domain patterns from syslog message\n    | where isnotempty(Name)\n    | extend parts = split(Name, '.')\n    | extend tld = parts[(array_length(parts)-1)]\n    // Validate parsed domain by checking if the TLD is in the list of TLDs in our threat feed\n    | where tld in~ (list_tlds)\n    | extend DNS_TimeGenerated = TimeGenerated\n  ) on $left.TI_DomainEntity==$right.Name\n  // Filter out DNS events that occurred after the expiration of the corresponding indicator\n  | where DNS_TimeGenerated < ExpirationDateTime\n  // Group the results by IndicatorId and Name, and keep the DNS event with the latest timestamp\n  | summarize DNS_TimeGenerated = arg_max(DNS_TimeGenerated, *) by IndicatorId, Name\n  // Select the desired output fields\n  | project DNS_TimeGenerated, Description, ActivityGroupNames, IndicatorId, ThreatType, ExpirationDateTime, ConfidenceScore, Url, Computer, ClientIP, Name, QueryType, Type, TI_DomainEntity\n  // Extract hostname and DNS domain from the Computer field\n  | extend HostName = tostring(split(Computer, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(Computer, '.'), 1, -1), '.'))\n  // Rename the timestamp field\n  | extend timestamp = DNS_TimeGenerated\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Results found relating to IP, domain or host\n Topic: Flare"}, {"role": "assistant", "content": "Firework_CL\n| where source_s contains \"driller_shodan\" and (risk_score_d == \"3\" or risk_score_d == \"4\" or risk_score_d == \"5\")\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects when critical severity event was not blocked.\n Topic: ImpervaCloudWAF"}, {"role": "assistant", "content": "ImpervaWAFCloud\n| where EventSeverity =~ 'CRITICAL'\n| where DvcAction !startswith 'REQ_BLOCKED' or DvcAction !startswith 'REQ_BAD_'\n| extend IPCustomEntity = SrcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for deleted users.\n Topic: CiscoDuoSecurity"}, {"role": "assistant", "content": "CiscoDuo\n| where TimeGenerated > ago(24h)\n| where DvcAction =~ \"user_delete\"\n| project TimeGenerated, SrcIpAddr, SrcUserName, DstUserName\n| extend AccountCustomEntity = SrcUserName, IPCustomEntity = SrcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query finds matches in OfficeActivity Event data for known FileName Indicators of Compromise from Threat Intelligence sources. FileName matches may produce false positives, so use this for hunting rather than real-time detection.\n Topic: Threat Intelligence"}, {"role": "assistant", "content": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet ioc_lookBack = 14d;\nThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| where Active == true\n| where isnotempty(FileName)\n// using innerunique to keep perf fast and result set low, we only need one match to indicate potential malicious activity that needs to be investigated\n| join kind=innerunique (\n  OfficeActivity\n  | where TimeGenerated between(starttime..endtime)\n  | where isnotempty(SourceFileName)\n  | extend OfficeActivity_TimeGenerated = TimeGenerated\n)\non $left.FileName == $right.SourceFileName\n| where OfficeActivity_TimeGenerated < ExpirationDateTime\n| summarize OfficeActivity_TimeGenerated = arg_max(OfficeActivity_TimeGenerated, *) by IndicatorId, SourceFileName\n| project OfficeActivity_TimeGenerated, Description, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore, FileName, UserId, ClientIP, OfficeObjectId\n| extend timestamp = OfficeActivity_TimeGenerated, Name = tostring(split(UserId, '@', 0)[0]), UPNSuffix = tostring(split(UserId, '@', 1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = ClientIP\n| extend URL_0_Url = Url\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query correlates users with entity anomalies, security alerts, and delete/remove actions for identification of possible sabotage activities (watchlists configurable). For more information, see https://docs.microsoft.com/azure/sentinel/watchlists\n Topic: MicrosoftPurviewInsiderRiskManagement"}, {"role": "assistant", "content": "let RemoveActions = AzureActivity\n| where OperationName contains \"delete\" or OperationName contains \"remove\"\n| extend UserPrincipalName = Caller\n| project UserPrincipalName, OperationName, Category, Resource, ResourceId, ActivityStatus, TimeGenerated;\nlet InsiderRiskManagementAlerts = SecurityAlert\n| summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\n| mv-expand todynamic(Entities)\n| where Entities[\"Type\"] =~ \"account\"\n| extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \n          Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\n| extend UserPrincipalName = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\n| where UserPrincipalName <> \"\"\n| summarize PreviousSecurityAlertLinks=make_set(AlertLink) by UserPrincipalName, AlertLink, AlertName;\nBehaviorAnalytics\n| where UserPrincipalName <> \"\"\n| where ActivityInsights contains \"True\"\n| extend EntityAnomalies = strcat(ActivityInsights)\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserPrincipalName, EntityAnomalies\n| join kind=innerunique (InsiderRiskManagementAlerts) on UserPrincipalName\n| join kind=innerunique (RemoveActions) on UserPrincipalName\n| project UserPrincipalName, EntityAnomalies, AlertName, AlertLink, PreviousSecurityAlertLinks, OperationName, Category, Resource, ResourceId, ActivityStatus, TimeGenerated\n//| lookup kind=inner _GetWatchlist('<Your Watchlist Name>') on $left.UserPrincipalName == $right.SearchKey\n| sort by TimeGenerated desc\n| limit 50\n| extend AccountCustomEntity = UserPrincipalName\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects request to potentially harmful file types (.ps1, .bat, .vbs, etc.).\n Topic: CiscoUmbrella"}, {"role": "assistant", "content": "let file_ext_blocklist = dynamic(['.ps1', '.vbs', '.bat', '.scr']);\nCisco_Umbrella\n| where EventType == 'proxylogs'\n| where DvcAction =~ 'Allowed'\n| extend file_ext = extract(@'.*(\\.\\w+)$', 1, UrlOriginal)\n| extend Filename = extract(@'.*\\/*\\/(.*\\.\\w+)$', 1, UrlOriginal)\n| where file_ext in (file_ext_blocklist)\n| project TimeGenerated, SrcIpAddr, DstIpAddr, Identities, Filename, UrlOriginal \n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects possible data exfiltration.\n Topic: GoogleCloudPlatformDNS"}, {"role": "assistant", "content": "GCPCloudDNS\n| where Query has 'webhook.site'\n| extend DNSCustomEntity = Query, IPCustomEntity = SrcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query looks for Microsoft Defender AV detections related to the SpringShell vulnerability. In Microsoft Sentinel, the SecurityAlerts table includes only the Device Name of the affected device.\n  This query joins the DeviceInfo table to clearly connect other information such as device group, IP, logged-on users, etc. This would allow the Microsoft Sentinel analyst to have more context related to the alert, if available.\n  Reference: https://www.microsoft.com/security/blog/2022/04/04/springshell-rce-vulnerability-guidance-for-protecting-against-and-detecting-cve-2022-22965/\n Topic: Microsoft Defender XDR"}, {"role": "assistant", "content": "let SpringShell_threats = dynamic([\"Trojan:Python/SpringShellExpl\", \"Exploit:Python/SpringShell\", \"Backdoor:PHP/Remoteshell.V\", \"SpringShell\"]);\nDeviceInfo\n| extend DeviceName = tolower(DeviceName)\n| join kind=inner ( SecurityAlert\n| where ProviderName =~ \"MDATP\"\n| extend ThreatName = tostring(parse_json(ExtendedProperties).ThreatName)\n| extend ThreatFamilyName = tostring(parse_json(ExtendedProperties).ThreatFamilyName)\n| where ThreatName in~ (SpringShell_threats) or ThreatFamilyName in~ (SpringShell_threats)\n| extend CompromisedEntity = tolower(CompromisedEntity)\n) on $left.DeviceName == $right.CompromisedEntity\n| summarize by DisplayName, ThreatName, ThreatFamilyName, PublicIP, AlertSeverity, Description, tostring(LoggedOnUsers), DeviceId, TenantId , bin(TimeGenerated, 1d), CompromisedEntity, tostring(LoggedOnUsers), ProductName, Entities\n| extend HostName = tostring(split(CompromisedEntity, \".\")[0]), DomainIndex = toint(indexof(CompromisedEntity, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(CompromisedEntity, DomainIndex + 1), CompromisedEntity)\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies SolarWinds SUNBURST domain beacon IOCs in DeviceNetworkEvents\nReferences:\n- https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\n- https://gist.github.com/olafhartong/71ffdd4cab4b6acd5cbcd1a0691ff82f\n Topic: Microsoft Defender XDR"}, {"role": "assistant", "content": "let SunburstURL=dynamic([\"panhardware.com\",\"databasegalore.com\",\"avsvmcloud.com\",\"freescanonline.com\",\"thedoccloud.com\",\"deftsecurity.com\"]);\nDeviceNetworkEvents\n| where ActionType == \"ConnectionSuccess\"\n| where RemoteUrl in(SunburstURL)\n| extend HashAlgorithm = 'MD5'\n| extend HostName = tostring(split(DeviceName, \".\")[0]), DomainIndex = toint(indexof(DeviceName, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(DeviceName, DomainIndex + 1), DeviceName)\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This Analytics rule receives VMware CWS DLP alerts and combines them with their respective Web Log events. Each Data Loss Prevention event is an alert of policy violations and should be investigated. Topic: VMware SD-WAN and SASE"}, {"role": "assistant", "content": "VMware_CWS_DLPLogs_CL\n| join kind=innerunique VMware_CWS_Weblogs_CL on TimeGenerated"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects put or get files from one source in short timeframe \n Topic: NGINX HTTP Server"}, {"role": "assistant", "content": "let p = NGINXHTTPServer\n| where HttpRequestMethod in~ ('POST', 'PUT')\n| sort by EventStartTime asc\n| summarize post_time=min(EventStartTime) by SrcIpAddr, tostring(UrlOriginal);\nNGINXHTTPServer\n| where HttpRequestMethod =~ 'GET'\n| sort by EventStartTime asc\n| summarize get_time=min(EventStartTime) by SrcIpAddr, tostring(UrlOriginal)\n| join kind=innerunique (p) on UrlOriginal, SrcIpAddr\n| extend second = datetime_diff('second',get_time,post_time)\n| where second between (1 .. 300)\n| project second, post_time, get_time, SrcIpAddr, UrlOriginal\n| extend IPCustomEntity = SrcIpAddr, UrlCustomEntity = tostring(UrlOriginal)\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query searches for potentially risky resources.\n Topic: CiscoWSA"}, {"role": "assistant", "content": "CiscoWSAEvent\n| where TimeGenerated > ago(24h)\n| where DvcAction =~ 'BLOCK_CONTINUE_WEBCAT'\n| project UrlOriginal, SrcUserName, SrcIpAddr\n| extend URLCustomEntity = UrlOriginal, AccountCustomEntity = SrcUserName, IPCustomEntity = SrcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This query searches for guest is not an admin in Azure\n Topic: SenservaPro"}, {"role": "assistant", "content": "SenservaPro_CL\n| where ControlName_s == 'UserNonAdminGuest'\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects post requests to unusual extensions.\n Topic: Cloudflare"}, {"role": "assistant", "content": "Cloudflare\n| where HttpRequestMethod in~ ('POST', 'PUT')\n| where tostring(HttpStatusCode) startswith '2'\n| where DstBytes != 0 or SrcBytes != 0\n| extend fe = extract(@'.*(\\.\\w+)$', 1, ClientRequestURI)\n| where fe in~ ('.jpg', '.jpeg', '.gif', '.png', '.icon', '.ico', '.xml', '.swf', '.svg', '.ppt', '.pttx', '.doc', '.docx', '.rtf', '.pdf', '.tif', '.zip', '.mov')\n| extend IPCustomEntity = SrcIpAddr\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query shows URLs list with client errors.\n Topic: ApacheHTTPServer"}, {"role": "assistant", "content": "ApacheHTTPServer\n| where TimeGenerated > ago(24h)\n| where HttpStatusCode >= 400 and HttpStatusCode <= 499\n| summarize TopUrls = count() by (tostring(UrlOriginal))\n| top 20 by TopUrls desc\n| extend UrlCustomEntity = UrlOriginal\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Searches for triggered Indicators of Attack\n Topic: Alsid For AD"}, {"role": "assistant", "content": "let SeverityTable=datatable(Severity:string,Level:int) [\n\"low\", 1,\n\"medium\", 2,\n\"high\", 3,\n\"critical\", 4\n];\nafad_parser\n| where MessageType == 2\n| lookup kind=leftouter SeverityTable on Severity\n| order by Level\n| extend HostName = tostring(split(Host, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(Host, '.'), 1, -1), '.'))\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies SolarWinds SUNBURST and SUPERNOVA backdoor file hash IOCs in File Events\nTo use this analytics rule, make sure you have deployed the [ASIM normalization parsers](https://aka.ms/ASimFileEvent)\nReferences:\n- https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\n- https://gist.github.com/olafhartong/71ffdd4cab4b6acd5cbcd1a0691ff82f\n Topic: Detections"}, {"role": "assistant", "content": "let SunburstMD5=dynamic([\"b91ce2fa41029f6955bff20079468448\",\"02af7cec58b9a5da1c542b5a32151ba1\",\"2c4a910a1299cdae2a4e55988a2f102e\",\"846e27a652a5e1bfbd0ddd38a16dc865\",\"4f2eb62fa529c0283b28d05ddd311fae\"]);\nlet SupernovaMD5=\"56ceb6d0011d87b6e4d7023d7ef85676\";\nimFileEvent\n| where TargetFileMD5 in (SunburstMD5) or TargetFileMD5 in (SupernovaMD5)\n| extend AccountName = tostring(split(User, @'\\')[1]), AccountNTDomain = tostring(split(User, @'\\')[0])\n| extend AlgorithmType = \"MD5\"\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects new site admin user.\n Topic: AtlassianJiraAudit"}, {"role": "assistant", "content": "let priv_users = JiraAudit\n| where TimeGenerated > ago(14d)\n| where EventMessage =~ 'User added to group'\n| where ObjectItemName =~ 'site-admins'\n| extend user = todynamic(AssociatedItems)[0]['name']\n| summarize makeset(user);\nJiraAudit\n| where EventMessage =~ \"User's password changed\"\n| extend user = todynamic(AssociatedItems)[0]['name']\n| where user in (priv_users)\n| extend AccountCustomEntity = user\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "High severity vault alerts found by Prancer.\n Topic: Prancer PenSuiteAI Integration"}, {"role": "assistant", "content": "union prancer_CL\n| where deviceProduct_s == 'azure'\n| where parse_json(data_data_snapshots_s)[0].type == 'Microsoft.KeyVault/vaults'\n| where data_data_severity_s == 'High' and data_data_result_s == 'failed'\n| extend snapshot = parse_json(data_data_snapshots_s)\n| mv-expand snapshot \n| extend\n    id = tostring(snapshot.id),\n    structure = tostring(snapshot.structure),\n    reference = tostring(snapshot.reference),\n    source = tostring(snapshot.source),\n    collection = tostring(snapshot.collection),\n    type = tostring(snapshot.type),\n    region = tostring(snapshot.region),\n    resourceTypes = tostring(snapshot.resourceTypes),\n    path = tostring(snapshot.path)\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Query shows rare user agent strings with client errors\n Topic: Tomcat"}, {"role": "assistant", "content": "TomcatEvent\n| where TimeGenerated > ago(24h)\n| where isnotempty(HttpUserAgentOriginal)\n| where HttpStatusCode >= 400 and HttpStatusCode <= 499\n| summarize UAs = count() by (tostring(HttpUserAgentOriginal))\n| top 20 by UAs asc\n| extend UrlCustomEntity = HttpUserAgentOriginal\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Alerts when there are failed logons in the DSP system.\n Topic: Semperis Directory Services Protector"}, {"role": "assistant", "content": "SecurityEvent\n| where EventSourceName == 'Semperis-Operation-Log' and EventID == 20002\n| sort by TimeGenerated desc \n| extend p1Xml = parse_xml(EventData).EventData.Data\n| mv-expand bagexpansion=array p1Xml\n| evaluate bag_unpack(p1Xml)\n| extend Name=column_ifexists('@Name', ''), Value=column_ifexists('#text', '')\n| evaluate pivot(Name, any(Value), TimeGenerated, EventSourceName, Channel, Computer, Level, EventLevelName, EventID, Task, Type, _ResourceId)\n| extend det = column_ifexists('details', '')\n| parse det with * \"Trustee Name: \" TrusteeName \" Correlation ID: \" * \" Source: \" HostIP \"WebSite Target\" *\n| extend host = tostring(HostIP)\n| extend HostIP = trim_end(\":\", HostIP)\n| project TimeGenerated, TrusteeName, HostIP, _ResourceId\n| extend NTDomain = tostring(split(TrusteeName, '\\\\', 0)[0]), Name = tostring(split(TrusteeName, '\\\\', 1)[0]) \n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies when Exchange Online transport rule configured to forward emails.\nThis could be an adversary mailbox configured to collect mail from multiple user accounts.\n Topic: SecurityThreatEssentialSolution"}, {"role": "assistant", "content": "OfficeActivity\n| where OfficeWorkload == \"Exchange\"\n| where Operation in~ (\"New-TransportRule\", \"Set-TransportRule\")\n| extend p = parse_json(Parameters)\n| extend RuleName = case(\n  Operation =~ \"Set-TransportRule\", tostring(OfficeObjectId),\n  Operation =~ \"New-TransportRule\", tostring(p[1].Value),\n  \"Unknown\"\n  )\n| mvexpand p\n| where (p.Name =~ \"BlindCopyTo\" or p.Name =~ \"RedirectMessageTo\") and isnotempty(p.Value)\n| extend RedirectTo = p.Value\n| extend ClientIPOnly = case(\n  ClientIP has \".\" and ClientIP has \":\", tostring(split(ClientIP,\":\")[0]),\n  ClientIP has \".\" and ClientIP has \"-\", tostring(split(ClientIP,\"-\")[0]),\n  ClientIP has \"[\", tostring(trim_start(@'[[]',tostring(split(ClientIP,\"]\")[0]))),\n  ClientIP\n  )\n| extend Port = case(\n  ClientIP has \".\" and ClientIP has \":\", (split(ClientIP,\":\")[1]),\n  ClientIP has \".\" and ClientIP has \"-\", (split(ClientIP,\"-\")[1]),\n  ClientIP has \"[\" and ClientIP has \":\", tostring(split(ClientIP,\"]:\")[1]),\n  ClientIP has \"[\" and ClientIP has \"-\", tostring(split(ClientIP,\"]-\")[1]),\n  ClientIP\n  )\n| extend ClientIP = ClientIPOnly\n| project TimeGenerated, RedirectTo, ClientIP, Port, UserId, Operation, RuleName\n| extend Name=split(UserId, \"@\")[0], UPNSuffix=split(UserId, \"@\")[1]\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Malware or data exfiltration can cause network data volume anomalies. This query detects such anomalies in volume of bytes traversing a squid proxy. Anomalies require further investigation. Assumes default squid log format.\n Topic: Syslog"}, {"role": "assistant", "content": "\nlet starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet timeframe = 1h;\nlet TimeSeriesData =\nSyslog\n| where TimeGenerated between(starttime..endtime)\n| where ProcessName contains \"squid\"\n| extend URL = extract(\"(([A-Z]+ [a-z]{4,5}:\\\\/\\\\/)|[A-Z]+ )([^ :]*)\",3,SyslogMessage),\n         SourceIP = extract(\"([0-9]+ )(([0-9]{1,3})\\\\.([0-9]{1,3})\\\\.([0-9]{1,3})\\\\.([0-9]{1,3}))\",2,SyslogMessage),\n         Status = extract(\"(TCP_(([A-Z]+)(_[A-Z]+)*)|UDP_(([A-Z]+)(_[A-Z]+)*))\",1,SyslogMessage),\n         HTTP_Status_Code = extract(\"(TCP_(([A-Z]+)(_[A-Z]+)*)|UDP_(([A-Z]+)(_[A-Z]+)*))/([0-9]{3})\",8,SyslogMessage),\n         User = extract(\"(CONNECT |GET )([^ ]* )([^ ]+)\",3,SyslogMessage),\n         RemotePort = extract(\"(CONNECT |GET )([^ ]*)(:)([0-9]*)\",4,SyslogMessage),\n         Domain = extract(\"(([A-Z]+ [a-z]{4,5}:\\\\/\\\\/)|[A-Z]+ )([^ :\\\\/]*)\",3,SyslogMessage),\n         Bytes = toint(extract(\"([A-Z]+\\\\/[0-9]{3} )([0-9]+)\",2,SyslogMessage)),\n         contentType = extract(\"([a-z/]+$)\",1,SyslogMessage)\n| extend TLD = extract(\"\\\\.[a-z]*$\",0,Domain)\n| where isnotempty(Bytes)\n| make-series TotalBytesSent=sum(Bytes) on TimeGenerated from startofday(starttime) to startofday(endtime) step timeframe by ProcessName;\nTimeSeriesData\n| extend (anomalies, score, baseline) = series_decompose_anomalies(TotalBytesSent,3, -1, 'linefit')\n| extend timestamp = TimeGenerated\n| render timechart with (title=\"Squid Time Series anomalies\")\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This hunting query identifies GitHub OAuth Apps that have restrictions disabled that may be a sign of compromise. Attacker will want to disable such security tools in order to go undetected. \n Topic: GitHub"}, {"role": "assistant", "content": "\nGitHubAuditData\n| where Action == \"org.disable_oauth_app_restrictions\"\n| project TimeGenerated, Action, Actor, Country\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This rule detects abnormal number of 403 errors from clients. HTTP 403 is returned when the client is not permitted access to the resource despite providing authentication in case such as when authenticated account not having sufficient permissions\n Topic: Web Session Essentials"}, {"role": "assistant", "content": "// Please refer this for more details: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\nlet threshold=100; // Update threshold as per your environment\nlet lookBack = 1d;\nlet ErrorCode=dynamic([403]);\n_Im_WebSession(starttime=ago(lookBack))\n| where EventResultDetails in~ (ErrorCode)\n| summarize ErrorCount = count(), EventStartTime= min(TimeGenerated), EventEndTime=max(TimeGenerated), Urls=make_set(Url,100) by SrcIpAddr, SrcUsername, SrcHostname, DstIpAddr\n| where ErrorCount > threshold\n| extend Name = iif(SrcUsername contains \"@\", tostring(split(SrcUsername,'@',0)[0]),SrcUsername), UPNSuffix = iif(SrcUsername contains \"@\",tostring(split(SrcUsername,'@',1)[0]),\"\")\n| order by ErrorCount desc\n| extend IP_0_Address = SrcIpAddr\n| extend IP_1_Address = DstIpAddr\n| extend Host_0_HostName = SrcHostname\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detected at least 200 DNS responses for non-existent domains in 1 hour generated by single host. Queries do not need to be the same. Customize query count, scheduling, responses and more. This rule depends on a parser based on a Kusto Function to work as expected called [**InfobloxCDC**](https://aka.ms/sentinel-InfobloxCloudDataConnector-parser).\n Topic: Infoblox Cloud Data Connector"}, {"role": "assistant", "content": "let threshold = 200;\nInfobloxCDC\n| where DeviceEventClassID == \"DNS Response\"\n| where InfobloxDNSRCode == \"NXDOMAIN\"\n| summarize count() by SourceIP\n| where count_ > threshold\n| join kind=inner (InfobloxCDC\n  | where DeviceEventClassID == \"DNS Response\"\n  | where InfobloxDNSRCode == \"NXDOMAIN\"\n  ) on SourceIP\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Searches for triggered Indicators of Exposures related to Active Directory attacks pathways\n Topic: Alsid For AD"}, {"role": "assistant", "content": "let SeverityTable=datatable(Severity:string,Level:int) [\n\"low\", 1,\n\"medium\", 2,\n\"high\", 3,\n\"critical\", 4\n];\nlet codeNameList = datatable(Codename:string)[\"C-PRIV-ACCOUNTS-SPN\", \"C-SDPROP-CONSISTENCY\", \"C-DANG-PRIMGROUPID\", \"C-GPO-HARDENING\", \"C-DC-ACCESS-CONSISTENCY\", \"C-DANGEROUS-TRUST-RELATIONSHIP\", \"C-UNCONST-DELEG\", \"C-ABNORMAL-ENTRIES-IN-SCHEMA\"];\nafad_parser\n| where MessageType == 0 and Codename in~ (codeNameList)\n| lookup kind=leftouter SeverityTable on Severity\n| order by Level\n| extend HostName = tostring(split(Host, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(Host, '.'), 1, -1), '.'))\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies a list of IP addresses with a minimum number (defualt of 5) of failed logon attempts to Microsoft Entra ID.\nUses that list to identify any successful AWS Console logons from these IPs within the same timeframe.\n Topic: Detections"}, {"role": "assistant", "content": "//Adjust this threshold to fit your environment\nlet signin_threshold = 5;\n//Make a list of IPs with AAD signin failures above our threshold\nlet aadFunc = (tableName:string){\nlet Suspicious_signins =\ntable(tableName)\n| where ResultType !in (\"0\", \"50125\", \"50140\")\n| where IPAddress !in (\"127.0.0.1\", \"::1\")\n| summarize count() by IPAddress\n| where count_ >  signin_threshold\n| summarize make_set(IPAddress);\nSuspicious_signins\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nlet Suspicious_signins =\nunion isfuzzy=true aadSignin, aadNonInt\n| summarize make_set(set_IPAddress);\n//See if any of those IPs have sucessfully logged into the AWS console\nAWSCloudTrail\n| where EventName =~ \"ConsoleLogin\"\n| extend LoginResult = tostring(parse_json(ResponseElements).ConsoleLogin)\n| where LoginResult =~ \"Success\"\n| where SourceIpAddress in (Suspicious_signins)\n| extend Reason = \"Multiple failed AAD logins from IP address\"\n| extend MFAUsed = tostring(parse_json(AdditionalEventData).MFAUsed)\n| extend UserIdentityArn = iif(isempty(UserIdentityArn), tostring(parse_json(Resources)[0].ARN), UserIdentityArn)\n| extend UserName = tostring(split(UserIdentityArn, '/')[-1])\n| extend AccountName = case( UserIdentityPrincipalid == \"Anonymous\", \"Anonymous\", isempty(UserIdentityUserName), UserName, UserIdentityUserName)\n| extend AccountName = iif(AccountName contains \"@\", tostring(split(AccountName, '@', 0)[0]), AccountName),\n  AccountUPNSuffix = iif(AccountName contains \"@\", tostring(split(AccountName, '@', 1)[0]), \"\")\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by Reason, LoginResult, EventTypeName, UserIdentityType, RecipientAccountId, AccountName, AccountUPNSuffix, AWSRegion, SourceIpAddress, UserAgent, MFAUsed\n| extend timestamp = StartTime\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Identifies new or previously unseen activity types associated with Dataverse application (non-interactive) user. Topic: Microsoft Business Applications"}, {"role": "assistant", "content": "let query_frequency = 1h;\nlet query_lookback = 14d;\nlet app_user_regex = \"^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}\\\\.com$\";\nlet guid_regex = \"([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})\";\nlet application_users = DataverseActivity\n    | where UserId !endswith \"@onmicrosoft.com\" and UserId != \"Unknown\"\n    | summarize by UserId\n    | where split(UserId, \"@\")[1] matches regex app_user_regex;\nlet historical_app_activity = application_users\n    | join kind = inner (\n        DataverseActivity\n        | where TimeGenerated between(ago(query_lookback) .. ago(query_frequency))\n        | summarize by UserId, EntityName, Message, InstanceUrl)\n        on\n        UserId;\nlet current_activity = application_users\n    | join kind= inner (\n        DataverseActivity\n        | where TimeGenerated >= ago(query_frequency)\n        | summarize by UserId, EntityName, Message, InstanceUrl)\n        on\n        UserId;\ncurrent_activity\n| join kind = leftanti (historical_app_activity) on UserId, Message, EntityName, InstanceUrl\n| summarize NewActivities = make_set(strcat(Message, \" \", EntityName), 1000) by UserId, InstanceUrl\n| extend\n    AadUserId = extract(guid_regex, 1, tostring(split(UserId, \"@\")[0])),\n    CloudAppId = int(32780)\n| project\n    UserId,\n    NewActivities,\n    InstanceUrl,\n    AadUserId,\n    CloudAppId\n"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects potential DLL sideloading of \"edputil.dll\" Topic: image_load_side_load_edputil"}, {"role": "assistant", "content": "DeviceImageLoadEvents\n| where FolderPath endswith \"\\\\edputil.dll\" and (not((FolderPath startswith \"C:\\\\Windows\\\\System32\\\\\" or FolderPath startswith \"C:\\\\Windows\\\\SysWOW64\\\\\" or FolderPath startswith \"C\\\\Windows\\\\WinSxS\\\\\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects potential commandline obfuscation using known escape characters Topic: proc_creation_win_susp_cli_obfuscation_escape_char"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine in~ (\"h^t^t^p\", \"h\\\"t\\\"t\\\"p\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the creation of \"ebpfbackdoor\" files in both \"cron.d\" and \"sudoers.d\" directories. Which both are related to the TripleCross persistence method Topic: file_event_lnx_triple_cross_rootkit_persistence"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName =~ \"ebpfbackdoor\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the creation of the LiveKD driver by a process image other than \"livekd.exe\". Topic: file_event_win_sysinternals_livekd_driver_susp_creation"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName =~ \"C:\\\\Windows\\\\System32\\\\drivers\\\\LiveKdD.SYS\" and (not((InitiatingProcessFolderPath in~ (\"\\\\livekd.exe\", \"\\\\livek64.exe\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects calls of DLLs exports by ordinal numbers via rundll32.dll. Topic: proc_creation_win_rundll32_by_ordinal"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((ProcessCommandLine in~ (\",#\", \", #\", \".dll #\", \".ocx #\")) and (FolderPath endswith \"\\\\rundll32.exe\" or ProcessVersionInfoOriginalFileName =~ \"RUNDLL32.EXE\")) and (not(((ProcessCommandLine in~ (\"EDGEHTML.dll\", \"#141\")) or ((InitiatingProcessFileName in~ (\"\\\\Msbuild\\\\Current\\\\Bin\\\\\", \"\\\\VC\\\\Tools\\\\MSVC\\\\\", \"\\\\Tracker.exe\")) and (ProcessCommandLine in~ (\"\\\\FileTracker32.dll,#1\", \"\\\\FileTracker32.dll\\\",#1\", \"\\\\FileTracker64.dll,#1\", \"\\\\FileTracker64.dll\\\",#1\"))))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects usage of \"IMEWDBLD.exe\" to download arbitrary files Topic: proc_creation_win_imewbdld_download"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"http://\", \"https://\")) and (FolderPath endswith \"\\\\IMEWDBLD.exe\" or ProcessVersionInfoOriginalFileName =~ \"imewdbld.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion.\n Topic: proc_creation_win_calc_uncommon_exec"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \"\\\\calc.exe \" or (InitiatingProcessFolderPath =~ \"\\\\calc.exe\" and (not((FolderPath contains \":\\\\Windows\\\\System32\\\\\" or FolderPath contains \":\\\\Windows\\\\SysWOW64\\\\\" or FolderPath contains \":\\\\Windows\\\\WinSxS\\\\\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line Topic: proc_creation_win_powershell_susp_ps_downloadfile"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine in~ (\"powershell\", \".DownloadFile\", \"System.Net.WebClient\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects usage of the \"usermod\" binary to add users add users to the root or suoders groups Topic: proc_creation_lnx_usermod_susp_group"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"-aG root\", \"-aG sudoers\")) and InitiatingProcessFolderPath =~ \"/usermod\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects attackers attempting to disable Windows Defender using Powershell Topic: proc_creation_win_powershell_disable_defender_av_security_monitoring"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (((FolderPath endswith \"\\\\powershell.exe\" or FolderPath endswith \"\\\\pwsh.exe\") or (ProcessVersionInfoOriginalFileName in~ (\"PowerShell.EXE\", \"pwsh.dll\"))) and (ProcessCommandLine in~ (\"-DisableBehaviorMonitoring $true\", \"-DisableRuntimeMonitoring $true\"))) or ((FolderPath endswith \"\\\\sc.exe\" or ProcessVersionInfoOriginalFileName =~ \"sc.exe\") and ((ProcessCommandLine in~ (\"delete\", \"WinDefend\")) or (ProcessCommandLine in~ (\"config\", \"WinDefend\", \"start=disabled\")) or (ProcessCommandLine in~ (\"stop\", \"WinDefend\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects specific command line execution used by FIN7 as reported by WithSecureLabs for reconnaissance and POWERTRASH execution Topic: proc_creation_win_apt_fin7_powertrash_lateral_movement"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"-noni -nop -exe bypass -f \\\\\\\\\", \"ADMIN$\")) or (ProcessCommandLine in~ (\"-ex bypass -noprof -nolog -nonint -f\", \"C:\\\\Windows\\\\Temp\\\\\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects sideloading of trojanized DLLs used in Lazarus APT campaign in the case of a Spanish aerospace company Topic: image_load_apt_lazarus_side_load_activity"}, {"role": "assistant", "content": "DeviceImageLoadEvents\n| where (InitiatingProcessFolderPath =~ \"C:\\\\ProgramShared\\\\PresentationHost.exe\" and FolderPath =~ \":\\\\ProgramShared\\\\mscoree.dll\") or (InitiatingProcessFolderPath =~ \"C:\\\\ProgramData\\\\Adobe\\\\colorcpl.exe\" and FolderPath =~ \"C:\\\\ProgramData\\\\Adobe\\\\colorui.dll\") or (InitiatingProcessFolderPath =~ \"C:\\\\ProgramData\\\\Oracle\\\\Java\\\\fixmapi.exe\" and FolderPath =~ \"C:\\\\ProgramData\\\\Oracle\\\\Java\\\\mapistub.dll\") or (InitiatingProcessFolderPath =~ \"C:\\\\ProgramData\\\\Adobe\\\\ARM\\\\tabcal.exe\" and FolderPath =~ \"C:\\\\ProgramData\\\\Adobe\\\\ARM\\\\HID.dll\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "This detection uses Windows security events to detect suspicious access attempts to the registry key of Azure AD Health monitoring agent.\nThis detection requires an access control entry (ACE) on the system access control list (SACL) of the following securable object HKLM\\SOFTWARE\\Microsoft\\Microsoft Online\\Reporting\\MonitoringAgent.\n Topic: win_security_aadhealth_mon_agent_regkey_access"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where RegistryKey =~ \"\\\\REGISTRY\\\\MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Microsoft Online\\\\Reporting\\\\MonitoringAgent\" and (not((InitiatingProcessFolderPath contains \"Microsoft.Identity.Health.Adfs.DiagnosticsAgent.exe\" or InitiatingProcessFolderPath contains \"Microsoft.Identity.Health.Adfs.InsightsService.exe\" or InitiatingProcessFolderPath contains \"Microsoft.Identity.Health.Adfs.MonitoringAgent.Startup.exe\" or InitiatingProcessFolderPath contains \"Microsoft.Identity.Health.Adfs.PshSurrogate.exe\" or InitiatingProcessFolderPath contains \"Microsoft.Identity.Health.Common.Clients.ResourceMonitor.exe\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the creation of files with an \"LNK\" as a second extension. This is sometimes used by malware as a method to abuse the fact that Windows hides the \"LNK\" extension by default.\n Topic: file_event_win_susp_lnk_double_extension"}, {"role": "assistant", "content": "DeviceFileEvents\n| where (FileName in~ (\".doc.\", \".docx.\", \".jpg.\", \".pdf.\", \".ppt.\", \".pptx.\", \".xls.\", \".xlsx.\")) and (not(FileName =~ \"\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Recent\\\\\")) and (not(((FileName =~ \"\\\\AppData\\\\Roaming\\\\Microsoft\\\\Excel\" and InitiatingProcessFolderPath =~ \"\\\\excel.exe\") or (FileName =~ \"\\\\AppData\\\\Roaming\\\\Microsoft\\\\PowerPoint\" and InitiatingProcessFolderPath =~ \"\\\\powerpnt.exe\") or (FileName =~ \"\\\\AppData\\\\Roaming\\\\Microsoft\\\\Office\\\\Recent\\\\\" and (InitiatingProcessFolderPath in~ (\"\\\\excel.exe\", \"\\\\powerpnt.exe\", \"\\\\winword.exe\"))) or (FileName =~ \"\\\\AppData\\\\Roaming\\\\Microsoft\\\\Word\" and InitiatingProcessFolderPath =~ \"\\\\winword.exe\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects usage of the \"FromBase64String\" function in the commandline which is used to decode a base64 encoded string Topic: proc_creation_win_powershell_frombase64string"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \"::FromBase64String(\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32) Topic: registry_set_uac_bypass_wmp"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where RegistryKey endswith \"\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\AppCompatFlags\\\\Compatibility Assistant\\\\Store\\\\C:\\\\Program Files\\\\Windows Media Player\\\\osk.exe\" and RegistryValueData =~ \"Binary Data\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects suspicious encoded character syntax often used for defense evasion Topic: proc_creation_win_powershell_obfuscation_via_utf8"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \"(WCHAR)0x\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects command line patterns used by BlackByte ransomware in different operations Topic: proc_creation_win_malware_blackbyte_ransomware"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine =~ \" -single \" and InitiatingProcessFolderPath =~ \"C:\\\\Users\\\\Public\\\\\") or (ProcessCommandLine in~ (\"del C:\\\\Windows\\\\System32\\\\Taskmgr.exe\", \";Set-Service -StartupType Disabled $\", \"powershell -command \\\"$x =[System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String(\", \" do start wordpad.exe /p \"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects changes to the registry key \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\Userlist\" where the value is set to \"0\" in order to hide user account from being listed on the logon screen.\n Topic: proc_creation_win_registry_special_accounts_hide_user"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\SpecialAccounts\\\\UserList\", \"add\", \"/v\", \"/d 0\")) and InitiatingProcessFolderPath =~ \"\\\\reg.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects an executable initiating a network connection to \"LocaltoNet\" tunneling sub-domains.\nLocaltoNet is a reverse proxy that enables localhost services to be exposed to the Internet.\nAttackers have been seen to use this service for command-and-control activities to bypass MFA and perimeter controls.\n Topic: net_connection_lnx_domain_localtonet_tunnel"}, {"role": "assistant", "content": "DeviceNetworkEvents\n| where InitiatingProcessId =~ \"true\" and (RemoteUrl in~ (\".localto.net\", \".localtonet.com\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects potentially suspicious child processes of WinRAR.exe. Topic: proc_creation_win_winrar_susp_child_process"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((FolderPath endswith \"\\\\cmd.exe\" or FolderPath endswith \"\\\\cscript.exe\" or FolderPath endswith \"\\\\mshta.exe\" or FolderPath endswith \"\\\\powershell.exe\" or FolderPath endswith \"\\\\pwsh.exe\" or FolderPath endswith \"\\\\regsvr32.exe\" or FolderPath endswith \"\\\\rundll32.exe\" or FolderPath endswith \"\\\\wscript.exe\") or (ProcessVersionInfoOriginalFileName in~ (\"Cmd.Exe\", \"cscript.exe\", \"mshta.exe\", \"PowerShell.EXE\", \"pwsh.dll\", \"regsvr32.exe\", \"RUNDLL32.EXE\", \"wscript.exe\"))) and InitiatingProcessFileName =~ \"\\\\WinRAR.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the loading of the \"taskschd.dll\" module from a process that located in a potentially suspicious or uncommon directory.\nThe loading of this DLL might indicate that the application have the capability to create a scheduled task via the \"Schedule.Service\" COM object.\nInvestigation of the loading application and its behavior is required to determining if its malicious.\n Topic: image_load_dll_taskschd_by_process_in_potentially_suspicious_location"}, {"role": "assistant", "content": "DeviceImageLoadEvents\n| where (FolderPath endswith \"\\\\taskschd.dll\" or InitiatingProcessVersionInfoOriginalFileName =~ \"taskschd.dll\") and (InitiatingProcessFolderPath contains \":\\\\Temp\\\\\" or InitiatingProcessFolderPath contains \":\\\\Users\\\\Public\\\\\" or InitiatingProcessFolderPath contains \":\\\\Windows\\\\Temp\\\\\" or InitiatingProcessFolderPath contains \"\\\\AppData\\\\Local\\\\Temp\\\\\" or InitiatingProcessFolderPath contains \"\\\\Desktop\\\\\" or InitiatingProcessFolderPath contains \"\\\\Downloads\\\\\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Rule to detect the configuration of Run Once registry key. Configured payload can be run by runonce.exe /AlternateShellStartup Topic: registry_event_runonce_persistence"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where (RegistryKey contains \"\\\\Microsoft\\\\Active Setup\\\\Installed Components\" and RegistryKey endswith \"\\\\StubPath\") and (not(((RegistryValueData contains \"C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\\" and RegistryValueData contains \"\\\\Installer\\\\chrmstp.exe\\\" --configure-user-settings --verbose-logging --system-level\") or ((RegistryValueData contains \"C:\\\\Program Files (x86)\\\\Microsoft\\\\Edge\\\\Application\\\\\" or RegistryValueData contains \"C:\\\\Program Files\\\\Microsoft\\\\Edge\\\\Application\\\\\") and RegistryValueData endswith \"\\\\Installer\\\\setup.exe\\\" --configure-user-settings --verbose-logging --system-level --msedge --channel=stable\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects when a user downloads a file by using CertOC.exe Topic: proc_creation_win_certoc_download"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"-GetCACAPS\", \"http\")) and (FolderPath endswith \"\\\\certoc.exe\" or ProcessVersionInfoOriginalFileName =~ \"CertOC.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of a the file \"execve_hijack\" which is used by the Triple Cross rootkit as a way to elevate privileges Topic: proc_creation_lnx_triple_cross_rootkit_execve_hijack"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \"execve_hijack\" and InitiatingProcessFolderPath =~ \"/sudo\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of \"Extexport.exe\".A utility that is part of the Internet Explorer browser and is used to export and import various settings and data, particularly when switching between Internet Explorer and other web browsers like Firefox. It allows users to transfer bookmarks, browsing history, and other preferences from Internet Explorer to Firefox or vice versa.\nIt can be abused as a tool to side load any DLL. If a folder is provided in the command line itll load any DLL with one of the following names \"mozcrt19.dll\", \"mozsqlite3.dll\", or \"sqlite.dll\".\nArbitrary DLLs can also be loaded if a specific number of flags was provided.\n Topic: proc_creation_win_extexport_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where FolderPath endswith \"\\\\Extexport.exe\" or ProcessVersionInfoOriginalFileName =~ \"extexport.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects specific process parameters as used by Mustang Panda droppers Topic: proc_creation_win_apt_mustangpanda"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((ProcessCommandLine contains \"Temp\\\\wtask.exe /create\" or ProcessCommandLine contains \"%windir:~-3,1%%PUBLIC:~-9,1%\" or ProcessCommandLine contains \"/tn \\\"Security Script \" or ProcessCommandLine contains \"%windir:~-1,1%\") or (ProcessCommandLine contains \"/E:vbscript\" and ProcessCommandLine contains \"C:\\\\Users\\\\\" and ProcessCommandLine contains \".txt\" and ProcessCommandLine contains \"/F\")) or InitiatingProcessFolderPath =~ \"Temp\\\\winwsh.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of a renamed \"ftp.exe\" binary based on the PE metadata fields Topic: proc_creation_win_renamed_ftp"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessVersionInfoOriginalFileName =~ \"ftp.exe\" and (not(InitiatingProcessFolderPath =~ \"\\\\ftp.exe\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects executions of scripts located in potentially suspicious locations such as \"/tmp\" via a shell such as \"bash\", \"sh\", etc. Topic: proc_creation_lnx_susp_shell_script_exec_from_susp_location"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \" -c \" and (InitiatingProcessFolderPath in~ (\"/bash\", \"/csh\", \"/dash\", \"/fish\", \"/ksh\", \"/sh\", \"/zsh\")) and ProcessCommandLine =~ \"/tmp/\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of netsh with \"add helper\" flag in order to add a custom helper DLL. This technique can be abused to add a malicious helper DLL that can be used as a persistence proxy that gets called when netsh.exe is executed.\n Topic: proc_creation_win_netsh_helper_dll_persistence"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"add\", \"helper\")) and (ProcessVersionInfoOriginalFileName =~ \"netsh.exe\" or FolderPath endswith \"\\\\netsh.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects process discovery commands. Adversaries may attempt to get information about running processes on a system.\nInformation obtained could be used to gain an understanding of common software/applications running on systems within the network\n Topic: proc_creation_lnx_susp_running_process_discovery"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFolderPath in~ (\"/atop\", \"/htop\", \"/pgrep\", \"/ps\", \"/pstree\", \"/top\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects a suspicious execution of a Microsoft HTML Help (HH.exe) Topic: proc_creation_win_hh_susp_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessVersionInfoOriginalFileName =~ \"HH.exe\" or FolderPath endswith \"\\\\hh.exe\") and (ProcessCommandLine in~ (\".application\", \"\\\\AppData\\\\Local\\\\Temp\\\\\", \"\\\\Content.Outlook\\\\\", \"\\\\Downloads\\\\\", \"\\\\Users\\\\Public\\\\\", \"\\\\Windows\\\\Temp\\\\\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.\nThese services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.\nRemote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n Topic: proc_creation_win_remote_access_tools_ultraviewer"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessVersionInfoProductName =~ \"UltraViewer\" or ProcessVersionInfoCompanyName =~ \"DucFabulous Co,ltd\" or ProcessVersionInfoOriginalFileName =~ \"UltraViewer_Desktop.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the deletion of all backups or system state backups via \"wbadmin.exe\".\nThis technique is used by numerous ransomware families and actors.\nThis may only be successful on server platforms that have Windows Backup enabled.\n Topic: proc_creation_win_wbadmin_delete_all_backups"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \"keepVersions:0\" and (FolderPath endswith \"\\\\wbadmin.exe\" or ProcessVersionInfoOriginalFileName =~ \"WBADMIN.EXE\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects usage of command line tools such as \"kill\", \"pkill\" or \"killall\" to terminate or signal a running process. Topic: proc_creation_lnx_susp_process_termination_via_kill"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFolderPath in~ (\"/kill\", \"/killall\", \"/pkill\", \"/xkill\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects suspicious child processes of the \"Manage Engine ServiceDesk Plus\" Java web service Topic: proc_creation_win_java_manageengine_susp_child_process"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((InitiatingProcessFileName in~ (\"\\\\ManageEngine\\\\ServiceDesk\\\\\", \"\\\\java.exe\")) and (InitiatingProcessFolderPath in~ (\"\\\\AppVLP.exe\", \"\\\\bash.exe\", \"\\\\bitsadmin.exe\", \"\\\\calc.exe\", \"\\\\certutil.exe\", \"\\\\cscript.exe\", \"\\\\curl.exe\", \"\\\\forfiles.exe\", \"\\\\mftrace.exe\", \"\\\\mshta.exe\", \"\\\\net.exe\", \"\\\\net1.exe\", \"\\\\notepad.exe\", \"\\\\powershell.exe\", \"\\\\pwsh.exe\", \"\\\\query.exe\", \"\\\\reg.exe\", \"\\\\schtasks.exe\", \"\\\\scrcons.exe\", \"\\\\sh.exe\", \"\\\\systeminfo.exe\", \"\\\\whoami.exe\", \"\\\\wmic.exe\", \"\\\\wscript.exe\"))) and (not((ProcessCommandLine =~ \" stop\" and (InitiatingProcessFolderPath in~ (\"\\\\net.exe\", \"\\\\net1.exe\")))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the creation of a new Outlook form which can contain malicious code Topic: file_event_win_office_outlook_newform"}, {"role": "assistant", "content": "DeviceFileEvents\n| where (FileName in~ (\"\\\\AppData\\\\Local\\\\Microsoft\\\\FORMS\\\\IPM\", \"\\\\Local Settings\\\\Application Data\\\\Microsoft\\\\Forms\")) and InitiatingProcessFolderPath =~ \"\\\\outlook.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of Sysinternals ADExplorer with the \"-snapshot\" flag in order to save a local copy of the active directory database. Topic: proc_creation_win_sysinternals_adexplorer_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \"snapshot\" and (FolderPath endswith \"\\\\ADExplorer.exe\" or ProcessVersionInfoOriginalFileName =~ \"AdExp\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the use of the env command to invoke a shell. This may indicate an attempt to bypass restricted environments, escalate privileges, or execute arbitrary commands.\n Topic: proc_creation_lnx_env_shell_invocation"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine endswith \"/bin/bash\" or ProcessCommandLine endswith \"/bin/dash\" or ProcessCommandLine endswith \"/bin/fish\" or ProcessCommandLine endswith \"/bin/sh\" or ProcessCommandLine endswith \"/bin/zsh\") and InitiatingProcessFolderPath =~ \"/env\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the creation of a file with the \".pdf\" extension by the \"RegEdit.exe\" process.\nThis indicates that a user is trying to print/save a registry key as a PDF in order to potentially extract sensitive information and bypass defenses.\n Topic: file_event_win_regedit_print_as_pdf"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName =~ \".pdf\" and InitiatingProcessFolderPath =~ \"\\\\regedit.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects patterns as noticed in exploitation of Windows CVE-2021-31979 CVE-2021-33771 vulnerability and DevilsTongue malware by threat group Sourgum Topic: file_event_win_cve_2021_31979_cve_2021_33771_exploits"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName in~ (\"C:\\\\Windows\\\\system32\\\\physmem.sys\", \"C:\\\\Windows\\\\System32\\\\IME\\\\IMEJP\\\\imjpueact.dll\", \"C:\\\\Windows\\\\system32\\\\ime\\\\IMETC\\\\IMTCPROT.DLL\", \"C:\\\\Windows\\\\system32\\\\ime\\\\SHARED\\\\imecpmeid.dll\", \"C:\\\\Windows\\\\system32\\\\config\\\\spp\\\\ServiceState\\\\Recovery\\\\pac.dat\", \"C:\\\\Windows\\\\system32\\\\config\\\\cy-GB\\\\Setup\\\\SKB\\\\InputMethod\\\\TupTask.dat\", \"C:\\\\Windows\\\\system32\\\\config\\\\config\\\\startwus.dat\", \"C:\\\\Windows\\\\system32\\\\ime\\\\SHARED\\\\WimBootConfigurations.ini\", \"C:\\\\Windows\\\\system32\\\\ime\\\\IMEJP\\\\WimBootConfigurations.ini\", \"C:\\\\Windows\\\\system32\\\\ime\\\\IMETC\\\\WimBootConfigurations.ini\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "setupapi.dll library provide InstallHinfSection function for processing INF files. INF file may contain instructions allowing to create values in the registry, modify files and install drivers. This technique could be used to obtain persistence via modifying one of Run or RunOnce registry keys, run process or use other DLLs chain calls (see references) InstallHinfSection function in setupapi.dll calls runonce.exe executable regardless of actual content of INF file. Topic: proc_creation_win_rundll32_setupapi_installhinfsection"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (InitiatingProcessCommandLine in~ (\"setupapi.dll\", \"InstallHinfSection\")) and InitiatingProcessFileName =~ \"\\\\rundll32.exe\" and InitiatingProcessFolderPath =~ \"\\\\runonce.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects disabling of Time Machine (Apples automated backup utility software) via the native macOS backup utility \"tmutil\".\nAn attacker can use this to prevent backups from occurring.\n Topic: proc_creation_macos_tmutil_disable_backup"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \"disable\" and (FolderPath endswith \"/tmutil\" or ProcessCommandLine contains \"tmutil\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects a suspicious copy operation that tries to copy a program from system (System32, SysWOW64, WinSxS) directories to another on disk.\nOften used to move LOLBINs such as certutil or desktopimgdownldr to a different location with a different name in order to bypass detections based on locations.\n Topic: proc_creation_win_susp_copy_system_dir"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((ProcessCommandLine =~ \"copy \" and InitiatingProcessFolderPath =~ \"\\\\cmd.exe\") or ((FolderPath endswith \"\\\\robocopy.exe\" or FolderPath endswith \"\\\\xcopy.exe\") or (ProcessVersionInfoOriginalFileName in~ (\"robocopy.exe\", \"XCOPY.EXE\"))) or ((ProcessCommandLine in~ (\"copy-item\", \" copy \", \"cpi \", \" cp \")) and (InitiatingProcessFolderPath in~ (\"\\\\powershell.exe\", \"\\\\pwsh.exe\")))) and (ProcessCommandLine in~ (\"\\\\System32\", \"\\\\SysWOW64\", \"\\\\WinSxS\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the addition of a SSP to the registry. Upon a reboot or API call, SSP DLLs gain access to encrypted and plaintext passwords stored in Windows.\n Topic: registry_event_ssp_added_lsa_config"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where (RegistryKey endswith \"\\\\Control\\\\Lsa\\\\Security Packages\" or RegistryKey endswith \"\\\\Control\\\\Lsa\\\\OSConfig\\\\Security Packages\") and (not((InitiatingProcessFolderPath in~ (\"C:\\\\Windows\\\\system32\\\\msiexec.exe\", \"C:\\\\Windows\\\\syswow64\\\\MsiExec.exe\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects creation of files which are the results of executing the built-in reconnaissance script \"C:\\Windows\\System32\\gatherNetworkInfo.vbs\". Topic: file_event_win_lolbin_gather_network_info_script_output"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName in~ (\"\\\\Hotfixinfo.txt\", \"\\\\netiostate.txt\", \"\\\\sysportslog.txt\", \"\\\\VmSwitchLog.evtx\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects wscript/cscript executions of scripts located in user directories Topic: proc_creation_win_wscript_cscript_dropper"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (InitiatingProcessFolderPath in~ (\"\\\\wscript.exe\", \"\\\\cscript.exe\")) and (ProcessCommandLine in~ (\".js\", \".jse\", \".vba\", \".vbe\", \".vbs\", \".wsf\")) and (ProcessCommandLine in~ (\":\\\\Temp\\\\\", \":\\\\Tmp\\\\\", \":\\\\Users\\\\Public\\\\\", \":\\\\Windows\\\\Temp\\\\\", \"\\\\AppData\\\\Local\\\\Temp\\\\\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "A General detection for sdclt spawning new processes. This could be an indicator of sdclt being used for bypass UAC techniques. Topic: proc_creation_win_sdclt_child_process"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFileName =~ \"\\\\sdclt.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Adversaries can interact with the DACLs using built-in Windows commands takeown which can grant adversaries higher permissions on specific files and folders Topic: proc_creation_win_takeown_recursive_own"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"/f \", \"/r\")) and InitiatingProcessFolderPath =~ \"\\\\takeown.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects suspicious ways to run Invoke-Execution using IEX alias Topic: proc_creation_win_powershell_iex_patterns"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (((ProcessCommandLine in~ (\" | iex;\", \" | iex \", \" | iex}\", \" | IEX ;\", \" | IEX -Error\", \" | IEX (new\", \");IEX \")) and (InitiatingProcessFolderPath in~ (\"\\\\powershell.exe\", \"\\\\pwsh.exe\"))) and (ProcessCommandLine in~ (\"::FromBase64String\", \".GetString([System.Convert]::\"))) or (ProcessCommandLine in~ (\")|iex;$\", \");iex($\", \");iex $\", \" | IEX | \", \" | iex\\\\\\\"\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of System Informer, a task manager tool to view and manipulate processes, kernel options and other low level operations Topic: proc_creation_win_pua_system_informer"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where FolderPath endswith \"\\\\SystemInformer.exe\" or ProcessVersionInfoOriginalFileName =~ \"SystemInformer.exe\" or ProcessVersionInfoFileDescription =~ \"System Informer\" or ProcessVersionInfoProductName =~ \"System Informer\" or (MD5 startswith \"19426363A37C03C3ED6FEDF57B6696EC\" or SHA1 startswith \"8B12C6DA8FAC0D5E8AB999C31E5EA04AF32D53DC\" or SHA256 startswith \"8EE9D84DE50803545937A63C686822388A3338497CDDB660D5D69CF68B68F287\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Ransomware create txt file in the user Desktop Topic: file_event_win_susp_desktop_txt"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName =~ \".txt\" and InitiatingProcessFolderPath =~ \"\\\\cmd.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects process creation activity indicators related to Diamond Sleet APT Topic: proc_creation_win_apt_diamond_sleet_indicators"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \" uTYNkfKxHiZrx3KJ\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects Commandlet names from well-known PowerShell exploitation frameworks Topic: proc_creation_win_powershell_malicious_cmdlets"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine in~ (\"Add-Exfiltration\", \"Add-Persistence\", \"Add-RegBackdoor\", \"Add-RemoteRegBackdoor\", \"Add-ScrnSaveBackdoor\", \"Check-VM\", \"ConvertTo-Rc4ByteStream\", \"Decrypt-Hash\", \"Disable-ADIDNSNode\", \"Disable-MachineAccount\", \"Do-Exfiltration\", \"Enable-ADIDNSNode\", \"Enable-MachineAccount\", \"Enabled-DuplicateToken\", \"Exploit-Jboss\", \"Export-ADR\", \"Export-ADRCSV\", \"Export-ADRExcel\", \"Export-ADRHTML\", \"Export-ADRJSON\", \"Export-ADRXML\", \"Find-Fruit\", \"Find-GPOLocation\", \"Find-TrustedDocuments\", \"Get-ADIDNS\", \"Get-ApplicationHost\", \"Get-ChromeDump\", \"Get-ClipboardContents\", \"Get-FoxDump\", \"Get-GPPPassword\", \"Get-IndexedItem\", \"Get-KerberosAESKey\", \"Get-Keystrokes\", \"Get-LSASecret\", \"Get-MachineAccountAttribute\", \"Get-MachineAccountCreator\", \"Get-PassHashes\", \"Get-RegAlwaysInstallElevated\", \"Get-RegAutoLogon\", \"Get-RemoteBootKey\", \"Get-RemoteCachedCredential\", \"Get-RemoteLocalAccountHash\", \"Get-RemoteLSAKey\", \"Get-RemoteMachineAccountHash\", \"Get-RemoteNLKMKey\", \"Get-RickAstley\", \"Get-Screenshot\", \"Get-SecurityPackages\", \"Get-ServiceFilePermission\", \"Get-ServicePermission\", \"Get-ServiceUnquoted\", \"Get-SiteListPassword\", \"Get-System\", \"Get-TimedScreenshot\", \"Get-UnattendedInstallFile\", \"Get-Unconstrained\", \"Get-USBKeystrokes\", \"Get-VaultCredential\", \"Get-VulnAutoRun\", \"Get-VulnSchTask\", \"Grant-ADIDNSPermission\", \"Gupt-Backdoor\", \"HTTP-Login\", \"Install-ServiceBinary\", \"Install-SSP\", \"Invoke-ACLScanner\", \"Invoke-ADRecon\", \"Invoke-ADSBackdoor\", \"Invoke-AgentSmith\", \"Invoke-AllChecks\", \"Invoke-ARPScan\", \"Invoke-AzureHound\", \"Invoke-BackdoorLNK\", \"Invoke-BadPotato\", \"Invoke-BetterSafetyKatz\", \"Invoke-BypassUAC\", \"Invoke-Carbuncle\", \"Invoke-Certify\", \"Invoke-ConPtyShell\", \"Invoke-CredentialInjection\", \"Invoke-DAFT\", \"Invoke-DCSync\", \"Invoke-DinvokeKatz\", \"Invoke-DllInjection\", \"Invoke-DNSUpdate\", \"Invoke-DomainPasswordSpray\", \"Invoke-DowngradeAccount\", \"Invoke-EgressCheck\", \"Invoke-Eyewitness\", \"Invoke-FakeLogonScreen\", \"Invoke-Farmer\", \"Invoke-Get-RBCD-Threaded\", \"Invoke-Gopher\", \"Invoke-Grouper\", \"Invoke-HandleKatz\", \"Invoke-ImpersonatedProcess\", \"Invoke-ImpersonateSystem\", \"Invoke-InteractiveSystemPowerShell\", \"Invoke-Internalmonologue\", \"Invoke-Inveigh\", \"Invoke-InveighRelay\", \"Invoke-KrbRelay\", \"Invoke-LdapSignCheck\", \"Invoke-Lockless\", \"Invoke-MalSCCM\", \"Invoke-Mimikatz\", \"Invoke-Mimikittenz\", \"Invoke-MITM6\", \"Invoke-NanoDump\", \"Invoke-NetRipper\", \"Invoke-Nightmare\", \"Invoke-NinjaCopy\", \"Invoke-OfficeScrape\", \"Invoke-OxidResolver\", \"Invoke-P0wnedshell\", \"Invoke-Paranoia\", \"Invoke-PortScan\", \"Invoke-PoshRatHttp\", \"Invoke-PostExfil\", \"Invoke-PowerDump\", \"Invoke-PowerShellTCP\", \"Invoke-PowerShellWMI\", \"Invoke-PPLDump\", \"Invoke-PsExec\", \"Invoke-PSInject\", \"Invoke-PsUaCme\", \"Invoke-ReflectivePEInjection\", \"Invoke-ReverseDNSLookup\", \"Invoke-Rubeus\", \"Invoke-RunAs\", \"Invoke-SafetyKatz\", \"Invoke-SauronEye\", \"Invoke-SCShell\", \"Invoke-Seatbelt\", \"Invoke-ServiceAbuse\", \"Invoke-ShadowSpray\", \"Invoke-Sharp\", \"Invoke-Shellcode\", \"Invoke-SMBScanner\", \"Invoke-Snaffler\", \"Invoke-Spoolsample\", \"Invoke-SpraySinglePassword\", \"Invoke-SSHCommand\", \"Invoke-StandIn\", \"Invoke-StickyNotesExtract\", \"Invoke-SystemCommand\", \"Invoke-Tasksbackdoor\", \"Invoke-Tater\", \"Invoke-Thunderfox\", \"Invoke-ThunderStruck\", \"Invoke-TokenManipulation\", \"Invoke-Tokenvator\", \"Invoke-TotalExec\", \"Invoke-UrbanBishop\", \"Invoke-UserHunter\", \"Invoke-VoiceTroll\", \"Invoke-Whisker\", \"Invoke-WinEnum\", \"Invoke-winPEAS\", \"Invoke-WireTap\", \"Invoke-WmiCommand\", \"Invoke-WMIExec\", \"Invoke-WScriptBypassUAC\", \"Invoke-Zerologon\", \"MailRaider\", \"New-ADIDNSNode\", \"New-DNSRecordArray\", \"New-HoneyHash\", \"New-InMemoryModule\", \"New-MachineAccount\", \"New-SOASerialNumberArray\", \"Out-Minidump\", \"Port-Scan\", \"PowerBreach\", \"powercat \", \"PowerUp\", \"PowerView\", \"Remove-ADIDNSNode\", \"Remove-MachineAccount\", \"Remove-Update\", \"Rename-ADIDNSNode\", \"Revoke-ADIDNSPermission\", \"Set-ADIDNSNode\", \"Set-MacAttribute\", \"Set-MachineAccountAttribute\", \"Set-Wallpaper\", \"Show-TargetScreen\", \"Start-CaptureServer\", \"Start-Dnscat2\", \"Start-WebcamRecorder\", \"VolumeShadowCopyTools\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects attackers using tooling with bad opsec defaults.\nE.g. spawning a sacrificial process to inject a capability into the process without taking into account how the process is normally run.\nOne trivial example of this is using rundll32.exe without arguments as a sacrificial process (default in CS, now highlighted by c2lint), running WerFault without arguments (Kraken - credit am0nsec), and other examples.\n Topic: proc_creation_win_susp_bad_opsec_sacrificial_processes"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((ProcessCommandLine endswith \"regasm.exe\" and InitiatingProcessFolderPath =~ \"\\\\regasm.exe\") or (ProcessCommandLine endswith \"regsvcs.exe\" and InitiatingProcessFolderPath =~ \"\\\\regsvcs.exe\") or (ProcessCommandLine endswith \"regsvr32.exe\" and InitiatingProcessFolderPath =~ \"\\\\regsvr32.exe\") or (ProcessCommandLine endswith \"rundll32.exe\" and InitiatingProcessFolderPath =~ \"\\\\rundll32.exe\") or (ProcessCommandLine endswith \"WerFault.exe\" and InitiatingProcessFolderPath =~ \"\\\\WerFault.exe\")) and (not(((ProcessCommandLine endswith \"rundll32.exe\" and InitiatingProcessCommandLine =~ \"--uninstall \" and InitiatingProcessFileName =~ \"\\\\Installer\\\\setup.exe\" and InitiatingProcessFolderPath =~ \"\\\\rundll32.exe\") or (ProcessCommandLine endswith \"rundll32.exe\" and InitiatingProcessFileName =~ \"\\\\AppData\\\\Local\\\\Microsoft\\\\EdgeUpdate\\\\Install\\\\{\" and InitiatingProcessFolderPath =~ \"\\\\rundll32.exe\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects msdt.exe creating files in suspicious directories which could be a sign of exploitation of either Follina or Dogwalk vulnerabilities Topic: file_event_win_msdt_susp_directories"}, {"role": "assistant", "content": "DeviceFileEvents\n| where (FileName in~ (\"\\\\Desktop\\\\\", \"\\\\Start Menu\\\\Programs\\\\Startup\\\\\", \"C:\\\\PerfLogs\\\\\", \"C:\\\\ProgramData\\\\\", \"C:\\\\Users\\\\Public\\\\\")) and InitiatingProcessFolderPath =~ \"\\\\msdt.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects requests to exclude files, folders or processes from Antivirus scanning using PowerShell cmdlets Topic: proc_creation_win_powershell_defender_exclusion"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"Add-MpPreference \", \"Set-MpPreference \")) and (ProcessCommandLine in~ (\" -ExclusionPath \", \" -ExclusionExtension \", \" -ExclusionProcess \", \" -ExclusionIpAddress \"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of EDRSilencer, a tool that leverages Windows Filtering Platform (WFP) to block Endpoint Detection and Response (EDR) agents from reporting security events to the server based on PE metadata information.\n Topic: proc_creation_win_hktl_edrsilencer"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where FolderPath endswith \"\\\\EDRSilencer.exe\" or ProcessVersionInfoOriginalFileName =~ \"EDRSilencer.exe\" or ProcessVersionInfoFileDescription contains \"EDRSilencer\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of a renamed Microsoft Teams binary. Topic: proc_creation_win_renamed_msteams"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessVersionInfoOriginalFileName in~ (\"msteams.exe\", \"teams.exe\")) and (not((InitiatingProcessFolderPath in~ (\"\\\\msteams.exe\", \"\\\\teams.exe\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects an a non-browser process interacting with the Telegram API which could indicate use of a covert C2 Topic: net_connection_win_domain_telegram_api_non_browser_access"}, {"role": "assistant", "content": "DeviceNetworkEvents\n| where RemoteUrl =~ \"api.telegram.org\" and (not((InitiatingProcessFolderPath =~ \"\\\\brave.exe\" or (InitiatingProcessFolderPath in~ (\"C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\", \"C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\")) or (InitiatingProcessFolderPath startswith \"C:\\\\Program Files (x86)\\\\Microsoft\\\\EdgeWebView\\\\Application\\\\\" or InitiatingProcessFolderPath endswith \"\\\\WindowsApps\\\\MicrosoftEdge.exe\" or (InitiatingProcessFolderPath in~ (\"C:\\\\Program Files (x86)\\\\Microsoft\\\\Edge\\\\Application\\\\msedge.exe\", \"C:\\\\Program Files\\\\Microsoft\\\\Edge\\\\Application\\\\msedge.exe\"))) or (InitiatingProcessFolderPath in~ (\"C:\\\\Program Files (x86)\\\\Microsoft\\\\EdgeCore\\\\\", \"C:\\\\Program Files\\\\Microsoft\\\\EdgeCore\\\\\")) or (InitiatingProcessFolderPath in~ (\"C:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe\", \"C:\\\\Program Files (x86)\\\\Mozilla Firefox\\\\firefox.exe\")) or (InitiatingProcessFolderPath in~ (\"C:\\\\Program Files (x86)\\\\Internet Explorer\\\\iexplore.exe\", \"C:\\\\Program Files\\\\Internet Explorer\\\\iexplore.exe\")) or InitiatingProcessFolderPath =~ \"\\\\maxthon.exe\" or InitiatingProcessFolderPath =~ \"\\\\opera.exe\" or InitiatingProcessFolderPath =~ \"\\\\safari.exe\" or InitiatingProcessFolderPath =~ \"\\\\seamonkey.exe\" or InitiatingProcessFolderPath =~ \"\\\\vivaldi.exe\" or InitiatingProcessFolderPath =~ \"\\\\whale.exe\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects modification of autostart extensibility point (ASEP) in registry. Topic: registry_set_asep_reg_keys_modification_common"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where (RegistryKey contains \"\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\Windows CE Services\\\\AutoStart\" or RegistryKey contains \"\\\\Software\\\\Wow6432Node\\\\Microsoft\\\\Command Processor\\\\Autorun\" or RegistryKey contains \"\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\Active Setup\\\\Installed Components\" or RegistryKey contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows CE Services\\\\AutoStartOnDisconnect\" or RegistryKey contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows CE Services\\\\AutoStartOnConnect\" or RegistryKey contains \"\\\\SYSTEM\\\\Setup\\\\CmdLine\" or RegistryKey contains \"\\\\Software\\\\Microsoft\\\\Ctf\\\\LangBarAddin\" or RegistryKey contains \"\\\\Software\\\\Microsoft\\\\Command Processor\\\\Autorun\" or RegistryKey contains \"\\\\SOFTWARE\\\\Microsoft\\\\Active Setup\\\\Installed Components\" or RegistryKey contains \"\\\\SOFTWARE\\\\Classes\\\\Protocols\\\\Handler\" or RegistryKey contains \"\\\\SOFTWARE\\\\Classes\\\\Protocols\\\\Filter\" or RegistryKey contains \"\\\\SOFTWARE\\\\Classes\\\\Htmlfile\\\\Shell\\\\Open\\\\Command\\\\(Default)\" or RegistryKey contains \"\\\\Environment\\\\UserInitMprLogonScript\" or RegistryKey contains \"\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\Control Panel\\\\Desktop\\\\Scrnsave.exe\" or RegistryKey contains \"\\\\Software\\\\Microsoft\\\\Internet Explorer\\\\UrlSearchHooks\" or RegistryKey contains \"\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\Desktop\\\\Components\" or RegistryKey contains \"\\\\Software\\\\Classes\\\\Clsid\\\\{AB8902B4-09CA-4bb6-B78D-A8F59079A8D5}\\\\Inprocserver32\" or RegistryKey contains \"\\\\Control Panel\\\\Desktop\\\\Scrnsave.exe\") and (not((RegistryKey contains \"\\\\Software\\\\Microsoft\\\\Active Setup\\\\Installed Components\\\\{89820200-ECBD-11cf-8B85-00AA005B4383}\" or RegistryKey contains \"\\\\SOFTWARE\\\\Microsoft\\\\Active Setup\\\\Installed Components\\\\{8A69D345-D564-463c-AFF1-A69D9E530F96}\" or RegistryKey contains \"\\\\SOFTWARE\\\\Microsoft\\\\Active Setup\\\\Installed Components\\\\{9459C573-B17A-45AE-9F64-1857B5D58CEE}\" or RegistryValueData =~ \"(Empty)\" or (InitiatingProcessFolderPath in~ (\"C:\\\\Windows\\\\System32\\\\poqexec.exe\", \"C:\\\\Program Files (x86)\\\\Microsoft Office\\\\root\\\\integration\\\\integrator.exe\")) or ((RegistryKey endswith \"\\\\Office\\\\ClickToRun\\\\REGISTRY\\\\MACHINE\\\\Software\\\\Classes\\\\PROTOCOLS\\\\Handler*\" or RegistryKey endswith \"\\\\ClickToRunStore\\\\HKMU\\\\SOFTWARE\\\\Classes\\\\PROTOCOLS\\\\Handler*\") or (RegistryValueData in~ (\"{314111c7-a502-11d2-bbca-00c04f8ec294}\", \"{3459B272-CC19-4448-86C9-DDC3B4B2FAD3}\", \"{42089D2D-912D-4018-9087-2B87803E93FB}\", \"{5504BE45-A83B-4808-900A-3A5C36E7F77A}\", \"{807583E5-5146-11D5-A672-00B0D022E945}\"))) or InitiatingProcessFolderPath =~ \"\\\\OfficeClickToRun.exe\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of commands that leverage the \"mshtml.dll\" RunHTMLApplication export to run arbitrary code via different protocol handlers (vbscript, javascript, file, http...)\n Topic: proc_creation_win_rundll32_mshtml_runhtmlapplication"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine in~ (\"#135\", \"RunHTMLApplication\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of AdvancedRun utility Topic: proc_creation_win_pua_advancedrun"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessVersionInfoOriginalFileName =~ \"AdvancedRun.exe\" or (ProcessCommandLine contains \" /EXEFilename \" and ProcessCommandLine contains \" /Run\") or (ProcessCommandLine contains \" /WindowState 0\" and ProcessCommandLine contains \" /RunAs \" and ProcessCommandLine contains \" /CommandLine \")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage Topic: registry_set_disable_defender_firewall"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where RegistryKey endswith \"\\\\Services\\\\SharedAccess\\\\Parameters\\\\FirewallPolicy*\" and RegistryKey endswith \"\\\\EnableFirewall\" and RegistryValueData =~ \"DWORD (0x00000000)\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects a Windows command line executable started from MMC Topic: proc_creation_win_mmc_susp_child_process"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFileName =~ \"\\\\mmc.exe\" and ((FolderPath endswith \"\\\\cmd.exe\" or FolderPath endswith \"\\\\powershell.exe\" or FolderPath endswith \"\\\\pwsh.exe\" or FolderPath endswith \"\\\\wscript.exe\" or FolderPath endswith \"\\\\cscript.exe\" or FolderPath endswith \"\\\\sh.exe\" or FolderPath endswith \"\\\\bash.exe\" or FolderPath endswith \"\\\\reg.exe\" or FolderPath endswith \"\\\\regsvr32.exe\") or FolderPath contains \"\\\\BITSADMIN\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the use of DefenderCheck, a tool to evaluate the signatures used in Microsoft Defender. It can be used to figure out the strings / byte chains used in Microsoft Defender to detect a tool and thus used for AV evasion. Topic: proc_creation_win_pua_defendercheck"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where FolderPath endswith \"\\\\DefenderCheck.exe\" or ProcessVersionInfoFileDescription =~ \"DefenderCheck\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This rule detect using dd and truncate to add a junk data to file. Topic: proc_creation_macos_binary_padding"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((ProcessCommandLine in~ (\"if=/dev/zero\", \"if=/dev/random\", \"if=/dev/urandom\")) and InitiatingProcessFolderPath =~ \"/dd\") or (ProcessCommandLine =~ \"-s +\" and InitiatingProcessFolderPath =~ \"/truncate\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects modification of autostart extensibility point (ASEP) in registry. Topic: registry_set_asep_reg_keys_modification_winsock2"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where RegistryKey contains \"\\\\System\\\\CurrentControlSet\\\\Services\\\\WinSock2\\\\Parameters\" and (RegistryKey contains \"\\\\Protocol_Catalog9\\\\Catalog_Entries\" or RegistryKey contains \"\\\\NameSpace_Catalog5\\\\Catalog_Entries\") and (not((RegistryValueData =~ \"(Empty)\" or InitiatingProcessFolderPath =~ \"C:\\\\Windows\\\\System32\\\\MsiExec.exe\" or InitiatingProcessFolderPath =~ \"C:\\\\Windows\\\\syswow64\\\\MsiExec.exe\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects successful logon attempts performed with WMI Topic: win_security_susp_wmi_login"}, {"role": "assistant", "content": "DeviceLogonEvents\n| where InitiatingProcessFolderPath endswith \"\\\\WmiPrvSE.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects enabling TurnOffCheck which can be used to bypass defense of MSDT Follina vulnerability Topic: registry_set_enabling_turnoffcheck"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where RegistryKey endswith \"\\\\Policies\\\\Microsoft\\\\Windows\\\\ScriptedDiagnostics\\\\TurnOffCheck\" and RegistryValueData =~ \"DWORD (0x00000001)\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects a suspicious child process spawning from Outlook where the image is located in a remote location (SMB/WebDav shares). Topic: proc_creation_win_office_outlook_susp_child_processes_remote"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFileName =~ \"\\\\outlook.exe\" and InitiatingProcessFolderPath =~ \"\\\\\\\\\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects RunDLL32.exe spawning explorer.exe as child, which is very uncommon, often observes Gamarue spawning the explorer.exe process in an unusual way Topic: proc_creation_win_rundll32_spawn_explorer"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (InitiatingProcessFileName =~ \"\\\\rundll32.exe\" and InitiatingProcessFolderPath =~ \"\\\\explorer.exe\") and (not(InitiatingProcessCommandLine =~ \"\\\\shell32.dll,Control_RunDLL\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the use of grep to discover specific files created by the GobRAT malware Topic: proc_creation_lnx_malware_gobrat_grep_payload_discovery"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"apached\", \"frpc\", \"sshd.sh\", \"zone.arm\")) and InitiatingProcessFolderPath =~ \"/grep\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects attempts to enable the root account via \"dsenableroot\" Topic: proc_creation_macos_dsenableroot_enable_root_account"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFolderPath =~ \"/dsenableroot\" and (not(ProcessCommandLine =~ \" -d \"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects file creation patterns noticeable during the exploitation of CVE-2021-40444 Topic: file_event_win_exploit_cve_2021_40444"}, {"role": "assistant", "content": "DeviceFileEvents\n| where ((FileName =~ \".cab\" and InitiatingProcessFolderPath =~ \"\\\\winword.exe\") or ((FileName in~ (\"\\\\AppData\\\\Local\\\\Temp\\\\\", \".inf\")) and InitiatingProcessFolderPath =~ \"\\\\winword.exe\")) and (not(FileName =~ \"C:\\\\Users\\\\\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of Remote Utilities RAT (RURAT) from an unusual location (outside of C:\\Program Files) Topic: proc_creation_win_remote_access_tools_rurat_non_default_location"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((FolderPath endswith \"\\\\rutserv.exe\" or FolderPath endswith \"\\\\rfusclient.exe\") or ProcessVersionInfoProductName =~ \"Remote Utilities\") and (not((InitiatingProcessFolderPath in~ (\"C:\\\\Program Files\\\\Remote Utilities\", \"C:\\\\Program Files (x86)\\\\Remote Utilities\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects an unexpected process spawning from dns.exe which may indicate activity related to remote code execution or other forms of exploitation as seen in CVE-2020-1350 (SigRed) Topic: proc_creation_win_dns_susp_child_process"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFileName =~ \"\\\\dns.exe\" and (not(InitiatingProcessFolderPath =~ \"\\\\conhost.exe\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects java process spawning suspicious children Topic: proc_creation_lnx_susp_java_children"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFileName =~ \"/java\" and (ProcessCommandLine in~ (\"/bin/sh\", \"bash\", \"dash\", \"ksh\", \"zsh\", \"csh\", \"fish\", \"curl\", \"wget\", \"python\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects suspicious process run from unusual locations Topic: proc_creation_win_rundll32_run_locations"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (FolderPath contains \":\\\\RECYCLER\\\\\" or FolderPath contains \":\\\\SystemVolumeInformation\\\\\") or (FolderPath startswith \"C:\\\\Windows\\\\Tasks\\\\\" or FolderPath startswith \"C:\\\\Windows\\\\debug\\\\\" or FolderPath startswith \"C:\\\\Windows\\\\fonts\\\\\" or FolderPath startswith \"C:\\\\Windows\\\\help\\\\\" or FolderPath startswith \"C:\\\\Windows\\\\drivers\\\\\" or FolderPath startswith \"C:\\\\Windows\\\\addins\\\\\" or FolderPath startswith \"C:\\\\Windows\\\\cursors\\\\\" or FolderPath startswith \"C:\\\\Windows\\\\system32\\\\tasks\\\\\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects shell spawned from Java host process, which could be a sign of exploitation (e.g. log4j exploitation) Topic: proc_creation_win_java_susp_child_process_2"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (InitiatingProcessFileName =~ \"\\\\java.exe\" and (InitiatingProcessFolderPath in~ (\"\\\\bash.exe\", \"\\\\cmd.exe\", \"\\\\powershell.exe\", \"\\\\pwsh.exe\"))) and (not((InitiatingProcessFileName =~ \"build\" and ProcessCommandLine =~ \"build\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects a set of suspicious network related commands often used in recon stages Topic: proc_creation_win_nslookup_domain_discovery"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine in~ (\"nslookup\", \"_ldap._tcp.dc._msdcs.\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the deletion of AMSI provider registry key entries in HKLM\\Software\\Microsoft\\AMSI. This technique could be used by an attacker in order to disable AMSI inspection. Topic: registry_delete_removal_amsi_registry_key"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where (ActionType in~ (\"RegistryKeyDeleted\", \"RegistryValueDeleted\")) and (RegistryKey endswith \"{2781761E-28E0-4109-99FE-B9D127C57AFE}\" or RegistryKey endswith \"{A7C452EF-8E9F-42EB-9F2B-245613CA0DC9}\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects a dump file written by QuarksPwDump password dumper Topic: file_event_win_hktl_quarkspw_filedump"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName in~ (\"\\\\AppData\\\\Local\\\\Temp\\\\SAM-\", \".dmp\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects process creation activity related to Peach Sandstorm APT Topic: proc_creation_win_apt_peach_sandstorm_indicators"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \"QP's*(58vaP!tF4\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the usage of attrib with the \"+s\" option to set scripts or executables located in suspicious locations as system files to hide them from users and make them unable to be deleted with simple rights. The rule limits the search to specific extensions and directories to avoid FPs\n Topic: proc_creation_win_attrib_system_susp_paths"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine =~ \" +s\" and (ProcessCommandLine in~ (\".bat\", \".dll\", \".exe\", \".hta\", \".ps1\", \".vbe\", \".vbs\")) and (FolderPath endswith \"\\\\attrib.exe\" or ProcessVersionInfoOriginalFileName =~ \"ATTRIB.EXE\") and (ProcessCommandLine in~ (\" %\", \"\\\\Users\\\\Public\\\\\", \"\\\\AppData\\\\Local\\\\\", \"\\\\ProgramData\\\\\", \"\\\\Downloads\\\\\", \"\\\\Windows\\\\Temp\\\\\"))) and (not((ProcessCommandLine in~ (\"\\\\Windows\\\\TEMP\\\\\", \".exe\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects potential malicious and unauthorized usage of bcdedit.exe Topic: proc_creation_win_bcdedit_susp_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"delete\", \"deletevalue\", \"import\", \"safeboot\", \"network\")) and (FolderPath endswith \"\\\\bcdedit.exe\" or ProcessVersionInfoOriginalFileName =~ \"bcdedit.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of a shell (powershell, bash, wsl...) via Visual Studio Code tunnel. Attackers can abuse this functionality to establish a C2 channel and execute arbitrary commands on the system. Topic: proc_creation_win_vscode_tunnel_remote_shell_"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (InitiatingProcessCommandLine =~ \".vscode-server\" and InitiatingProcessFileName =~ \"\\\\server\\\\node.exe\") and ((ProcessCommandLine =~ \"\\\\terminal\\\\browser\\\\media\\\\shellIntegration.ps1\" and (InitiatingProcessFolderPath in~ (\"\\\\powershell.exe\", \"\\\\pwsh.exe\"))) or (InitiatingProcessFolderPath in~ (\"\\\\wsl.exe\", \"\\\\bash.exe\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the creation of the \"accepteula\" key related to the Sysinternals tools being created from executables with the wrong name (e.g. a renamed Sysinternals tool) Topic: registry_add_pua_sysinternals_renamed_execution_via_eula"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where (ActionType =~ \"RegistryKeyCreated\" and (RegistryKey contains \"\\\\Active Directory Explorer\" or RegistryKey contains \"\\\\Handle\" or RegistryKey contains \"\\\\LiveKd\" or RegistryKey contains \"\\\\ProcDump\" or RegistryKey contains \"\\\\Process Explorer\" or RegistryKey contains \"\\\\PsExec\" or RegistryKey contains \"\\\\PsLoggedon\" or RegistryKey contains \"\\\\PsLoglist\" or RegistryKey contains \"\\\\PsPasswd\" or RegistryKey contains \"\\\\PsPing\" or RegistryKey contains \"\\\\PsService\" or RegistryKey contains \"\\\\SDelete\") and RegistryKey endswith \"\\\\EulaAccepted\") and (not((InitiatingProcessFolderPath in~ (\"\\\\ADExplorer.exe\", \"\\\\ADExplorer64.exe\", \"\\\\handle.exe\", \"\\\\handle64.exe\", \"\\\\livekd.exe\", \"\\\\livekd64.exe\", \"\\\\procdump.exe\", \"\\\\procdump64.exe\", \"\\\\procexp.exe\", \"\\\\procexp64.exe\", \"\\\\PsExec.exe\", \"\\\\PsExec64.exe\", \"\\\\PsLoggedon.exe\", \"\\\\PsLoggedon64.exe\", \"\\\\psloglist.exe\", \"\\\\psloglist64.exe\", \"\\\\pspasswd.exe\", \"\\\\pspasswd64.exe\", \"\\\\PsPing.exe\", \"\\\\PsPing64.exe\", \"\\\\PsService.exe\", \"\\\\PsService64.exe\", \"\\\\sdelete.exe\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the use of Advanced Port Scanner. Topic: proc_creation_win_pua_advanced_port_scanner"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"/portable\", \"/lng\")) or (FolderPath contains \"\\\\advanced_port_scanner\" or ProcessVersionInfoOriginalFileName contains \"advanced_port_scanner\" or ProcessVersionInfoFileDescription contains \"Advanced Port Scanner\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the creation of a scheduled task via Registry keys. Topic: registry_event_scheduled_task_creation"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where RegistryKey endswith \"\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Schedule\\\\TaskCache\\\\Tasks*\" or RegistryKey endswith \"\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Schedule\\\\TaskCache\\\\Tree*\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the import of the specified file to the registry with regedit.exe. Topic: proc_creation_win_regedit_import_keys"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((ProcessCommandLine in~ (\" /i \", \" /s \", \".reg\")) and (FolderPath endswith \"\\\\regedit.exe\" or ProcessVersionInfoOriginalFileName =~ \"REGEDIT.EXE\")) and (not(((ProcessCommandLine contains \" -e \" or ProcessCommandLine contains \" /e \" or ProcessCommandLine contains \" \u2013e \" or ProcessCommandLine contains \" \u2014e \" or ProcessCommandLine contains \" \u2015e \" or ProcessCommandLine contains \" -a \" or ProcessCommandLine contains \" /a \" or ProcessCommandLine contains \" \u2013a \" or ProcessCommandLine contains \" \u2014a \" or ProcessCommandLine contains \" \u2015a \" or ProcessCommandLine contains \" -c \" or ProcessCommandLine contains \" /c \" or ProcessCommandLine contains \" \u2013c \" or ProcessCommandLine contains \" \u2014c \" or ProcessCommandLine contains \" \u2015c \") and ProcessCommandLine matches regex \":[^ \\\\\\\\]\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects events in which someone prints the contents of history files to the commandline or redirects it to a file for reconnaissance Topic: proc_creation_lnx_susp_history_recon"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (InitiatingProcessFolderPath in~ (\"/cat\", \"/head\", \"/tail\", \"/more\")) and ((ProcessCommandLine contains \"/.bash_history\" or ProcessCommandLine contains \"/.zsh_history\") or (ProcessCommandLine endswith \"_history\" or ProcessCommandLine endswith \".history\" or ProcessCommandLine endswith \"zhistory\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects usage of \"MSOHTMED\" to download arbitrary files Topic: proc_creation_win_msohtmed_download"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"ftp://\", \"http://\", \"https://\")) and (FolderPath endswith \"\\\\MSOHTMED.exe\" or ProcessVersionInfoOriginalFileName =~ \"MsoHtmEd.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects potential arbitrary file download using a Microsoft Office application Topic: proc_creation_win_office_arbitrary_cli_download"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"http://\", \"https://\")) and ((FolderPath endswith \"\\\\EXCEL.EXE\" or FolderPath endswith \"\\\\POWERPNT.EXE\" or FolderPath endswith \"\\\\WINWORD.exe\") or (ProcessVersionInfoOriginalFileName in~ (\"Excel.exe\", \"POWERPNT.EXE\", \"WinWord.exe\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the use of \"vim\" and its siblings commands to execute a shell or proxy commands.\nSuch behavior may be associated with privilege escalation, unauthorized command execution, or to break out from restricted environments.\n Topic: proc_creation_lnx_vim_shell_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\":!/\", \":lua \", \":py \", \"/bin/bash\", \"/bin/dash\", \"/bin/fish\", \"/bin/sh\", \"/bin/zsh\")) and ((ProcessCommandLine in~ (\" --cmd\", \" -c \")) and (InitiatingProcessFolderPath in~ (\"/rvim\", \"/vim\", \"/vimdiff\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detect DLL deletions from Spooler Service driver folder. This might be a potential exploitation attempt of CVE-2021-1675 Topic: file_delete_win_cve_2021_1675_print_nightmare"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName =~ \"C:\\\\Windows\\\\System32\\\\spool\\\\drivers\\\\x64\\\\3\\\\\" and InitiatingProcessFolderPath =~ \"\\\\spoolsv.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the usage of \"pypykatz\" to obtain stored credentials. Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database through Windows registry where the SAM database is stored Topic: proc_creation_win_hktl_pypykatz"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"live\", \"registry\")) and (InitiatingProcessFolderPath in~ (\"\\\\pypykatz.exe\", \"\\\\python.exe\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system Topic: proc_creation_win_susp_network_scan_loop"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"for \", \"foreach \")) and (ProcessCommandLine in~ (\"nslookup\", \"ping\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects regsvr32 execution to download/install/register new DLLs that are hosted on Web or FTP servers. Topic: proc_creation_win_regsvr32_network_pattern"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\" /i\", \" -i\")) and (FolderPath endswith \"\\\\regsvr32.exe\" or ProcessVersionInfoOriginalFileName =~ \"REGSVR32.EXE\") and (ProcessCommandLine in~ (\"ftp\", \"http\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of \"Tpmvscmgr.exe\" to create a new virtual smart card. Topic: proc_creation_win_tpmvscmgr_add_virtual_smartcard"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \"create\" and (ProcessVersionInfoOriginalFileName =~ \"TpmVscMgr.exe\" and InitiatingProcessFolderPath =~ \"\\\\tpmvscmgr.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects an executable accessing an ngrok tunneling endpoint, which could be a sign of forbidden exfiltration of data exfiltration by malicious actors Topic: net_connection_lnx_ngrok_tunnel"}, {"role": "assistant", "content": "DeviceNetworkEvents\n| where RemoteUrl in~ (\"tunnel.us.ngrok.com\", \"tunnel.eu.ngrok.com\", \"tunnel.ap.ngrok.com\", \"tunnel.au.ngrok.com\", \"tunnel.sa.ngrok.com\", \"tunnel.jp.ngrok.com\", \"tunnel.in.ngrok.com\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects disabling security tools Topic: proc_creation_macos_disable_security_tools"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((FolderPath =~ \"/bin/launchctl\" and ProcessCommandLine =~ \"unload\") and (ProcessCommandLine in~ (\"com.objective-see.lulu.plist\", \"com.objective-see.blockblock.plist\", \"com.google.santad.plist\", \"com.carbonblack.defense.daemon.plist\", \"com.carbonblack.daemon.plist\", \"at.obdev.littlesnitchd.plist\", \"com.tenablesecurity.nessusagent.plist\", \"com.opendns.osx.RoamingClientConfigUpdater.plist\", \"com.crowdstrike.falcond.plist\", \"com.crowdstrike.userdaemon.plist\", \"osquery\", \"filebeat\", \"auditbeat\", \"packetbeat\", \"td-agent\"))) or (FolderPath =~ \"/usr/sbin/spctl\" and ProcessCommandLine =~ \"disable\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of whoami, which is often used by attackers after exploitation / privilege escalation Topic: proc_creation_win_whoami_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where FolderPath endswith \"\\\\whoami.exe\" or ProcessVersionInfoOriginalFileName =~ \"whoami.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet) Topic: proc_creation_win_powershell_base64_encoded_cmd"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((FolderPath endswith \"\\\\powershell.exe\" or FolderPath endswith \"\\\\pwsh.exe\") or (ProcessVersionInfoOriginalFileName in~ (\"PowerShell.EXE\", \"pwsh.dll\"))) and (((ProcessCommandLine in~ (\" JAB\", \" SUVYI\", \" SQBFAFgA\", \" aQBlAHgA\", \" aWV4I\", \" IAA\", \" IAB\", \" UwB\", \" cwB\")) and ProcessCommandLine =~ \" -e\") or (ProcessCommandLine in~ (\".exe -ENCOD \", \" BA^J e-\"))) and (not(ProcessCommandLine =~ \" -ExecutionPolicy remotesigned \"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects usage of winget to add new additional download sources Topic: proc_creation_win_winget_add_custom_source"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"source \", \"add \")) and (FolderPath endswith \"\\\\winget.exe\" or ProcessVersionInfoOriginalFileName =~ \"winget.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of \"rundll32.exe\" with a parent process of Explorer.exe. This has been observed by variants of Raspberry Robin, as first reported by Red Canary. Topic: proc_creation_win_rundll32_parent_explorer"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((FolderPath endswith \"\\\\rundll32.exe\" or ProcessVersionInfoOriginalFileName =~ \"RUNDLL32.EXE\") and InitiatingProcessFileName =~ \"\\\\explorer.exe\") and (not((ProcessCommandLine contains \" C:\\\\Windows\\\\System32\\\\\" or ProcessCommandLine endswith \" -localserver 22d8c27b-47a1-48d1-ad08-7da7abd79617\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the use of SharpUp, a tool for local privilege escalation Topic: proc_creation_win_hktl_sharpup"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where FolderPath endswith \"\\\\SharpUp.exe\" or ProcessVersionInfoFileDescription =~ \"SharpUp\" or (ProcessCommandLine contains \"HijackablePaths\" or ProcessCommandLine contains \"UnquotedServicePath\" or ProcessCommandLine contains \"ProcessDLLHijack\" or ProcessCommandLine contains \"ModifiableServiceBinaries\" or ProcessCommandLine contains \"ModifiableScheduledTask\" or ProcessCommandLine contains \"DomainGPPPassword\" or ProcessCommandLine contains \"CachedGPPPassword\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects suspicious UltraVNC command line flag combination that indicate a auto reconnect upon execution, e.g. startup (as seen being used by Gamaredon threat group) Topic: proc_creation_win_ultravnc_susp_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine in~ (\"-autoreconnect \", \"-connect \", \"-id:\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of \"tar.exe\" in order to create a compressed file.\nAdversaries may abuse various utilities to compress or encrypt data before exfiltration.\n Topic: proc_creation_win_tar_compression"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"-c\", \"-r\", \"-u\")) and (FolderPath endswith \"\\\\tar.exe\" or ProcessVersionInfoOriginalFileName =~ \"bsdtar\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects potential network sniffing via use of network tools such as \"tshark\", \"windump\".\nNetwork sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection.\nAn adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n Topic: proc_creation_win_susp_network_sniffing"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine =~ \"-i\" and InitiatingProcessFolderPath =~ \"\\\\tshark.exe\") or InitiatingProcessFolderPath =~ \"\\\\windump.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of \"findstr\" to search for common names of security tools. Attackers often pipe the results of recon commands such as \"tasklist\" or \"whoami\" to \"findstr\" in order to filter out the results.\nThis detection focuses on the keywords that the attacker might use as a filter.\n Topic: proc_creation_win_findstr_security_keyword_lookup"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((FolderPath endswith \"\\\\find.exe\" or FolderPath endswith \"\\\\findstr.exe\") or (ProcessVersionInfoOriginalFileName in~ (\"FIND.EXE\", \"FINDSTR.EXE\"))) and (ProcessCommandLine endswith \" avira\" or ProcessCommandLine endswith \" avira\\\"\" or ProcessCommandLine endswith \" cb\" or ProcessCommandLine endswith \" cb\\\"\" or ProcessCommandLine endswith \" cylance\" or ProcessCommandLine endswith \" cylance\\\"\" or ProcessCommandLine endswith \" defender\" or ProcessCommandLine endswith \" defender\\\"\" or ProcessCommandLine endswith \" kaspersky\" or ProcessCommandLine endswith \" kaspersky\\\"\" or ProcessCommandLine endswith \" kes\" or ProcessCommandLine endswith \" kes\\\"\" or ProcessCommandLine endswith \" mc\" or ProcessCommandLine endswith \" mc\\\"\" or ProcessCommandLine endswith \" sec\" or ProcessCommandLine endswith \" sec\\\"\" or ProcessCommandLine endswith \" sentinel\" or ProcessCommandLine endswith \" sentinel\\\"\" or ProcessCommandLine endswith \" symantec\" or ProcessCommandLine endswith \" symantec\\\"\" or ProcessCommandLine endswith \" virus\" or ProcessCommandLine endswith \" virus\\\"\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects a WMI backdoor in Exchange Transport Agents via WMI event filters Topic: proc_creation_win_wmi_backdoor_exchange_transport_agent"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFileName =~ \"\\\\EdgeTransport.exe\" and (not((FolderPath =~ \"C:\\\\Windows\\\\System32\\\\conhost.exe\" or InitiatingProcessFolderPath =~ \"\\\\Bin\\\\OleConverter.exe\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects file creation activity that is related to Diamond Sleet APT activity Topic: file_event_win_apt_diamond_sleet_indicators"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName in~ (\":\\\\ProgramData\\\\4800-84DC-063A6A41C5C\", \":\\\\ProgramData\\\\clip.exe\", \":\\\\ProgramData\\\\DSROLE.dll\", \":\\\\ProgramData\\\\Forest64.exe\", \":\\\\ProgramData\\\\readme.md\", \":\\\\ProgramData\\\\Version.dll\", \":\\\\ProgramData\\\\wsmprovhost.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of WinRAR in order to compress a file with a \".dmp\"/\".dump\" extension, which could be a step in a process of dump file exfiltration. Topic: proc_creation_win_winrar_exfil_dmp_files"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\".dmp\", \".dump\", \".hdmp\")) and ((FolderPath endswith \"\\\\rar.exe\" or FolderPath endswith \"\\\\winrar.exe\") or ProcessVersionInfoFileDescription =~ \"Command line RAR\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects file downloads directly from IP address URL using curl.exe Topic: proc_creation_win_curl_download_direct_ip_exec"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((ProcessCommandLine in~ (\" -O\", \"--remote-name\", \"--output\")) and ProcessCommandLine =~ \"http\" and (FolderPath endswith \"\\\\curl.exe\" or ProcessVersionInfoOriginalFileName =~ \"curl.exe\") and ProcessCommandLine matches regex \"://[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\") and (not((ProcessCommandLine endswith \".bat\" or ProcessCommandLine endswith \".bat\\\"\" or ProcessCommandLine endswith \".dat\" or ProcessCommandLine endswith \".dat\\\"\" or ProcessCommandLine endswith \".dll\" or ProcessCommandLine endswith \".dll\\\"\" or ProcessCommandLine endswith \".exe\" or ProcessCommandLine endswith \".exe\\\"\" or ProcessCommandLine endswith \".gif\" or ProcessCommandLine endswith \".gif\\\"\" or ProcessCommandLine endswith \".hta\" or ProcessCommandLine endswith \".hta\\\"\" or ProcessCommandLine endswith \".jpeg\" or ProcessCommandLine endswith \".jpeg\\\"\" or ProcessCommandLine endswith \".log\" or ProcessCommandLine endswith \".log\\\"\" or ProcessCommandLine endswith \".msi\" or ProcessCommandLine endswith \".msi\\\"\" or ProcessCommandLine endswith \".png\" or ProcessCommandLine endswith \".png\\\"\" or ProcessCommandLine endswith \".ps1\" or ProcessCommandLine endswith \".ps1\\\"\" or ProcessCommandLine endswith \".psm1\" or ProcessCommandLine endswith \".psm1\\\"\" or ProcessCommandLine endswith \".vbe\" or ProcessCommandLine endswith \".vbe\\\"\" or ProcessCommandLine endswith \".vbs\" or ProcessCommandLine endswith \".vbs\\\"\" or ProcessCommandLine endswith \".bat'\" or ProcessCommandLine endswith \".dat'\" or ProcessCommandLine endswith \".dll'\" or ProcessCommandLine endswith \".exe'\" or ProcessCommandLine endswith \".gif'\" or ProcessCommandLine endswith \".hta'\" or ProcessCommandLine endswith \".jpeg'\" or ProcessCommandLine endswith \".log'\" or ProcessCommandLine endswith \".msi'\" or ProcessCommandLine endswith \".png'\" or ProcessCommandLine endswith \".ps1'\" or ProcessCommandLine endswith \".psm1'\" or ProcessCommandLine endswith \".vbe'\" or ProcessCommandLine endswith \".vbs'\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of different compiled Windows binaries of the impacket toolset (based on names or part of their names - could lead to false positives) Topic: proc_creation_win_hktl_impacket_tools"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (FolderPath contains \"\\\\goldenPac\" or FolderPath contains \"\\\\karmaSMB\" or FolderPath contains \"\\\\kintercept\" or FolderPath contains \"\\\\ntlmrelayx\" or FolderPath contains \"\\\\rpcdump\" or FolderPath contains \"\\\\samrdump\" or FolderPath contains \"\\\\secretsdump\" or FolderPath contains \"\\\\smbexec\" or FolderPath contains \"\\\\smbrelayx\" or FolderPath contains \"\\\\wmiexec\" or FolderPath contains \"\\\\wmipersist\") or (FolderPath endswith \"\\\\atexec_windows.exe\" or FolderPath endswith \"\\\\dcomexec_windows.exe\" or FolderPath endswith \"\\\\dpapi_windows.exe\" or FolderPath endswith \"\\\\findDelegation_windows.exe\" or FolderPath endswith \"\\\\GetADUsers_windows.exe\" or FolderPath endswith \"\\\\GetNPUsers_windows.exe\" or FolderPath endswith \"\\\\getPac_windows.exe\" or FolderPath endswith \"\\\\getST_windows.exe\" or FolderPath endswith \"\\\\getTGT_windows.exe\" or FolderPath endswith \"\\\\GetUserSPNs_windows.exe\" or FolderPath endswith \"\\\\ifmap_windows.exe\" or FolderPath endswith \"\\\\mimikatz_windows.exe\" or FolderPath endswith \"\\\\netview_windows.exe\" or FolderPath endswith \"\\\\nmapAnswerMachine_windows.exe\" or FolderPath endswith \"\\\\opdump_windows.exe\" or FolderPath endswith \"\\\\psexec_windows.exe\" or FolderPath endswith \"\\\\rdp_check_windows.exe\" or FolderPath endswith \"\\\\sambaPipe_windows.exe\" or FolderPath endswith \"\\\\smbclient_windows.exe\" or FolderPath endswith \"\\\\smbserver_windows.exe\" or FolderPath endswith \"\\\\sniff_windows.exe\" or FolderPath endswith \"\\\\sniffer_windows.exe\" or FolderPath endswith \"\\\\split_windows.exe\" or FolderPath endswith \"\\\\ticketer_windows.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects setting of a new registry value related to BgInfo configuration, which can be abused to execute custom VBScript via \"BgInfo.exe\" Topic: registry_set_bginfo_custom_vbscript"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where ActionType =~ \"RegistryValueSet\" and RegistryKey endswith \"\\\\Software\\\\Winternals\\\\BGInfo\\\\UserFields*\" and RegistryValueData startswith \"4\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects a method to load DLL via LSASS process using an undocumented Registry key Topic: registry_event_susp_lsass_dll_load"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where (RegistryKey contains \"\\\\CurrentControlSet\\\\Services\\\\NTDS\\\\DirectoryServiceExtPt\" or RegistryKey contains \"\\\\CurrentControlSet\\\\Services\\\\NTDS\\\\LsaDbExtPt\") and (not((InitiatingProcessFolderPath =~ \"C:\\\\Windows\\\\system32\\\\lsass.exe\" and (RegistryValueData in~ (\"%%systemroot%%\\\\system32\\\\ntdsa.dll\", \"%%systemroot%%\\\\system32\\\\lsadb.dll\")))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects Wscript/Cscript executing a file with an uncommon (i.e. non-script) extension Topic: proc_creation_win_wscript_cscript_uncommon_extension_exec"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\".csv\", \".dat\", \".doc\", \".gif\", \".jpeg\", \".jpg\", \".png\", \".ppt\", \".txt\", \".xls\", \".xml\")) and ((ProcessVersionInfoOriginalFileName in~ (\"wscript.exe\", \"cscript.exe\")) or (FolderPath endswith \"\\\\wscript.exe\" or FolderPath endswith \"\\\\cscript.exe\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects patterns as noticed in exploitation of Windows CVE-2021-31979 CVE-2021-33771 vulnerability and DevilsTongue malware by threat group Sourgum Topic: registry_set_cve_2021_31979_cve_2021_33771_exploits"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where (RegistryKey endswith \"CLSID\\\\{CF4CC405-E2C5-4DDD-B3CE-5E7582D8C9FA}\\\\InprocServer32\\\\(Default)\" or RegistryKey endswith \"CLSID\\\\{7C857801-7381-11CF-884D-00AA004B2E24}\\\\InProcServer32\\\\(Default)\") and (not((RegistryValueData endswith \"system32\\\\wbem\\\\wmiutils.dll\" or RegistryValueData endswith \"system32\\\\wbem\\\\wbemsvc.dll\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Files with well-known filenames (parts of credential dump software or files produced by them) creation Topic: file_event_win_cred_dump_tools_dropped_files"}, {"role": "assistant", "content": "DeviceFileEvents\n| where (FolderPath contains \"\\\\fgdump-log\" or FolderPath contains \"\\\\kirbi\" or FolderPath contains \"\\\\pwdump\" or FolderPath contains \"\\\\pwhashes\" or FolderPath contains \"\\\\wce_ccache\" or FolderPath contains \"\\\\wce_krbtkts\") or (FolderPath endswith \"\\\\cachedump.exe\" or FolderPath endswith \"\\\\cachedump64.exe\" or FolderPath endswith \"\\\\DumpExt.dll\" or FolderPath endswith \"\\\\DumpSvc.exe\" or FolderPath endswith \"\\\\Dumpy.exe\" or FolderPath endswith \"\\\\fgexec.exe\" or FolderPath endswith \"\\\\lsremora.dll\" or FolderPath endswith \"\\\\lsremora64.dll\" or FolderPath endswith \"\\\\NTDS.out\" or FolderPath endswith \"\\\\procdump64.exe\" or FolderPath endswith \"\\\\pstgdump.exe\" or FolderPath endswith \"\\\\pwdump.exe\" or FolderPath endswith \"\\\\SAM.out\" or FolderPath endswith \"\\\\SECURITY.out\" or FolderPath endswith \"\\\\servpw.exe\" or FolderPath endswith \"\\\\servpw64.exe\" or FolderPath endswith \"\\\\SYSTEM.out\" or FolderPath endswith \"\\\\test.pwd\" or FolderPath endswith \"\\\\wceaux.dll\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects a file ending in jse, vbe, js, vba, vbs written by cscript.exe or wscript.exe Topic: file_event_win_cscript_wscript_dropper"}, {"role": "assistant", "content": "DeviceFileEvents\n| where (FileName in~ (\".jse\", \".vbe\", \".js\", \".vba\", \".vbs\")) and (InitiatingProcessFolderPath in~ (\"\\\\wscript.exe\", \"\\\\cscript.exe\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects modification of autostart extensibility point (ASEP) in registry. Topic: registry_set_asep_reg_keys_modification_currentversion_nt"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where RegistryKey contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\" and (RegistryKey contains \"\\\\Winlogon\\\\VmApplet\" or RegistryKey contains \"\\\\Winlogon\\\\Userinit\" or RegistryKey contains \"\\\\Winlogon\\\\Taskman\" or RegistryKey contains \"\\\\Winlogon\\\\Shell\" or RegistryKey contains \"\\\\Winlogon\\\\GpExtensions\" or RegistryKey contains \"\\\\Winlogon\\\\AppSetup\" or RegistryKey contains \"\\\\Winlogon\\\\AlternateShells\\\\AvailableShells\" or RegistryKey contains \"\\\\Windows\\\\IconServiceLib\" or RegistryKey contains \"\\\\Windows\\\\Appinit_Dlls\" or RegistryKey contains \"\\\\Image File Execution Options\" or RegistryKey contains \"\\\\Font Drivers\" or RegistryKey contains \"\\\\Drivers32\" or RegistryKey contains \"\\\\Windows\\\\Run\" or RegistryKey contains \"\\\\Windows\\\\Load\") and (not((InitiatingProcessFolderPath =~ \"\\\\MicrosoftEdgeUpdate.exe\" or RegistryValueData =~ \"(Empty)\" or (RegistryKey endswith \"\\\\Image File Execution Options*\" and (RegistryKey endswith \"\\\\DisableExceptionChainValidation\" or RegistryKey endswith \"\\\\MitigationOptions\")) or ((RegistryKey endswith \"\\\\ClickToRunStore\\\\HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion*\" or RegistryKey endswith \"\\\\ClickToRun\\\\REGISTRY\\\\MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion*\") or (InitiatingProcessFolderPath in~ (\"C:\\\\Program Files\\\\Microsoft Office\\\\root\\\\integration\\\\integrator.exe\", \"C:\\\\Program Files (x86)\\\\Microsoft Office\\\\root\\\\integration\\\\integrator.exe\"))) or InitiatingProcessFolderPath =~ \"\\\\ngen.exe\" or InitiatingProcessFolderPath =~ \"\\\\OfficeClickToRun.exe\" or (RegistryValueData endswith \"\\\\AppData\\\\Local\\\\Microsoft\\\\OneDrive\\\\Update\\\\OneDriveSetup.exe\\\"\" and RegistryValueData startswith \"C:\\\\Windows\\\\system32\\\\cmd.exe /q /c del /q \\\"C:\\\\Users\\\\\" and InitiatingProcessFolderPath =~ \"\\\\AppData\\\\Local\\\\Microsoft\\\\OneDrive\\\\StandaloneUpdater\\\\OneDriveSetup.exe\" and RegistryKey endswith \"\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\\\\Delete Cached Update Binary\") or ((RegistryValueData in~ (\"DWORD (0x00000009)\", \"DWORD (0x000003c0)\")) and InitiatingProcessFolderPath =~ \"C:\\\\Windows\\\\system32\\\\svchost.exe\" and (RegistryKey contains \"\\\\Winlogon\\\\GPExtensions\\\\{827D319E-6EAC-11D2-A4EA-00C04F79F83A}\\\\PreviousPolicyAreas\" or RegistryKey contains \"\\\\Winlogon\\\\GPExtensions\\\\{827D319E-6EAC-11D2-A4EA-00C04F79F83A}\\\\MaxNoGPOListChangesInterval\")))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of the SharpLDAPmonitor. Which can monitor the creation, deletion and changes to LDAP objects. Topic: proc_creation_win_hktl_sharp_ldap_monitor"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"/user:\", \"/pass:\", \"/dcip:\")) or (FolderPath endswith \"\\\\SharpLDAPmonitor.exe\" or ProcessVersionInfoOriginalFileName =~ \"SharpLDAPmonitor.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects installation of a potentially suspicious new shim with an uncommon extension using sdbinst.exe.\nAdversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims\n Topic: proc_creation_win_sdbinst_susp_extension"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (FolderPath endswith \"\\\\sdbinst.exe\" or ProcessVersionInfoOriginalFileName =~ \"sdbinst.exe\") and (not((ProcessCommandLine =~ \"\" or ProcessCommandLine =~ \".sdb\" or ((ProcessCommandLine endswith \" -c\" or ProcessCommandLine endswith \" -f\" or ProcessCommandLine endswith \" -mm\" or ProcessCommandLine endswith \" -t\") or ProcessCommandLine contains \" -m -bg\") or isnull(ProcessCommandLine))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of a signed binary dropped by Kaspersky Lab Products Remover (kavremover) which can be abused as a LOLBIN to execute arbitrary commands and binaries. Topic: proc_creation_win_kavremover_uncommon_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \" run run-cmd \" and (not((InitiatingProcessFileName in~ (\"\\\\cleanapi.exe\", \"\\\\kavremover.exe\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects suspicious child processes of the SQLServer process. This could indicate potential RCE or SQL Injection. Topic: proc_creation_win_mssql_susp_child_process"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (InitiatingProcessFileName =~ \"\\\\sqlservr.exe\" and (InitiatingProcessFolderPath in~ (\"\\\\bash.exe\", \"\\\\bitsadmin.exe\", \"\\\\cmd.exe\", \"\\\\netstat.exe\", \"\\\\nltest.exe\", \"\\\\ping.exe\", \"\\\\powershell.exe\", \"\\\\pwsh.exe\", \"\\\\regsvr32.exe\", \"\\\\rundll32.exe\", \"\\\\sh.exe\", \"\\\\systeminfo.exe\", \"\\\\tasklist.exe\", \"\\\\wsl.exe\"))) and (not((ProcessCommandLine startswith \"\\\"C:\\\\Windows\\\\system32\\\\cmd.exe\\\" \" and FolderPath =~ \"C:\\\\Windows\\\\System32\\\\cmd.exe\" and InitiatingProcessFileName =~ \"C:\\\\Program Files\\\\Microsoft SQL Server\\\\\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects file access requests to Windows Outlook Mail by uncommon processes.\nCould indicate potential attempt of credential stealing.\nRequires heavy baselining before usage\n Topic: file_access_win_office_outlook_mail_credential"}, {"role": "assistant", "content": "DeviceFileEvents\n| where (FileName contains \"\\\\AppData\\\\Local\\\\Comms\\\\Unistore\\\\data\" or FileName endswith \"\\\\AppData\\\\Local\\\\Comms\\\\UnistoreDB\\\\store.vol\") and (not(((InitiatingProcessFolderPath in~ (\"C:\\\\Program Files (x86)\\\\\", \"C:\\\\Program Files\\\\\", \"C:\\\\Windows\\\\system32\\\\\", \"C:\\\\Windows\\\\SysWOW64\\\\\")) or InitiatingProcessFolderPath =~ \"System\"))) and (not(((InitiatingProcessFolderPath in~ (\"\\\\MpCopyAccelerator.exe\", \"\\\\MsMpEng.exe\")) or (InitiatingProcessFolderPath in~ (\"\\\\thor64.exe\", \"\\\\thor.exe\")))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of Microsoft bash launcher with the \"-c\" flag.\nThis can be used to potentially bypass defenses and execute Linux or Windows-based binaries directly via bash.\n Topic: proc_creation_win_bash_command_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \" -c \" and ((FolderPath endswith \":\\\\Windows\\\\System32\\\\bash.exe\" or FolderPath endswith \":\\\\Windows\\\\SysWOW64\\\\bash.exe\") or ProcessVersionInfoOriginalFileName =~ \"Bash.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects modification of autostart extensibility point (ASEP) in registry. Topic: registry_set_asep_reg_keys_modification_classes"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where (RegistryKey contains \"\\\\Software\\\\Classes\" and (RegistryKey contains \"\\\\Folder\\\\ShellEx\\\\ExtShellFolderViews\" or RegistryKey contains \"\\\\Folder\\\\ShellEx\\\\DragDropHandlers\" or RegistryKey contains \"\\\\Folder\\\\Shellex\\\\ColumnHandlers\" or RegistryKey contains \"\\\\Filter\" or RegistryKey contains \"\\\\Exefile\\\\Shell\\\\Open\\\\Command\\\\(Default)\" or RegistryKey contains \"\\\\Directory\\\\Shellex\\\\DragDropHandlers\" or RegistryKey contains \"\\\\Directory\\\\Shellex\\\\CopyHookHandlers\" or RegistryKey contains \"\\\\CLSID\\\\{AC757296-3522-4E11-9862-C17BE5A1767E}\\\\Instance\" or RegistryKey contains \"\\\\CLSID\\\\{ABE3B9A4-257D-4B97-BD1A-294AF496222E}\\\\Instance\" or RegistryKey contains \"\\\\CLSID\\\\{7ED96837-96F0-4812-B211-F13C24117ED3}\\\\Instance\" or RegistryKey contains \"\\\\CLSID\\\\{083863F1-70DE-11d0-BD40-00A0C911CE86}\\\\Instance\" or RegistryKey contains \"\\\\Classes\\\\AllFileSystemObjects\\\\ShellEx\\\\DragDropHandlers\" or RegistryKey contains \"\\\\.exe\" or RegistryKey contains \"\\\\.cmd\" or RegistryKey contains \"\\\\ShellEx\\\\PropertySheetHandlers\" or RegistryKey contains \"\\\\ShellEx\\\\ContextMenuHandlers\")) and (not((RegistryValueData =~ \"(Empty)\" or RegistryValueData =~ \"{807583E5-5146-11D5-A672-00B0D022E945}\" or InitiatingProcessFolderPath =~ \"C:\\\\Windows\\\\System32\\\\drvinst.exe\" or (InitiatingProcessFolderPath =~ \"C:\\\\Windows\\\\System32\\\\svchost.exe\" and RegistryKey endswith \"\\\\lnkfile\\\\shellex\\\\ContextMenuHandlers*\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects patterns as noticed in exploitation of Serv-U CVE-2021-35211 vulnerability by threat group DEV-0322 Topic: proc_creation_win_exploit_cve_2021_35211_servu"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \"whoami\" and ((ProcessCommandLine in~ (\"./Client/Common/\", \".\\\\Client\\\\Common\\\\\")) or ProcessCommandLine =~ \"C:\\\\Windows\\\\Temp\\\\Serv-U.bat\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects Russian group activity as described in Global Threat Report 2019 by Crowdstrike Topic: proc_creation_win_apt_bear_activity_gtr19"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"adexplorer -snapshot \\\"\\\" c:\\\\users\\\\\", \"\\\\downloads\\\\\", \".snp\")) or (ProcessCommandLine in~ (\"xcopy /S /E /C /Q /H \\\\\\\\\", \"\\\\sysvol\\\\\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects scheduled task creations or modification on a suspicious schedule type Topic: proc_creation_win_schtasks_schedule_type"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((FolderPath endswith \"\\\\schtasks.exe\" or ProcessVersionInfoOriginalFileName =~ \"schtasks.exe\") and (ProcessCommandLine in~ (\" ONLOGON \", \" ONSTART \", \" ONCE \", \" ONIDLE \"))) and (not((ProcessCommandLine in~ (\"NT AUT\", \" SYSTEM\", \"HIGHEST\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the use of a renamed SysInternals Sdelete, which is something an administrator shouldnt do (the renaming) Topic: proc_creation_win_renamed_sysinternals_sdelete"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessVersionInfoOriginalFileName =~ \"sdelete.exe\" and (not((InitiatingProcessFolderPath in~ (\"\\\\sdelete.exe\", \"\\\\sdelete64.exe\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects default PsExec service filename which indicates PsExec service installation and execution Topic: file_event_win_sysinternals_psexec_service"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName =~ \"\\\\PSEXESVC.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detect usage of the \"runexehelper.exe\" binary as a proxy to launch other programs Topic: proc_creation_win_lolbin_runexehelper"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFileName =~ \"\\\\runexehelper.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects threat actors proxy executing code and bypassing application controls by leveraging wmic and the `/FORMAT` argument switch to download and execute an XSL file (i.e js, vbs, etc). Topic: image_load_wmic_remote_xsl_scripting_dlls"}, {"role": "assistant", "content": "DeviceImageLoadEvents\n| where (FolderPath endswith \"\\\\jscript.dll\" or FolderPath endswith \"\\\\vbscript.dll\") and InitiatingProcessFolderPath =~ \"\\\\wmic.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22) Topic: file_event_win_uac_bypass_consent_comctl32"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName =~ \"\\\\comctl32.dll\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of the \"wusa.exe\" (Windows Update Standalone Installer) utility by a parent process that is located in a suspicious location.\nAttackers could instantiate an instance of \"wusa.exe\" in order to bypass User Account Control (UAC). They can duplicate the access token from \"wusa.exe\" to gain elevated privileges.\n Topic: proc_creation_win_wusa_susp_parent_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFolderPath =~ \"\\\\wusa.exe\" and ((InitiatingProcessFileName in~ (\":\\\\Perflogs\\\\\", \":\\\\Users\\\\Public\\\\\", \":\\\\Windows\\\\Temp\\\\\", \"\\\\Appdata\\\\Local\\\\Temp\\\\\", \"\\\\Temporary Internet\")) or ((InitiatingProcessFolderPath contains \":\\\\Users\\\\\" and InitiatingProcessFolderPath contains \"\\\\Favorites\\\\\") or (InitiatingProcessFolderPath contains \":\\\\Users\\\\\" and InitiatingProcessFolderPath contains \"\\\\Favourites\\\\\") or (InitiatingProcessFolderPath contains \":\\\\Users\\\\\" and InitiatingProcessFolderPath contains \"\\\\Contacts\\\\\") or (InitiatingProcessFolderPath contains \":\\\\Users\\\\\" and InitiatingProcessFolderPath contains \"\\\\Pictures\\\\\"))) and (not(ProcessCommandLine =~ \".msu\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects files dropped by Winnti as described in RedMimicry Winnti playbook Topic: file_event_win_redmimicry_winnti_filedrop"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName in~ (\"\\\\gthread-3.6.dll\", \"\\\\sigcmm-2.4.dll\", \"\\\\Windows\\\\Temp\\\\tmp.bat\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects javaw.exe in AppData folder as used by Adwind / JRAT Topic: file_event_win_mal_adwind"}, {"role": "assistant", "content": "DeviceFileEvents\n| where (FolderPath contains \"\\\\AppData\\\\Roaming\\\\Oracle\\\\bin\\\\java\" and FolderPath contains \".exe\") or (FolderPath contains \"\\\\Retrive\" and FolderPath contains \".vbs\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the removal of Sysmon, which could be a potential attempt at defense evasion Topic: proc_creation_win_sysinternals_sysmon_uninstall"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((FolderPath endswith \"\\\\Sysmon64.exe\" or FolderPath endswith \"\\\\Sysmon.exe\") or ProcessVersionInfoFileDescription =~ \"System activity monitor\") and (ProcessCommandLine contains \"-u\" or ProcessCommandLine contains \"/u\" or ProcessCommandLine contains \"\u2013u\" or ProcessCommandLine contains \"\u2014u\" or ProcessCommandLine contains \"\u2015u\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects Stracciatella which executes a Powershell runspace from within C# (aka SharpPick technique) with AMSI, ETW and Script Block Logging disabled based on PE metadata characteristics. Topic: proc_creation_win_hktl_stracciatella_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where FolderPath endswith \"\\\\Stracciatella.exe\" or ProcessVersionInfoOriginalFileName =~ \"Stracciatella.exe\" or ProcessVersionInfoFileDescription =~ \"Stracciatella\" or (SHA256 startswith \"9d25e61ec1527e2a69d7c2a4e3fe2fe15890710c198a66a9f25d99fdf6c7b956\" or SHA256 startswith \"fd16609bd9830c63b9413671678bb159b89c357d21942ddbb6b93add808d121a\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects findstring commands that include the keyword lsass, which indicates recon actviity for the LSASS process PID Topic: proc_creation_win_findstr_lsass"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine =~ \"lsass\" and ((FolderPath endswith \"\\\\find.exe\" or FolderPath endswith \"\\\\findstr.exe\") or (ProcessVersionInfoOriginalFileName in~ (\"FIND.EXE\", \"FINDSTR.EXE\")))) or (ProcessCommandLine contains \" -i \\\"lsass\" or ProcessCommandLine contains \" /i \\\"lsass\" or ProcessCommandLine contains \" \u2013i \\\"lsass\" or ProcessCommandLine contains \" \u2014i \\\"lsass\" or ProcessCommandLine contains \" \u2015i \\\"lsass\" or ProcessCommandLine contains \" -i lsass.exe\" or ProcessCommandLine contains \" /i lsass.exe\" or ProcessCommandLine contains \" \u2013i lsass.exe\" or ProcessCommandLine contains \" \u2014i lsass.exe\" or ProcessCommandLine contains \" \u2015i lsass.exe\" or ProcessCommandLine contains \"findstr \\\"lsass\" or ProcessCommandLine contains \"findstr lsass\" or ProcessCommandLine contains \"findstr.exe \\\"lsass\" or ProcessCommandLine contains \"findstr.exe lsass\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the use of KrbRelay, a Kerberos relaying tool Topic: proc_creation_win_hktl_krbrelay"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\" -spn \", \" -clsid \", \" -rbcd \")) or (ProcessCommandLine in~ (\"shadowcred\", \"clsid\", \"spn\")) or (ProcessCommandLine in~ (\"spn \", \"session \", \"clsid \")) or (FolderPath endswith \"\\\\KrbRelay.exe\" or ProcessVersionInfoOriginalFileName =~ \"KrbRelay.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of GfxDownloadWrapper.exe with a URL as an argument to download file. Topic: proc_creation_win_gfxdownloadwrapper_arbitrary_file_download"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((ProcessCommandLine in~ (\"http://\", \"https://\")) and InitiatingProcessFolderPath =~ \"\\\\GfxDownloadWrapper.exe\") and (not(ProcessCommandLine =~ \"https://gameplayapi.intel.com/\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of \"whoami.exe\" by privileged accounts that are often abused by threat actors Topic: proc_creation_win_whoami_execution_from_high_priv_process"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessVersionInfoOriginalFileName =~ \"whoami.exe\" or FolderPath endswith \"\\\\whoami.exe\") and (InitiatingProcessAccountName in~ (\"AUTHORI\", \"AUTORI\", \"TrustedInstaller\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the use of the Microsoft Windows Resource Leak Diagnostic tool \"rdrleakdiag.exe\" to dump process memory Topic: proc_creation_win_rdrleakdiag_process_dumping"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (FolderPath endswith \"\\\\rdrleakdiag.exe\" or ProcessVersionInfoOriginalFileName =~ \"RdrLeakDiag.exe\") and (ProcessCommandLine contains \"-memdmp\" or ProcessCommandLine contains \"/memdmp\" or ProcessCommandLine contains \"\u2013memdmp\" or ProcessCommandLine contains \"\u2014memdmp\" or ProcessCommandLine contains \"\u2015memdmp\" or ProcessCommandLine contains \"fullmemdmp\") and (ProcessCommandLine contains \" -o \" or ProcessCommandLine contains \" /o \" or ProcessCommandLine contains \" \u2013o \" or ProcessCommandLine contains \" \u2014o \" or ProcessCommandLine contains \" \u2015o \" or ProcessCommandLine contains \" -p \" or ProcessCommandLine contains \" /p \" or ProcessCommandLine contains \" \u2013p \" or ProcessCommandLine contains \" \u2014p \" or ProcessCommandLine contains \" \u2015p \")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects system discovery activity carried out by Pikabot, such as incl. network, user info and domain groups.\nThe malware Pikabot has been seen to use this technique as part of its C2-botnet registration with a short collection time frame (less than 1 minute).\n Topic: proc_creation_win_malware_pikabot_discovery"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (InitiatingProcessParentFileName endswith \"\\\\rundll32.exe\" or (InitiatingProcessFolderPath endswith \"\\\\SearchFilterHost.exe\" or InitiatingProcessFolderPath endswith \"\\\\SearchProtocolHost.exe\")) and (ProcessCommandLine in~ (\"ipconfig.exe /all\", \"netstat.exe -aon\", \"whoami.exe /all\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects potential DLL sideloading of \"EACore.dll\" Topic: image_load_side_load_eacore"}, {"role": "assistant", "content": "DeviceImageLoadEvents\n| where FolderPath endswith \"\\\\EACore.dll\" and (not(((InitiatingProcessFolderPath contains \"C:\\\\Program Files\\\\Electronic Arts\\\\EA Desktop\\\\\" and InitiatingProcessFolderPath contains \"\\\\EACoreServer.exe\") and FolderPath startswith \"C:\\\\Program Files\\\\Electronic Arts\\\\EA Desktop\\\\\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects events that appear when a user click on a link file with a powershell command in it Topic: proc_creation_win_susp_embed_exe_lnk"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where FolderPath =~ \"C:\\\\Windows\\\\System32\\\\cmd.exe\" and InitiatingProcessFileName =~ \"C:\\\\Windows\\\\explorer.exe\" and (ProcessCommandLine in~ (\"powershell\", \".lnk\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd described in CVE-2019-1378 Topic: proc_creation_win_exploit_cve_2019_1378"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (InitiatingProcessCommandLine in~ (\"SetupComplete.cmd\", \"PartnerSetupComplete.cmd\")) and (not((InitiatingProcessFolderPath in~ (\"C:\\\\Windows\\\\System32\\\\\", \"C:\\\\Windows\\\\SysWOW64\\\\\", \"C:\\\\Windows\\\\WinSxS\\\\\", \"C:\\\\Windows\\\\Setup\\\\\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the creation of shell scripts under the \"profile.d\" path. Topic: file_event_lnx_susp_shell_script_under_profile_directory"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName in~ (\".csh\", \".sh\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the usage of the unsafe bpftrace option Topic: proc_creation_lnx_bpftrace_unsafe_option_usage"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \"--unsafe\" and InitiatingProcessFolderPath =~ \"bpftrace\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects possible malicious execution of JXA in-memory via OSAScript Topic: proc_creation_macos_jxa_in_memory_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((ProcessCommandLine contains \" -l \" and ProcessCommandLine contains \"JavaScript\") or ProcessCommandLine contains \".js\") and (ProcessCommandLine in~ (\"osascript\", \" -e \", \"eval\", \"NSData.dataWithContentsOfURL\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects potential web shell execution from the ScreenConnect server process. Topic: proc_creation_win_remote_access_tools_screenconnect_webshell"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFileName =~ \"\\\\ScreenConnect.Service.exe\" and (InitiatingProcessFolderPath in~ (\"\\\\cmd.exe\", \"\\\\csc.exe\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Adversaries may acquire credentials from web browsers by reading files specific to the target browser.\nWeb browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future.\nWeb browsers typically store the credentials in an encrypted format within a credential store.\n Topic: proc_creation_win_susp_copy_browser_data"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((ProcessCommandLine contains \"copy-item\" or ProcessCommandLine contains \"copy \" or ProcessCommandLine contains \"cpi \" or ProcessCommandLine contains \" cp \" or ProcessCommandLine contains \"move \" or ProcessCommandLine contains \"move-item\" or ProcessCommandLine contains \" mi \" or ProcessCommandLine contains \" mv \") or (FolderPath endswith \"\\\\xcopy.exe\" or FolderPath endswith \"\\\\robocopy.exe\") or (ProcessVersionInfoOriginalFileName in~ (\"XCOPY.EXE\", \"robocopy.exe\"))) and (ProcessCommandLine in~ (\"\\\\Amigo\\\\User Data\", \"\\\\BraveSoftware\\\\Brave-Browser\\\\User Data\", \"\\\\CentBrowser\\\\User Data\", \"\\\\Chromium\\\\User Data\", \"\\\\CocCoc\\\\Browser\\\\User Data\", \"\\\\Comodo\\\\Dragon\\\\User Data\", \"\\\\Elements Browser\\\\User Data\", \"\\\\Epic Privacy Browser\\\\User Data\", \"\\\\Google\\\\Chrome Beta\\\\User Data\", \"\\\\Google\\\\Chrome SxS\\\\User Data\", \"\\\\Google\\\\Chrome\\\\User Data\\\\\", \"\\\\Kometa\\\\User Data\", \"\\\\Maxthon5\\\\Users\", \"\\\\Microsoft\\\\Edge\\\\User Data\", \"\\\\Mozilla\\\\Firefox\\\\Profiles\", \"\\\\Nichrome\\\\User Data\", \"\\\\Opera Software\\\\Opera GX Stable\\\\\", \"\\\\Opera Software\\\\Opera Neon\\\\User Data\", \"\\\\Opera Software\\\\Opera Stable\\\\\", \"\\\\Orbitum\\\\User Data\", \"\\\\QIP Surf\\\\User Data\", \"\\\\Sputnik\\\\User Data\", \"\\\\Torch\\\\User Data\", \"\\\\uCozMedia\\\\Uran\\\\User Data\", \"\\\\Vivaldi\\\\User Data\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects when verclsid.exe is used to run COM object via GUID Topic: proc_creation_win_verclsid_runs_com"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"/S\", \"/C\")) and (FolderPath endswith \"\\\\verclsid.exe\" or ProcessVersionInfoOriginalFileName =~ \"verclsid.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects when an attacker tries to add a new network provider in order to dump clear text credentials, similar to how the NPPSpy tool does it Topic: registry_set_new_network_provider"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where (RegistryKey endswith \"\\\\System\\\\CurrentControlSet\\\\Services*\" and RegistryKey contains \"\\\\NetworkProvider\") and (not(((RegistryKey contains \"\\\\System\\\\CurrentControlSet\\\\Services\\\\WebClient\\\\NetworkProvider\" or RegistryKey contains \"\\\\System\\\\CurrentControlSet\\\\Services\\\\LanmanWorkstation\\\\NetworkProvider\" or RegistryKey contains \"\\\\System\\\\CurrentControlSet\\\\Services\\\\RDPNP\\\\NetworkProvider\") or InitiatingProcessFolderPath =~ \"C:\\\\Windows\\\\System32\\\\poqexec.exe\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel.\nThe data may also be sent to an alternate network location from the main command and control server.\n Topic: net_connection_win_susp_outbound_smtp_connections"}, {"role": "assistant", "content": "DeviceNetworkEvents\n| where (InitiatingProcessId =~ \"true\" and (RemotePort in~ (\"25\", \"587\", \"465\", \"2525\"))) and (not(((InitiatingProcessFolderPath in~ (\"\\\\thunderbird.exe\", \"\\\\outlook.exe\")) or InitiatingProcessFolderPath =~ \"C:\\\\Program Files\\\\Microsoft\\\\Exchange Server\\\\\" or InitiatingProcessFolderPath =~ \"C:\\\\Program Files\\\\WindowsApps\\\\microsoft.windowscommunicationsapps_\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects a script interpreter (Wscript/Cscript) initiating a local network connection to download or execute a script hosted on a shared folder.\n Topic: net_connection_win_wscript_cscript_local_connection"}, {"role": "assistant", "content": "DeviceNetworkEvents\n| where InitiatingProcessId =~ \"true\" and (InitiatingProcessRemoteSessionDeviceName in~ (\"127.0.0.0/8\", \"10.0.0.0/8\", \"172.16.0.0/12\", \"192.168.0.0/16\", \"169.254.0.0/16\", \"::1/128\", \"fe80::/10\", \"fc00::/7\")) and (InitiatingProcessFolderPath in~ (\"\\\\wscript.exe\", \"\\\\cscript.exe\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects potentially suspicious child processes of \"Diskshadow.exe\". This could be an attempt to bypass parent/child relationship detection or application whitelisting rules. Topic: proc_creation_win_diskshadow_child_process_susp"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFileName =~ \"\\\\diskshadow.exe\" and (InitiatingProcessFolderPath in~ (\"\\\\certutil.exe\", \"\\\\cscript.exe\", \"\\\\mshta.exe\", \"\\\\powershell.exe\", \"\\\\pwsh.exe\", \"\\\\regsvr32.exe\", \"\\\\rundll32.exe\", \"\\\\wscript.exe\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation Topic: proc_creation_win_hwp_exploits"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFileName =~ \"\\\\Hwp.exe\" and InitiatingProcessFolderPath =~ \"\\\\gbb.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of the \"mofcomp\" utility as a child of a suspicious shell or script running utility or by having a suspicious path in the commandline.\nThe \"mofcomp\" utility parses a file containing MOF statements and adds the classes and class instances defined in the file to the WMI repository.\nAttackers abuse this utility to install malicious MOF scripts\n Topic: proc_creation_win_mofcomp_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (((InitiatingProcessFolderPath endswith \"\\\\cmd.exe\" or InitiatingProcessFolderPath endswith \"\\\\powershell.exe\" or InitiatingProcessFolderPath endswith \"\\\\pwsh.exe\" or InitiatingProcessFolderPath endswith \"\\\\wsl.exe\" or InitiatingProcessFolderPath endswith \"\\\\wscript.exe\" or InitiatingProcessFolderPath endswith \"\\\\cscript.exe\") or (ProcessCommandLine contains \"\\\\AppData\\\\Local\\\\Temp\" or ProcessCommandLine contains \"\\\\Users\\\\Public\\\\\" or ProcessCommandLine contains \"\\\\WINDOWS\\\\Temp\\\\\" or ProcessCommandLine contains \"%temp%\" or ProcessCommandLine contains \"%tmp%\" or ProcessCommandLine contains \"%appdata%\")) and (FolderPath endswith \"\\\\mofcomp.exe\" or ProcessVersionInfoOriginalFileName =~ \"mofcomp.exe\")) and (not((ProcessCommandLine endswith \".mof\" and InitiatingProcessFileName =~ \"C:\\\\Windows\\\\System32\\\\wbem\\\\WmiPrvSE.exe\" and ProcessCommandLine =~ \"C:\\\\Windows\\\\TEMP\\\\\"))) and (not((ProcessCommandLine has_all (\"C:\\\\Windows\\\\TEMP\\\\\") and ProcessCommandLine endswith \".mof\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects passwords dumps from Keychain Topic: proc_creation_macos_creds_from_keychain"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (FolderPath =~ \"/usr/bin/security\" and (ProcessCommandLine in~ (\"find-certificate\", \" export \"))) or (ProcessCommandLine in~ (\" dump-keychain \", \" login-keychain \"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects macOS Gatekeeper bypass via xattr utility Topic: proc_creation_macos_xattr_gatekeeper_bypass"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"-d\", \"com.apple.quarantine\")) and InitiatingProcessFolderPath =~ \"/xattr\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects potential DLL sideloading of \"SmadHook.dll\", a DLL used by SmadAV antivirus Topic: image_load_side_load_smadhook"}, {"role": "assistant", "content": "DeviceImageLoadEvents\n| where (FolderPath endswith \"\\\\SmadHook32c.dll\" or FolderPath endswith \"\\\\SmadHook64c.dll\") and (not(((InitiatingProcessFolderPath in~ (\"C:\\\\Program Files (x86)\\\\SMADAV\\\\SmadavProtect32.exe\", \"C:\\\\Program Files (x86)\\\\SMADAV\\\\SmadavProtect64.exe\", \"C:\\\\Program Files\\\\SMADAV\\\\SmadavProtect32.exe\", \"C:\\\\Program Files\\\\SMADAV\\\\SmadavProtect64.exe\")) and (FolderPath startswith \"C:\\\\Program Files (x86)\\\\SMADAV\\\\\" or FolderPath startswith \"C:\\\\Program Files\\\\SMADAV\\\\\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects suspicious interactive bash as a parent to rather uncommon child processes Topic: proc_creation_lnx_susp_interactive_bash"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessCommandLine =~ \"bash -i\" and ((ProcessCommandLine in~ (\"-c import \", \"base64\", \"pty.spawn\")) or (InitiatingProcessFolderPath in~ (\"whoami\", \"iptables\", \"/ncat\", \"/nc\", \"/netcat\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects filename pattern of email related data used by UNC4841 for staging and exfiltration Topic: file_event_lnx_apt_unc4841_exfil_mail_pattern"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName =~ \"/mail/tmp/[a-zA-Z0-9]{3}[0-9]{3}\\\\.tar\\\\.gz\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects suspicious mshta process execution patterns Topic: proc_creation_win_mshta_susp_pattern"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((FolderPath endswith \"\\\\mshta.exe\" or ProcessVersionInfoOriginalFileName =~ \"MSHTA.EXE\") and ((InitiatingProcessFileName in~ (\"\\\\cmd.exe\", \"\\\\cscript.exe\", \"\\\\powershell.exe\", \"\\\\pwsh.exe\", \"\\\\regsvr32.exe\", \"\\\\rundll32.exe\", \"\\\\wscript.exe\")) and (ProcessCommandLine in~ (\"\\\\AppData\\\\Local\\\\\", \"C:\\\\ProgramData\\\\\", \"C:\\\\Users\\\\Public\\\\\", \"C:\\\\Windows\\\\Temp\\\\\")))) or ((FolderPath endswith \"\\\\mshta.exe\" or ProcessVersionInfoOriginalFileName =~ \"MSHTA.EXE\") and (not(((FolderPath startswith \"C:\\\\Windows\\\\System32\\\\\" or FolderPath startswith \"C:\\\\Windows\\\\SysWOW64\\\\\") or (ProcessCommandLine contains \".htm\" or ProcessCommandLine contains \".hta\") or (ProcessCommandLine endswith \"mshta.exe\" or ProcessCommandLine endswith \"mshta\")))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects usage of namp/zenmap. Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation Topic: proc_creation_win_pua_nmap_zenmap"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (FolderPath endswith \"\\\\nmap.exe\" or FolderPath endswith \"\\\\zennmap.exe\") or (ProcessVersionInfoOriginalFileName in~ (\"nmap.exe\", \"zennmap.exe\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the creation of a file with the name \"code_tunnel.json\" which indicate execution and usage of VsCode tunneling utility. Attackers can abuse this functionality to establish a C2 channel\n Topic: file_event_win_vscode_tunnel_indicators"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName =~ \"\\\\code_tunnel.json\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects PowerShell writing startup shortcuts.\nThis procedure was highlighted in Red Canary Intel Insights Oct. 2021, \"We frequently observe adversaries using PowerShell to write malicious .lnk files into the startup directory to establish persistence.\nAccordingly, this detection opportunity is likely to identify persistence mechanisms in multiple threats.\nIn the context of Yellow Cockatoo, this persistence mechanism eventually launches the command-line script that leads to the installation of a malicious DLL\"\n Topic: file_event_win_powershell_startup_shortcuts"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName =~ \".lnk\" and (InitiatingProcessFolderPath in~ (\"\\\\powershell.exe\", \"\\\\pwsh.exe\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects Non-Standard tools initiating a connection over port 3389 indicating possible lateral movement.\nAn initial baseline is required before using this utility to exclude third party RDP tooling that you might use.\n Topic: net_connection_win_rdp_outbound_over_non_standard_tools"}, {"role": "assistant", "content": "DeviceNetworkEvents\n| where (InitiatingProcessId =~ \"true\" and RemotePort == 3389) and (not((InitiatingProcessFolderPath in~ (\"C:\\\\Windows\\\\System32\\\\mstsc.exe\", \"C:\\\\Windows\\\\SysWOW64\\\\mstsc.exe\")))) and (not(((InitiatingProcessFolderPath in~ (\"\\\\Avast Software\\\\Avast\\\\AvastSvc.exe\", \"\\\\Avast\\\\AvastSvc.exe\")) or InitiatingProcessFolderPath =~ \"C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\" or (InitiatingProcessFolderPath =~ \"C:\\\\Windows\\\\System32\\\\dns.exe\" and Protocol =~ \"udp\" and LocalPort == 53) or InitiatingProcessFolderPath =~ \"\" or InitiatingProcessFolderPath =~ \"C:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe\" or isnull(InitiatingProcessFolderPath) or InitiatingProcessFolderPath =~ \"\\\\Ranger\\\\SentinelRanger.exe\" or InitiatingProcessFolderPath =~ \"C:\\\\Program Files\\\\SplunkUniversalForwarder\\\\bin\\\\\" or InitiatingProcessFolderPath =~ \"\\\\RDCMan.exe\" or (InitiatingProcessFolderPath in~ (\"\\\\FSAssessment.exe\", \"\\\\FSDiscovery.exe\", \"\\\\MobaRTE.exe\", \"\\\\mRemote.exe\", \"\\\\mRemoteNG.exe\", \"\\\\Passwordstate.exe\", \"\\\\RemoteDesktopManager.exe\", \"\\\\RemoteDesktopManager64.exe\", \"\\\\RemoteDesktopManagerFree.exe\", \"\\\\RSSensor.exe\", \"\\\\RTS2App.exe\", \"\\\\RTSApp.exe\", \"\\\\spiceworks-finder.exe\", \"\\\\Terminals.exe\", \"\\\\ws_TunnelService.exe\")) or (InitiatingProcessFolderPath in~ (\"\\\\thor.exe\", \"\\\\thor64.exe\")) or (InitiatingProcessFolderPath in~ (\"C:\\\\Program Files\\\\TSplus\\\\Java\\\\bin\\\\HTML5service.exe\", \"C:\\\\Program Files (x86)\\\\TSplus\\\\Java\\\\bin\\\\HTML5service.exe\")) or InitiatingProcessFolderPath =~ \"<unknown process>\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Attackers can use print.exe for remote file copy Topic: proc_creation_win_print_remote_file_copy"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine startswith \"print\" and (ProcessCommandLine in~ (\"/D\", \".exe\")) and InitiatingProcessFolderPath =~ \"\\\\print.exe\") and (not(ProcessCommandLine =~ \"print.exe\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of the \"finger.exe\" utility.\nFinger.EXE or \"TCPIP Finger Command\" is an old utility that is still present on modern Windows installation. It Displays information about users on a specified remote computer (typically a UNIX computer) that is running the finger service or daemon.\nDue to the old nature of this utility and the rareness of machines having the finger service. Any execution of \"finger.exe\" can be considered \"suspicious\" and worth investigating.\n Topic: proc_creation_win_finger_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessVersionInfoOriginalFileName =~ \"finger.exe\" or FolderPath endswith \"\\\\finger.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of the LaZagne. A utility used to retrieve multiple types of passwords stored on a local computer.\nLaZagne has been leveraged multiple times by threat actors in order to dump credentials.\n Topic: proc_creation_win_hktl_lazagne"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFolderPath =~ \"\\\\lazagne.exe\" or ((ProcessCommandLine endswith \".exe all\" or ProcessCommandLine endswith \".exe browsers\" or ProcessCommandLine endswith \".exe chats\" or ProcessCommandLine endswith \".exe databases\" or ProcessCommandLine endswith \".exe games\" or ProcessCommandLine endswith \".exe git\" or ProcessCommandLine endswith \".exe mails\" or ProcessCommandLine endswith \".exe maven\" or ProcessCommandLine endswith \".exe memory\" or ProcessCommandLine endswith \".exe multimedia\" or ProcessCommandLine endswith \".exe sysadmin\" or ProcessCommandLine endswith \".exe unused\" or ProcessCommandLine endswith \".exe wifi\" or ProcessCommandLine endswith \".exe windows\") and (FolderPath contains \":\\\\PerfLogs\\\\\" or FolderPath contains \":\\\\ProgramData\\\\\" or FolderPath contains \":\\\\Temp\\\\\" or FolderPath contains \":\\\\Tmp\\\\\" or FolderPath contains \":\\\\Windows\\\\Temp\\\\\" or FolderPath contains \"\\\\AppData\\\\\" or FolderPath contains \"\\\\Downloads\\\\\" or FolderPath contains \"\\\\Users\\\\Public\\\\\")) or ((ProcessCommandLine in~ (\"all \", \"browsers \", \"chats \", \"databases \", \"games \", \"git \", \"mails \", \"maven \", \"memory \", \"multimedia \", \"php \", \"svn \", \"sysadmin \", \"unused \", \"wifi \", \"windows \")) and (ProcessCommandLine in~ (\"-oA\", \"-oJ\", \"-oN\", \"-output\", \"-password\", \"-1Password\", \"-apachedirectorystudio\", \"-autologon\", \"-ChromiumBased\", \"-composer\", \"-coreftp\", \"-credfiles\", \"-credman\", \"-cyberduck\", \"-dbvis\", \"-EyeCon\", \"-filezilla\", \"-filezillaserver\", \"-ftpnavigator\", \"-galconfusion\", \"-gitforwindows\", \"-hashdump\", \"-iisapppool\", \"-IISCentralCertP\", \"-kalypsomedia\", \"-keepass\", \"-keepassconfig\", \"-lsa_secrets\", \"-mavenrepositories\", \"-memory_dump\", \"-Mozilla\", \"-mRemoteNG\", \"-mscache\", \"-opensshforwindows\", \"-openvpn\", \"-outlook\", \"-pidgin\", \"-postgresql\", \"-psi-im\", \"-puttycm\", \"-pypykatz\", \"-Rclone\", \"-rdpmanager\", \"-robomongo\", \"-roguestale\", \"-skype\", \"-SQLDeveloper\", \"-squirrel\", \"-tortoise\", \"-turba\", \"-UCBrowser\", \"-unattended\", \"-vault\", \"-vaultfiles\", \"-vnc\", \"-windows\", \"-winscp\", \"-wsl\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects signs of the WMI script host process \"scrcons.exe\" loading scripting DLLs which could indicates WMI ActiveScriptEventConsumers EventConsumers activity. Topic: image_load_scrcons_wmi_scripteventconsumer"}, {"role": "assistant", "content": "DeviceImageLoadEvents\n| where (FolderPath endswith \"\\\\vbscript.dll\" or FolderPath endswith \"\\\\wbemdisp.dll\" or FolderPath endswith \"\\\\wshom.ocx\" or FolderPath endswith \"\\\\scrrun.dll\") and InitiatingProcessFolderPath =~ \"\\\\scrcons.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "One way Qbot steals sensitive information is by extracting browser data from Internet Explorer and Microsoft Edge by using the built-in utility esentutl.exe Topic: proc_creation_win_esentutl_webcache"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine contains \"-r\" or ProcessCommandLine contains \"/r\" or ProcessCommandLine contains \"\u2013r\" or ProcessCommandLine contains \"\u2014r\" or ProcessCommandLine contains \"\u2015r\") and (FolderPath endswith \"\\\\esentutl.exe\" or ProcessVersionInfoOriginalFileName =~ \"esentutl.exe\") and ProcessCommandLine =~ \"\\\\Windows\\\\WebCache\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the pattern of UAC Bypass using Event Viewer RecentViews Topic: proc_creation_win_uac_bypass_eventvwr_recentviews"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\"\\\\Event Viewer\\\\RecentViews\", \"\\\\EventV~1\\\\RecentViews\")) and ProcessCommandLine =~ \">\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of the AgentExecutor.exe binary. Which can be abused as a LOLBIN to execute powershell scripts with the ExecutionPolicy \"Bypass\" or any binary named \"powershell.exe\" located in the path provided by 6th positional argument Topic: proc_creation_win_agentexecutor_susp_usage"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((ProcessCommandLine in~ (\" -powershell\", \" -remediationScript\")) and (FolderPath endswith \"\\\\AgentExecutor.exe\" or ProcessVersionInfoOriginalFileName =~ \"AgentExecutor.exe\")) and (not((InitiatingProcessFileName =~ \"\\\\Microsoft.Management.Services.IntuneWindowsAgent.exe\" or (ProcessCommandLine in~ (\"C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\\", \"C:\\\\Windows\\\\SysWOW64\\\\WindowsPowerShell\\\\v1.0\\\\\")))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of \"msdt.exe\" using an answer file which is simulating the legitimate way of calling msdt via \"pcwrun.exe\" (For example from the compatibility tab) Topic: proc_creation_win_lolbin_msdt_answer_file"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((ProcessCommandLine in~ (\" -af \", \" /af \")) and (ProcessCommandLine =~ \"\\\\WINDOWS\\\\diagnostics\\\\index\\\\PCWDiagnostic.xml\" and InitiatingProcessFolderPath =~ \"\\\\msdt.exe\")) and (not(InitiatingProcessFileName =~ \"\\\\pcwrun.exe\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects potentially suspicious child process of SSH process (sshd) with a specific execution user. This could be a sign of potential exploitation of CVE-2024-3094.\n Topic: proc_creation_lnx_exploit_cve_2024_3094_sshd_child_process"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine startswith \"bash -c\" or ProcessCommandLine startswith \"sh -c\") and InitiatingProcessFileName =~ \"/sshd\" and AccountName =~ \"root\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects installation of new certificate on the system which attackers may use to avoid warnings when connecting to controlled web servers or C2s Topic: proc_creation_lnx_install_root_certificate"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFolderPath in~ (\"/update-ca-certificates\", \"/update-ca-trust\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects changes to the Netsh registry key to add a new DLL value. This change might be an indication of a potential persistence attempt by adding a malicious Netsh helper\n Topic: registry_set_netsh_helper_dll_potential_persistence"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where RegistryKey contains \"\\\\SOFTWARE\\\\Microsoft\\\\NetSh\" and RegistryValueData contains \".dll\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects calls to cmdlets that are used to export certificates from the local certificate store. Threat actors were seen abusing this to steal private keys from compromised machines. Topic: proc_creation_win_powershell_export_certificate"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine in~ (\"Export-PfxCertificate \", \"Export-Certificate \")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects a specific command line of \"regsvr32\" where the \"calc\" keyword is used in conjunction with the \"/s\" flag. This behavior is often seen used by Qakbot Topic: proc_creation_win_malware_qakbot_regsvr32_calc_pattern"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine contains \" -s\" or ProcessCommandLine contains \" /s\" or ProcessCommandLine contains \" \u2013s\" or ProcessCommandLine contains \" \u2014s\" or ProcessCommandLine contains \" \u2015s\") and ProcessCommandLine endswith \" calc\" and InitiatingProcessFolderPath =~ \"\\\\regsvr32.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the use of NPS, a port forwarding and intranet penetration proxy server Topic: proc_creation_win_pua_nps"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\" -server=\", \" -vkey=\", \" -password=\")) or ProcessCommandLine =~ \" -config=npc\" or (MD5 startswith \"AE8ACF66BFE3A44148964048B826D005\" or SHA1 startswith \"CEA49E9B9B67F3A13AD0BE1C2655293EA3C18181\" or SHA256 startswith \"5A456283392FFCEEEACA3D3426C306EB470304637520D72FED1CC1FEBBBD6856\") or InitiatingProcessFolderPath =~ \"\\\\npc.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects usage of nohup which could be leveraged by an attacker to keep a process running or break out from restricted environments Topic: proc_creation_lnx_nohup"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFolderPath =~ \"/nohup\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects usage of the Get-Clipboard cmdlet via CLI Topic: proc_creation_win_powershell_get_clipboard"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \"Get-Clipboard\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of the \"net.exe\" command in order to add a group named \"ESX Admins\".\nThis could indicates a potential exploitation attempt of CVE-2024-37085, which allows an attacker to elevate their privileges to full administrative access on an domain-joined ESXi hypervisor.\nVMware ESXi hypervisors joined to an Active Directory domain consider any member of a domain group named \"ESX Admins\" to have full administrative access by default.\n Topic: proc_creation_win_exploit_cve_2024_37085_esxi_admins_group_creation"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ((ProcessCommandLine in~ (\"/add\", \"/domain\", \"ESX Admins\", \"group\")) and ((FolderPath endswith \"\\\\net.exe\" or FolderPath endswith \"\\\\net1.exe\") or (ProcessVersionInfoOriginalFileName in~ (\"net.exe\", \"net1.exe\")))) or ((ProcessCommandLine in~ (\"New-ADGroup\", \"ESX Admins\")) and ((FolderPath endswith \"\\\\PowerShell.exe\" or FolderPath endswith \"\\\\pwsh.exe\") or (ProcessVersionInfoOriginalFileName in~ (\"PowerShell.exe\", \"pwsh.dll\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of the hacktool SharPersist - used to deploy various different kinds of persistence mechanisms Topic: proc_creation_win_hktl_sharpersist"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine in~ (\" -t schtask -c \", \" -t startupfolder -c \")) or (ProcessCommandLine in~ (\" -t reg -c \", \" -m add\")) or (ProcessCommandLine in~ (\" -t service -c \", \" -m add\")) or (ProcessCommandLine in~ (\" -t schtask -c \", \" -m add\")) or (FolderPath endswith \"\\\\SharPersist.exe\" or ProcessVersionInfoProductName =~ \"SharPersist\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects activity that indicates a user disabling the ability for Antivirus mini filter to inspect a \"Dev Drive\".\n Topic: registry_set_devdrv_disallow_antivirus_filter"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where RegistryKey endswith \"\\\\FilterManager\\\\FltmgrDevDriveAllowAntivirusFilter\" and RegistryValueData =~ \"DWORD (0x00000000)\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects potential persistence activity via outlook today page.\nAn attacker can set a custom page to execute arbitrary code and link to it via the registry values \"URL\" and \"UserDefinedUrl\".\n Topic: registry_set_persistence_outlook_todaypage"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where (RegistryKey endswith \"Software\\\\Microsoft\\\\Office*\" and RegistryKey endswith \"\\\\Outlook\\\\Today*\") and ((RegistryValueData =~ \"DWORD (0x00000001)\" and RegistryKey endswith \"\\\\Stamp\") or (RegistryKey endswith \"\\\\URL\" or RegistryKey endswith \"\\\\UserDefinedUrl\")) and (not(InitiatingProcessFolderPath =~ \"\\\\OfficeClickToRun.exe\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of the builtin \"copy\" command that targets a shadow copy (sometimes used to copy registry hives that are in use) Topic: proc_creation_win_cmd_shadowcopy_access"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine in~ (\"copy \", \"\\\\\\\\?\\\\GLOBALROOT\\\\Device\\\\HarddiskVolumeShadowCopy\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "HxTsr.exe is a Microsoft compressed executable file called Microsoft Outlook Communications.\nHxTsr.exe is part of Outlook apps, because it resides in a hidden \"WindowsApps\" subfolder of \"C:\\Program Files\".\nAny instances of hxtsr.exe not in this folder may be malware camouflaging itself as HxTsr.exe\n Topic: proc_creation_win_hxtsr_masquerading"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessFolderPath =~ \"\\\\hxtsr.exe\" and (not((FolderPath contains \":\\\\program files\\\\windowsapps\\\\microsoft.windowscommunicationsapps_\" and InitiatingProcessFolderPath =~ \"\\\\hxtsr.exe\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects suspicious Windows Update Agent activity in which a wuauclt.exe process command line doesnt contain any command line flags\n Topic: proc_creation_win_wuauclt_no_cli_flags_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (FolderPath endswith \"\\\\Wuauclt.exe\" or ProcessVersionInfoOriginalFileName =~ \"Wuauclt.exe\") and (ProcessCommandLine endswith \"Wuauclt\" or ProcessCommandLine endswith \"Wuauclt.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects default RemCom service filename which indicates RemCom service installation and execution Topic: file_event_win_remcom_service"}, {"role": "assistant", "content": "DeviceFileEvents\n| where FileName =~ \"\\\\RemComSvc.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects adding and using Exchange PowerShell snap-ins to export mailbox data. As seen used by HAFNIUM and APT27 Topic: proc_creation_win_powershell_snapins_hafnium"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (ProcessCommandLine =~ \"Add-PSSnapin\" and ((FolderPath endswith \"\\\\powershell.exe\" or FolderPath endswith \"\\\\pwsh.exe\") or (ProcessVersionInfoOriginalFileName in~ (\"PowerShell.EXE\", \"pwsh.dll\"))) and (ProcessCommandLine in~ (\"Microsoft.Exchange.Powershell.Snapin\", \"Microsoft.Exchange.Management.PowerShell.SnapIn\"))) and (not((InitiatingProcessFileName =~ \"C:\\\\Windows\\\\System32\\\\msiexec.exe\" and ProcessCommandLine =~ \"$exserver=Get-ExchangeServer ([Environment]::MachineName) -ErrorVariable exerr 2> $null\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the execution of a system command via the ScreenConnect RMM service. Topic: proc_creation_win_remote_access_tools_screenconnect_remote_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine =~ \"\\\\TEMP\\\\ScreenConnect\\\\\" and (FolderPath endswith \"\\\\cmd.exe\" or ProcessVersionInfoOriginalFileName =~ \"Cmd.Exe\") and InitiatingProcessFileName =~ \"\\\\ScreenConnect.ClientService.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the use of Windows Credential Editor (WCE) Topic: registry_event_hack_wce_reg"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where RegistryKey contains \"Services\\\\WCESERVICE\\\\Start\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Executes SCT script using scrobj.dll from a command in entered into a specially prepared INF file. Topic: proc_creation_win_infdefaultinstall_execute_sct_scripts"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine in~ (\"InfDefaultInstall.exe \", \".inf\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects programs that connect to known malware callback ports based on statistical analysis from two different sandbox system databases\n Topic: net_connection_win_susp_malware_callback_port"}, {"role": "assistant", "content": "DeviceNetworkEvents\n| where (InitiatingProcessId =~ \"true\" and (RemotePort in~ (\"100\", \"198\", \"200\", \"243\", \"473\", \"666\", \"700\", \"743\", \"777\", \"1443\", \"1515\", \"1777\", \"1817\", \"1904\", \"1960\", \"2443\", \"2448\", \"3360\", \"3675\", \"3939\", \"4040\", \"4433\", \"4438\", \"4443\", \"4444\", \"4455\", \"5445\", \"5552\", \"5649\", \"6625\", \"7210\", \"7777\", \"8143\", \"8843\", \"9631\", \"9943\", \"10101\", \"12102\", \"12103\", \"12322\", \"13145\", \"13394\", \"13504\", \"13505\", \"13506\", \"13507\", \"14102\", \"14103\", \"14154\", \"49180\", \"65520\", \"65535\"))) and (not((InitiatingProcessRemoteSessionDeviceName in~ (\"127.0.0.0/8\", \"10.0.0.0/8\", \"172.16.0.0/12\", \"192.168.0.0/16\", \"169.254.0.0/16\", \"::1/128\", \"fe80::/10\", \"fc00::/7\")))) and (not((InitiatingProcessFolderPath in~ (\"C:\\\\Program Files\\\\\", \"C:\\\\Program Files (x86)\\\\\"))))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects execution of ChromeLoader malware via a registered scheduled task Topic: proc_creation_win_malware_chrome_loader_execution"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where InitiatingProcessCommandLine =~ \"-ExecutionPolicy Bypass -WindowStyle Hidden -E JAB\" and InitiatingProcessFileName =~ \"\\\\powershell.exe\" and ProcessCommandLine =~ \"--load-extension=\\\"*\\\\Appdata\\\\local\\\\chrome\\\"\" and InitiatingProcessFolderPath =~ \"\\\\chrome.exe\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the creation of a new PowerShell module \".psm1\", \".psd1\", \".dll\", \".ps1\", etc. Topic: file_event_win_powershell_module_creation"}, {"role": "assistant", "content": "DeviceFileEvents\n| where (FileName in~ (\"\\\\WindowsPowerShell\\\\Modules\\\\\", \"\\\\PowerShell\\\\7\\\\Modules\\\\\")) and (InitiatingProcessFolderPath in~ (\"\\\\powershell.exe\", \"\\\\pwsh.exe\"))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detect use of scrobj.dll as this DLL looks for the ScriptletURL key to get the location of the script to execute Topic: registry_set_persistence_scrobj_dll"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where RegistryKey endswith \"InprocServer32\\\\(Default)\" and RegistryValueData =~ \"C:\\\\WINDOWS\\\\system32\\\\scrobj.dll\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects filename indicators that contain a specific typo seen used by the Small Sieve malware. Topic: file_event_win_malware_small_sieve_evasion_typo"}, {"role": "assistant", "content": "DeviceFileEvents\n| where (FileName =~ \"Microsift\" and (FileName in~ (\"\\\\Roaming\\\\\", \"\\\\Local\\\\\"))) or FileName =~ \"\\\\AppData\\\\Local\\\\MicrosoftWindowsOutlookDataPlus.txt\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects the use of various web request commands with commandline tools and Windows PowerShell cmdlets (including aliases) via CommandLine Topic: proc_creation_win_susp_web_request_cmd_and_cmdlets"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine in~ (\"[System.Net.WebRequest]::create\", \"curl \", \"Invoke-RestMethod\", \"Invoke-WebRequest\", \"iwr \", \"Net.WebClient\", \"Resume-BitsTransfer\", \"Start-BitsTransfer\", \"wget \", \"WinHttp.WinHttpRequest\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects Certify a tool for Active Directory certificate abuse based on PE metadata characteristics and common command line arguments. Topic: proc_creation_win_hktl_certify"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where (FolderPath endswith \"\\\\Certify.exe\" or ProcessVersionInfoOriginalFileName =~ \"Certify.exe\" or ProcessVersionInfoFileDescription contains \"Certify\") or ((ProcessCommandLine in~ (\".exe cas \", \".exe find \", \".exe pkiobjects \", \".exe request \", \".exe download \")) and (ProcessCommandLine in~ (\" /vulnerable\", \" /template:\", \" /altname:\", \" /domain:\", \" /path:\", \" /ca:\")))"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects attempts to masquerade as legitimate files by adding a space to the end of the filename. Topic: proc_creation_macos_space_after_filename"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine endswith \" \" or InitiatingProcessFolderPath =~ \" \""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects changes to HKCU\\Software\\Classes\\Folder\\shell\\open\\command\\DelegateExecute Topic: registry_set_comhijack_sdclt"}, {"role": "assistant", "content": "DeviceRegistryEvents\n| where RegistryKey contains \"\\\\Software\\\\Classes\\\\Folder\\\\shell\\\\open\\\\command\\\\DelegateExecute\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects DLL sideloading activity seen used by Diamond Sleet APT Topic: image_load_apt_diamond_sleet_side_load"}, {"role": "assistant", "content": "DeviceImageLoadEvents\n| where (FolderPath endswith \":\\\\ProgramData\\\\Version.dll\" and InitiatingProcessFolderPath =~ \":\\\\ProgramData\\\\clip.exe\") or (FolderPath endswith \":\\\\ProgramData\\\\DSROLE.dll\" and InitiatingProcessFolderPath =~ \":\\\\ProgramData\\\\wsmprovhost.exe\")"}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.\nThese services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.\nRemote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n Topic: proc_creation_win_remote_access_tools_screenconnect"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessVersionInfoFileDescription =~ \"ScreenConnect Service\" or ProcessVersionInfoProductName =~ \"ScreenConnect\" or ProcessVersionInfoCompanyName =~ \"ScreenConnect Software\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects listing of the inodes of the \"/\" directory to determine if the we are running inside of a container. Topic: proc_creation_lnx_susp_inod_listing"}, {"role": "assistant", "content": "DeviceProcessEvents\n| where ProcessCommandLine endswith \" /\" and ((ProcessCommandLine contains \" -\" and ProcessCommandLine contains \"i\") or (ProcessCommandLine contains \" -\" and ProcessCommandLine contains \"d\")) and InitiatingProcessFolderPath =~ \"/ls\""}]}
{"messages": [{"role": "system", "content": "You are an expert in creating Kusto Query Language (KQL) queries. You are given a description and you will output the KQL query"}, {"role": "user", "content": "Detects potential DLL sideloading of \"waveedit.dll\", which is part of the Nero WaveEditor audio editing software. Topic: image_load_side_load_waveedit"}, {"role": "assistant", "content": "DeviceImageLoadEvents\n| where FolderPath endswith \"\\\\waveedit.dll\" and (not(((InitiatingProcessFolderPath in~ (\"C:\\\\Program Files (x86)\\\\Nero\\\\Nero Apps\\\\Nero WaveEditor\\\\waveedit.exe\", \"C:\\\\Program Files\\\\Nero\\\\Nero Apps\\\\Nero WaveEditor\\\\waveedit.exe\")) and (FolderPath startswith \"C:\\\\Program Files (x86)\\\\Nero\\\\Nero Apps\\\\Nero WaveEditor\\\\\" or FolderPath startswith \"C:\\\\Program Files\\\\Nero\\\\Nero Apps\\\\Nero WaveEditor\\\\\"))))"}]}
