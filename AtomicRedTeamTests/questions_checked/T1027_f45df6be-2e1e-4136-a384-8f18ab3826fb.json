{
    "technique_id": "T1027",
    "question_id": "f45df6be-2e1e-4136-a384-8f18ab3826fb",
    "context": "A Linux host appears to have processed a base64‐encoded payload that was decoded into a shell script and then executed.",
    "objective": "Determine the name of the script file that was created and run after the base64 decode operation.",
    "technical_details": {
        "command_analysis": "The attacker used either “base64 -d” or “b64decode -r” to decode a file named encoded.dat into an executable script.",
        "detection_approach": "Inspect file creation and process execution events on the Linux endpoint for evidence of a base64 decode command writing out a script and then invoking it."
    },
    "thinking_how_to_phrase_question_and_answer": "Frame the question to lead the analyst toward searching for file write events under /tmp involving base64 decoding, followed by a process execution of the resulting script. The answer should be the exact script filename.",
    "prompt": "On a Linux system, identify the script that was generated by decoding a base64 data file and then executed. What was the filename of that script?",
    "answer": [
        "art.sh"
    ],
    "difficulty": "medium",
    "KQL_query": "let linuxDevices = DeviceInfo\n| where OSPlatform has \"Linux\"\n| project DeviceId;\n\nlet decodeEvents = DeviceProcessEvents\n| where DeviceId in (linuxDevices)\n| where (ProcessCommandLine has \"base64 -d\" or ProcessCommandLine has \"b64decode -r\") and ProcessCommandLine has \"encoded.dat\"\n| project DeviceId, DecodeProcessId = ProcessId, DecodeTime = TimeGenerated;\n\nlet createdScripts = DeviceFileEvents\n| where DeviceId in (linuxDevices)\n| where ActionType == \"FileCreated\"\n| where FileName endswith \".sh\"\n| project DeviceId, ScriptName = FileName, CreationTime = TimeGenerated, ParentProcessId = InitiatingProcessId;\n\nlet scriptExecutions = DeviceProcessEvents\n| where DeviceId in (linuxDevices)\n| where ProcessCommandLine contains \".sh\"\n| project DeviceId, ExecutionTime = TimeGenerated, ExecutionCommandLine = ProcessCommandLine;\n\ndecodeEvents\n| join kind=inner createdScripts on DeviceId\n| where ParentProcessId == DecodeProcessId and CreationTime between (DecodeTime .. DecodeTime + 1m)\n| project DeviceId, ScriptName, CreationTime, DecodeTime\n| join kind=inner scriptExecutions on DeviceId\n| where ExecutionTime between (CreationTime .. CreationTime + 5m) and ExecutionCommandLine contains ScriptName\n| distinct ScriptName",
    "KQL_validation_message": "KQL query validation successful: The query results are structured with a header row ['ScriptName'] and a data row ['art.sh']. The expected answer is 'art.sh', which is directly present in the results. This indicates that the query successfully surfaced the required evidence to identify activities involving 'art.sh'.",
    "KQL_query_results": [
        [
            "ScriptName"
        ],
        [
            "art.sh"
        ]
    ]
}